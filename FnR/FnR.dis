
FnR:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x35b>
 248:	78 38                	js     282 <_init-0x34e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 ab f8 a9 42 c1    	add    %ch,-0x3ebd5608(%rbx)
 289:	57                   	push   %rdi
 28a:	56                   	push   %rsi
 28b:	6d                   	insl   (%dx),%es:(%rdi)
 28c:	21 bf 2b b3 f2 87    	and    %edi,-0x780d4cd5(%rdi)
 292:	22 2e                	and    (%rsi),%ch
 294:	4f 21 e3             	rex.WRXB and %r12,%r11
 297:	2b                   	.byte 0x2b

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	10 00                	adc    %al,(%rax)
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	58                   	pop    %rax
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 20                	add    %ah,(%rax)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 0b                	add    %cl,(%rbx)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 18                	add    %bl,(%rax)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 3a                	add    %bh,(%rdx)
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 74 00 00          	add    %dh,0x0(%rax,%rax,1)
 34b:	00 20                	add    %ah,(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 1f                	add    %bl,(%rdi)
 361:	00 00                	add    %al,(%rax)
 363:	00 12                	add    %dl,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 26                	add    %ah,(%rsi)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 83 00 00 00 20    	add    %al,0x20000000(%rbx)
	...
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 2b                	add    %ch,(%rbx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

00000000000003c0 <.dynstr>:
 3c0:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 3c4:	63 2e                	movslq (%rsi),%ebp
 3c6:	73 6f                	jae    437 <_init-0x199>
 3c8:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
 3cd:	74 73                	je     442 <_init-0x18e>
 3cf:	00 70 75             	add    %dh,0x75(%rax)
 3d2:	74 63                	je     437 <_init-0x199>
 3d4:	68 61 72 00 70       	pushq  $0x70007261
 3d9:	72 69                	jb     444 <_init-0x18c>
 3db:	6e                   	outsb  %ds:(%rsi),(%dx)
 3dc:	74 66                	je     444 <_init-0x18c>
 3de:	00 6d 61             	add    %ch,0x61(%rbp)
 3e1:	6c                   	insb   (%dx),%es:(%rdi)
 3e2:	6c                   	insb   (%dx),%es:(%rdi)
 3e3:	6f                   	outsl  %ds:(%rsi),(%dx)
 3e4:	63 00                	movslq (%rax),%eax
 3e6:	61                   	(bad)  
 3e7:	74 6f                	je     458 <_init-0x178>
 3e9:	69 00 5f 5f 63 78    	imul   $0x78635f5f,(%rax),%eax
 3ef:	61                   	(bad)  
 3f0:	5f                   	pop    %rdi
 3f1:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3f7:	7a 65                	jp     45e <_init-0x172>
 3f9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3fc:	6c                   	insb   (%dx),%es:(%rdi)
 3fd:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 404:	72 74                	jb     47a <_init-0x156>
 406:	5f                   	pop    %rdi
 407:	6d                   	insl   (%dx),%es:(%rdi)
 408:	61                   	(bad)  
 409:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 410:	43 5f                	rex.XB pop %r15
 412:	32 2e                	xor    (%rsi),%ch
 414:	32 2e                	xor    (%rsi),%ch
 416:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 41b:	4d 5f                	rex.WRB pop %r15
 41d:	64 65 72 65          	fs gs jb 486 <_init-0x14a>
 421:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 428:	4d 
 429:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 42b:	6f                   	outsl  %ds:(%rsi),(%dx)
 42c:	6e                   	outsb  %ds:(%rsi),(%dx)
 42d:	65 54                	gs push %rsp
 42f:	61                   	(bad)  
 430:	62                   	(bad)  
 431:	6c                   	insb   (%dx),%es:(%rdi)
 432:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 436:	67 6d                	insl   (%dx),%es:(%edi)
 438:	6f                   	outsl  %ds:(%rsi),(%dx)
 439:	6e                   	outsb  %ds:(%rsi),(%dx)
 43a:	5f                   	pop    %rdi
 43b:	73 74                	jae    4b1 <_init-0x11f>
 43d:	61                   	(bad)  
 43e:	72 74                	jb     4b4 <_init-0x11c>
 440:	5f                   	pop    %rdi
 441:	5f                   	pop    %rdi
 442:	00 5f 49             	add    %bl,0x49(%rdi)
 445:	54                   	push   %rsp
 446:	4d 5f                	rex.WRB pop %r15
 448:	72 65                	jb     4af <_init-0x121>
 44a:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 451:	4d 
 452:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 454:	6f                   	outsl  %ds:(%rsi),(%dx)
 455:	6e                   	outsb  %ds:(%rsi),(%dx)
 456:	65 54                	gs push %rsp
 458:	61                   	(bad)  
 459:	62                   	.byte 0x62
 45a:	6c                   	insb   (%dx),%es:(%rdi)
 45b:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000045e <.gnu.version>:
 45e:	00 00                	add    %al,(%rax)
 460:	02 00                	add    (%rax),%al
 462:	00 00                	add    %al,(%rax)
 464:	02 00                	add    (%rax),%al
 466:	02 00                	add    (%rax),%al
 468:	02 00                	add    (%rax),%al
 46a:	00 00                	add    %al,(%rax)
 46c:	02 00                	add    (%rax),%al
 46e:	02 00                	add    (%rax),%al
 470:	00 00                	add    %al,(%rax)
 472:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000478 <.gnu.version_r>:
 478:	01 00                	add    %eax,(%rax)
 47a:	01 00                	add    %eax,(%rax)
 47c:	01 00                	add    %eax,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	10 00                	adc    %al,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	75 1a                	jne    4a4 <_init-0x12c>
 48a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 490:	4c 00 00             	rex.WR add %r8b,(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000498 <.rela.dyn>:
 498:	98                   	cwtl   
 499:	0d 20 00 00 00       	or     $0x20,%eax
 49e:	00 00                	add    %al,(%rax)
 4a0:	08 00                	or     %al,(%rax)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	60                   	(bad)  
 4a9:	07                   	(bad)  
 4aa:	00 00                	add    %al,(%rax)
 4ac:	00 00                	add    %al,(%rax)
 4ae:	00 00                	add    %al,(%rax)
 4b0:	a0 0d 20 00 00 00 00 	movabs 0x80000000000200d,%al
 4b7:	00 08 
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 00                	add    %al,(%rax)
 4bd:	00 00                	add    %al,(%rax)
 4bf:	00 20                	add    %ah,(%rax)
 4c1:	07                   	(bad)  
 4c2:	00 00                	add    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	08 10                	or     %dl,(%rax)
 4ca:	20 00                	and    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	08 00                	or     %al,(%rax)
 4d2:	00 00                	add    %al,(%rax)
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	08 10                	or     %dl,(%rax)
 4da:	20 00                	and    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	d8 0f                	fmuls  (%rdi)
 4e2:	20 00                	and    %al,(%rax)
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 02                	add    %al,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 e0                	add    %ah,%al
 4f9:	0f 20 00             	mov    %cr0,%rax
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	06                   	(bad)  
 501:	00 00                	add    %al,(%rax)
 503:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 509 <_init-0xc7>
 509:	00 00                	add    %al,(%rax)
 50b:	00 00                	add    %al,(%rax)
 50d:	00 00                	add    %al,(%rax)
 50f:	00 e8                	add    %ch,%al
 511:	0f 20 00             	mov    %cr0,%rax
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	06                   	(bad)  
 519:	00 00                	add    %al,(%rax)
 51b:	00 06                	add    %al,(%rsi)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 f0                	add    %dh,%al
 529:	0f 20 00             	mov    %cr0,%rax
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	06                   	(bad)  
 531:	00 00                	add    %al,(%rax)
 533:	00 09                	add    %cl,(%rcx)
	...
 53d:	00 00                	add    %al,(%rax)
 53f:	00 f8                	add    %bh,%al
 541:	0f 20 00             	mov    %cr0,%rax
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	06                   	(bad)  
 549:	00 00                	add    %al,(%rax)
 54b:	00 0a                	add    %cl,(%rdx)
	...

Disassembly of section .rela.plt:

0000000000000558 <.rela.plt>:
 558:	b0 0f                	mov    $0xf,%al
 55a:	20 00                	and    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	07                   	(bad)  
 561:	00 00                	add    %al,(%rax)
 563:	00 01                	add    %al,(%rcx)
	...
 56d:	00 00                	add    %al,(%rax)
 56f:	00 b8 0f 20 00 00    	add    %bh,0x200f(%rax)
 575:	00 00                	add    %al,(%rax)
 577:	00 07                	add    %al,(%rdi)
 579:	00 00                	add    %al,(%rax)
 57b:	00 03                	add    %al,(%rbx)
	...
 585:	00 00                	add    %al,(%rax)
 587:	00 c0                	add    %al,%al
 589:	0f 20 00             	mov    %cr0,%rax
 58c:	00 00                	add    %al,(%rax)
 58e:	00 00                	add    %al,(%rax)
 590:	07                   	(bad)  
 591:	00 00                	add    %al,(%rax)
 593:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 59e:	00 00                	add    %al,(%rax)
 5a0:	c8 0f 20 00          	enterq $0x200f,$0x0
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	07                   	(bad)  
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 07                	add    %al,(%rdi)
	...
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 d0                	add    %dl,%al
 5b9:	0f 20 00             	mov    %cr0,%rax
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	07                   	(bad)  
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .init:

00000000000005d0 <_init>:
 5d0:	48 83 ec 08          	sub    $0x8,%rsp
 5d4:	48 8b 05 0d 0a 20 00 	mov    0x200a0d(%rip),%rax        # 200fe8 <__gmon_start__>
 5db:	48 85 c0             	test   %rax,%rax
 5de:	74 02                	je     5e2 <_init+0x12>
 5e0:	ff d0                	callq  *%rax
 5e2:	48 83 c4 08          	add    $0x8,%rsp
 5e6:	c3                   	retq   

Disassembly of section .plt:

00000000000005f0 <.plt>:
 5f0:	ff 35 aa 09 20 00    	pushq  0x2009aa(%rip)        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
 5f6:	ff 25 ac 09 20 00    	jmpq   *0x2009ac(%rip)        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
 5fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000600 <putchar@plt>:
 600:	ff 25 aa 09 20 00    	jmpq   *0x2009aa(%rip)        # 200fb0 <putchar@GLIBC_2.2.5>
 606:	68 00 00 00 00       	pushq  $0x0
 60b:	e9 e0 ff ff ff       	jmpq   5f0 <.plt>

0000000000000610 <puts@plt>:
 610:	ff 25 a2 09 20 00    	jmpq   *0x2009a2(%rip)        # 200fb8 <puts@GLIBC_2.2.5>
 616:	68 01 00 00 00       	pushq  $0x1
 61b:	e9 d0 ff ff ff       	jmpq   5f0 <.plt>

0000000000000620 <printf@plt>:
 620:	ff 25 9a 09 20 00    	jmpq   *0x20099a(%rip)        # 200fc0 <printf@GLIBC_2.2.5>
 626:	68 02 00 00 00       	pushq  $0x2
 62b:	e9 c0 ff ff ff       	jmpq   5f0 <.plt>

0000000000000630 <malloc@plt>:
 630:	ff 25 92 09 20 00    	jmpq   *0x200992(%rip)        # 200fc8 <malloc@GLIBC_2.2.5>
 636:	68 03 00 00 00       	pushq  $0x3
 63b:	e9 b0 ff ff ff       	jmpq   5f0 <.plt>

0000000000000640 <atoi@plt>:
 640:	ff 25 8a 09 20 00    	jmpq   *0x20098a(%rip)        # 200fd0 <atoi@GLIBC_2.2.5>
 646:	68 04 00 00 00       	pushq  $0x4
 64b:	e9 a0 ff ff ff       	jmpq   5f0 <.plt>

Disassembly of section .plt.got:

0000000000000650 <__cxa_finalize@plt>:
 650:	ff 25 a2 09 20 00    	jmpq   *0x2009a2(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 656:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000660 <_start>:
 660:	31 ed                	xor    %ebp,%ebp
 662:	49 89 d1             	mov    %rdx,%r9
 665:	5e                   	pop    %rsi
 666:	48 89 e2             	mov    %rsp,%rdx
 669:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 66d:	50                   	push   %rax
 66e:	54                   	push   %rsp
 66f:	4c 8d 05 fa 02 00 00 	lea    0x2fa(%rip),%r8        # 970 <__libc_csu_fini>
 676:	48 8d 0d 83 02 00 00 	lea    0x283(%rip),%rcx        # 900 <__libc_csu_init>
 67d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 76a <main>
 684:	ff 15 56 09 20 00    	callq  *0x200956(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 68a:	f4                   	hlt    
 68b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000690 <deregister_tm_clones>:
 690:	48 8d 3d 79 09 20 00 	lea    0x200979(%rip),%rdi        # 201010 <__TMC_END__>
 697:	55                   	push   %rbp
 698:	48 8d 05 71 09 20 00 	lea    0x200971(%rip),%rax        # 201010 <__TMC_END__>
 69f:	48 39 f8             	cmp    %rdi,%rax
 6a2:	48 89 e5             	mov    %rsp,%rbp
 6a5:	74 19                	je     6c0 <deregister_tm_clones+0x30>
 6a7:	48 8b 05 2a 09 20 00 	mov    0x20092a(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 6ae:	48 85 c0             	test   %rax,%rax
 6b1:	74 0d                	je     6c0 <deregister_tm_clones+0x30>
 6b3:	5d                   	pop    %rbp
 6b4:	ff e0                	jmpq   *%rax
 6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6bd:	00 00 00 
 6c0:	5d                   	pop    %rbp
 6c1:	c3                   	retq   
 6c2:	0f 1f 40 00          	nopl   0x0(%rax)
 6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6cd:	00 00 00 

00000000000006d0 <register_tm_clones>:
 6d0:	48 8d 3d 39 09 20 00 	lea    0x200939(%rip),%rdi        # 201010 <__TMC_END__>
 6d7:	48 8d 35 32 09 20 00 	lea    0x200932(%rip),%rsi        # 201010 <__TMC_END__>
 6de:	55                   	push   %rbp
 6df:	48 29 fe             	sub    %rdi,%rsi
 6e2:	48 89 e5             	mov    %rsp,%rbp
 6e5:	48 c1 fe 03          	sar    $0x3,%rsi
 6e9:	48 89 f0             	mov    %rsi,%rax
 6ec:	48 c1 e8 3f          	shr    $0x3f,%rax
 6f0:	48 01 c6             	add    %rax,%rsi
 6f3:	48 d1 fe             	sar    %rsi
 6f6:	74 18                	je     710 <register_tm_clones+0x40>
 6f8:	48 8b 05 f1 08 20 00 	mov    0x2008f1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 6ff:	48 85 c0             	test   %rax,%rax
 702:	74 0c                	je     710 <register_tm_clones+0x40>
 704:	5d                   	pop    %rbp
 705:	ff e0                	jmpq   *%rax
 707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 70e:	00 00 
 710:	5d                   	pop    %rbp
 711:	c3                   	retq   
 712:	0f 1f 40 00          	nopl   0x0(%rax)
 716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 71d:	00 00 00 

0000000000000720 <__do_global_dtors_aux>:
 720:	80 3d e9 08 20 00 00 	cmpb   $0x0,0x2008e9(%rip)        # 201010 <__TMC_END__>
 727:	75 2f                	jne    758 <__do_global_dtors_aux+0x38>
 729:	48 83 3d c7 08 20 00 	cmpq   $0x0,0x2008c7(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 730:	00 
 731:	55                   	push   %rbp
 732:	48 89 e5             	mov    %rsp,%rbp
 735:	74 0c                	je     743 <__do_global_dtors_aux+0x23>
 737:	48 8b 3d ca 08 20 00 	mov    0x2008ca(%rip),%rdi        # 201008 <__dso_handle>
 73e:	e8 0d ff ff ff       	callq  650 <__cxa_finalize@plt>
 743:	e8 48 ff ff ff       	callq  690 <deregister_tm_clones>
 748:	c6 05 c1 08 20 00 01 	movb   $0x1,0x2008c1(%rip)        # 201010 <__TMC_END__>
 74f:	5d                   	pop    %rbp
 750:	c3                   	retq   
 751:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 758:	f3 c3                	repz retq 
 75a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000760 <frame_dummy>:
 760:	55                   	push   %rbp
 761:	48 89 e5             	mov    %rsp,%rbp
 764:	5d                   	pop    %rbp
 765:	e9 66 ff ff ff       	jmpq   6d0 <register_tm_clones>

000000000000076a <main>:
 76a:	55                   	push   %rbp
 76b:	48 89 e5             	mov    %rsp,%rbp
 76e:	53                   	push   %rbx
 76f:	48 83 ec 48          	sub    $0x48,%rsp
 773:	89 7d bc             	mov    %edi,-0x44(%rbp)
 776:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 77a:	83 7d bc 02          	cmpl   $0x2,-0x44(%rbp)
 77e:	7f 25                	jg     7a5 <main+0x3b>
 780:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 784:	48 8b 00             	mov    (%rax),%rax
 787:	48 89 c6             	mov    %rax,%rsi
 78a:	48 8d 3d f7 01 00 00 	lea    0x1f7(%rip),%rdi        # 988 <_IO_stdin_used+0x8>
 791:	b8 00 00 00 00       	mov    $0x0,%eax
 796:	e8 85 fe ff ff       	callq  620 <printf@plt>
 79b:	b8 01 00 00 00       	mov    $0x1,%eax
 7a0:	e9 4d 01 00 00       	jmpq   8f2 <main+0x188>
 7a5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 7a9:	48 83 c0 08          	add    $0x8,%rax
 7ad:	48 8b 00             	mov    (%rax),%rax
 7b0:	48 89 c7             	mov    %rax,%rdi
 7b3:	e8 88 fe ff ff       	callq  640 <atoi@plt>
 7b8:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 7bb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 7bf:	48 83 c0 10          	add    $0x10,%rax
 7c3:	48 8b 00             	mov    (%rax),%rax
 7c6:	48 89 c7             	mov    %rax,%rdi
 7c9:	e8 72 fe ff ff       	callq  640 <atoi@plt>
 7ce:	89 45 d8             	mov    %eax,-0x28(%rbp)
 7d1:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 7d8:	eb 04                	jmp    7de <main+0x74>
 7da:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
 7de:	81 7d c4 7f 96 98 00 	cmpl   $0x98967f,-0x3c(%rbp)
 7e5:	76 f3                	jbe    7da <main+0x70>
 7e7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 7ea:	48 98                	cltq   
 7ec:	48 c1 e0 02          	shl    $0x2,%rax
 7f0:	48 89 c7             	mov    %rax,%rdi
 7f3:	e8 38 fe ff ff       	callq  630 <malloc@plt>
 7f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 7fc:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
 803:	eb 51                	jmp    856 <main+0xec>
 805:	48 8d 1d 5e ff ff ff 	lea    -0xa2(%rip),%rbx        # 76a <main>
 80c:	0f ae f0             	mfence 
 80f:	0f 01 f9             	rdtscp 
 812:	49 89 c2             	mov    %rax,%r10
 815:	48 8b 03             	mov    (%rbx),%rax
 818:	0f 01 f9             	rdtscp 
 81b:	4c 29 d0             	sub    %r10,%rax
 81e:	89 45 c0             	mov    %eax,-0x40(%rbp)
 821:	8b 45 c8             	mov    -0x38(%rbp),%eax
 824:	48 98                	cltq   
 826:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 82d:	00 
 82e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 832:	48 01 c2             	add    %rax,%rdx
 835:	8b 45 c0             	mov    -0x40(%rbp),%eax
 838:	89 02                	mov    %eax,(%rdx)
 83a:	0f ae 3b             	clflush (%rbx)
 83d:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
 844:	eb 04                	jmp    84a <main+0xe0>
 846:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
 84a:	8b 45 cc             	mov    -0x34(%rbp),%eax
 84d:	3b 45 d8             	cmp    -0x28(%rbp),%eax
 850:	7c f4                	jl     846 <main+0xdc>
 852:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
 856:	8b 45 c8             	mov    -0x38(%rbp),%eax
 859:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
 85c:	7c a7                	jl     805 <main+0x9b>
 85e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 865:	00 
 866:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 86d:	eb 3a                	jmp    8a9 <main+0x13f>
 86f:	8b 45 d0             	mov    -0x30(%rbp),%eax
 872:	48 98                	cltq   
 874:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 87b:	00 
 87c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 880:	48 01 d0             	add    %rdx,%rax
 883:	8b 00                	mov    (%rax),%eax
 885:	89 45 dc             	mov    %eax,-0x24(%rbp)
 888:	8b 45 dc             	mov    -0x24(%rbp),%eax
 88b:	48 01 45 e0          	add    %rax,-0x20(%rbp)
 88f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 892:	89 c6                	mov    %eax,%esi
 894:	48 8d 3d 16 01 00 00 	lea    0x116(%rip),%rdi        # 9b1 <_IO_stdin_used+0x31>
 89b:	b8 00 00 00 00       	mov    $0x0,%eax
 8a0:	e8 7b fd ff ff       	callq  620 <printf@plt>
 8a5:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
 8a9:	8b 45 d0             	mov    -0x30(%rbp),%eax
 8ac:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
 8af:	7c be                	jl     86f <main+0x105>
 8b1:	48 8d 3d fd 00 00 00 	lea    0xfd(%rip),%rdi        # 9b5 <_IO_stdin_used+0x35>
 8b8:	e8 53 fd ff ff       	callq  610 <puts@plt>
 8bd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 8c0:	48 63 c8             	movslq %eax,%rcx
 8c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8c7:	ba 00 00 00 00       	mov    $0x0,%edx
 8cc:	48 f7 f1             	div    %rcx
 8cf:	48 89 c6             	mov    %rax,%rsi
 8d2:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 9bf <_IO_stdin_used+0x3f>
 8d9:	b8 00 00 00 00       	mov    $0x0,%eax
 8de:	e8 3d fd ff ff       	callq  620 <printf@plt>
 8e3:	bf 0a 00 00 00       	mov    $0xa,%edi
 8e8:	e8 13 fd ff ff       	callq  600 <putchar@plt>
 8ed:	b8 00 00 00 00       	mov    $0x0,%eax
 8f2:	48 83 c4 48          	add    $0x48,%rsp
 8f6:	5b                   	pop    %rbx
 8f7:	5d                   	pop    %rbp
 8f8:	c3                   	retq   
 8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000000900 <__libc_csu_init>:
 900:	41 57                	push   %r15
 902:	41 56                	push   %r14
 904:	49 89 d7             	mov    %rdx,%r15
 907:	41 55                	push   %r13
 909:	41 54                	push   %r12
 90b:	4c 8d 25 86 04 20 00 	lea    0x200486(%rip),%r12        # 200d98 <__frame_dummy_init_array_entry>
 912:	55                   	push   %rbp
 913:	48 8d 2d 86 04 20 00 	lea    0x200486(%rip),%rbp        # 200da0 <__init_array_end>
 91a:	53                   	push   %rbx
 91b:	41 89 fd             	mov    %edi,%r13d
 91e:	49 89 f6             	mov    %rsi,%r14
 921:	4c 29 e5             	sub    %r12,%rbp
 924:	48 83 ec 08          	sub    $0x8,%rsp
 928:	48 c1 fd 03          	sar    $0x3,%rbp
 92c:	e8 9f fc ff ff       	callq  5d0 <_init>
 931:	48 85 ed             	test   %rbp,%rbp
 934:	74 20                	je     956 <__libc_csu_init+0x56>
 936:	31 db                	xor    %ebx,%ebx
 938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 93f:	00 
 940:	4c 89 fa             	mov    %r15,%rdx
 943:	4c 89 f6             	mov    %r14,%rsi
 946:	44 89 ef             	mov    %r13d,%edi
 949:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 94d:	48 83 c3 01          	add    $0x1,%rbx
 951:	48 39 dd             	cmp    %rbx,%rbp
 954:	75 ea                	jne    940 <__libc_csu_init+0x40>
 956:	48 83 c4 08          	add    $0x8,%rsp
 95a:	5b                   	pop    %rbx
 95b:	5d                   	pop    %rbp
 95c:	41 5c                	pop    %r12
 95e:	41 5d                	pop    %r13
 960:	41 5e                	pop    %r14
 962:	41 5f                	pop    %r15
 964:	c3                   	retq   
 965:	90                   	nop
 966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 96d:	00 00 00 

0000000000000970 <__libc_csu_fini>:
 970:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000974 <_fini>:
 974:	48 83 ec 08          	sub    $0x8,%rsp
 978:	48 83 c4 08          	add    $0x8,%rsp
 97c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000980 <_IO_stdin_used>:
 980:	01 00                	add    %eax,(%rax)
 982:	02 00                	add    (%rax),%al
 984:	00 00                	add    %al,(%rax)
 986:	00 00                	add    %al,(%rax)
 988:	55                   	push   %rbp
 989:	73 61                	jae    9ec <__GNU_EH_FRAME_HDR+0x28>
 98b:	67 65 3a 20          	cmp    %gs:(%eax),%ah
 98f:	25 73 20 3c 73       	and    $0x733c2073,%eax
 994:	61                   	(bad)  
 995:	6d                   	insl   (%dx),%es:(%rdi)
 996:	70 6c                	jo     a04 <__GNU_EH_FRAME_HDR+0x40>
 998:	65 5f                	gs pop %rdi
 99a:	63 6f 75             	movslq 0x75(%rdi),%ebp
 99d:	6e                   	outsb  %ds:(%rsi),(%dx)
 99e:	74 3e                	je     9de <__GNU_EH_FRAME_HDR+0x1a>
 9a0:	20 3c 64             	and    %bh,(%rsp,%riz,2)
 9a3:	65 6c                	gs insb (%dx),%es:(%rdi)
 9a5:	61                   	(bad)  
 9a6:	79 5f                	jns    a07 <__GNU_EH_FRAME_HDR+0x43>
 9a8:	63 6f 75             	movslq 0x75(%rdi),%ebp
 9ab:	6e                   	outsb  %ds:(%rsi),(%dx)
 9ac:	74 3e                	je     9ec <__GNU_EH_FRAME_HDR+0x28>
 9ae:	0d 0a 00 25 75       	or     $0x7525000a,%eax
 9b3:	2c 00                	sub    $0x0,%al
 9b5:	0a 61 76             	or     0x76(%rcx),%ah
 9b8:	65 72 61             	gs jb  a1c <__GNU_EH_FRAME_HDR+0x58>
 9bb:	67 65 3a 00          	cmp    %gs:(%eax),%al
 9bf:	25 6c 75 2c 00       	and    $0x2c756c,%eax

Disassembly of section .eh_frame_hdr:

00000000000009c4 <__GNU_EH_FRAME_HDR>:
 9c4:	01 1b                	add    %ebx,(%rbx)
 9c6:	03 3b                	add    (%rbx),%edi
 9c8:	38 00                	cmp    %al,(%rax)
 9ca:	00 00                	add    %al,(%rax)
 9cc:	06                   	(bad)  
 9cd:	00 00                	add    %al,(%rax)
 9cf:	00 2c fc             	add    %ch,(%rsp,%rdi,8)
 9d2:	ff                   	(bad)  
 9d3:	ff 84 00 00 00 8c fc 	incl   -0x3740000(%rax,%rax,1)
 9da:	ff                   	(bad)  
 9db:	ff ac 00 00 00 9c fc 	ljmp   *-0x3640000(%rax,%rax,1)
 9e2:	ff                   	(bad)  
 9e3:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
 9e7:	00 a6 fd ff ff c4    	add    %ah,-0x3b000003(%rsi)
 9ed:	00 00                	add    %al,(%rax)
 9ef:	00 3c ff             	add    %bh,(%rdi,%rdi,8)
 9f2:	ff                   	(bad)  
 9f3:	ff                   	(bad)  
 9f4:	ec                   	in     (%dx),%al
 9f5:	00 00                	add    %al,(%rax)
 9f7:	00 ac ff ff ff 34 01 	add    %ch,0x134ffff(%rdi,%rdi,8)
	...

Disassembly of section .eh_frame:

0000000000000a00 <__FRAME_END__-0x10c>:
 a00:	14 00                	adc    $0x0,%al
 a02:	00 00                	add    %al,(%rax)
 a04:	00 00                	add    %al,(%rax)
 a06:	00 00                	add    %al,(%rax)
 a08:	01 7a 52             	add    %edi,0x52(%rdx)
 a0b:	00 01                	add    %al,(%rcx)
 a0d:	78 10                	js     a1f <__GNU_EH_FRAME_HDR+0x5b>
 a0f:	01 1b                	add    %ebx,(%rbx)
 a11:	0c 07                	or     $0x7,%al
 a13:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 a19:	00 00                	add    %al,(%rax)
 a1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 a1e:	00 00                	add    %al,(%rax)
 a20:	40 fc                	rex cld 
 a22:	ff                   	(bad)  
 a23:	ff 2b                	ljmp   *(%rbx)
	...
 a2d:	00 00                	add    %al,(%rax)
 a2f:	00 14 00             	add    %dl,(%rax,%rax,1)
 a32:	00 00                	add    %al,(%rax)
 a34:	00 00                	add    %al,(%rax)
 a36:	00 00                	add    %al,(%rax)
 a38:	01 7a 52             	add    %edi,0x52(%rdx)
 a3b:	00 01                	add    %al,(%rcx)
 a3d:	78 10                	js     a4f <__GNU_EH_FRAME_HDR+0x8b>
 a3f:	01 1b                	add    %ebx,(%rbx)
 a41:	0c 07                	or     $0x7,%al
 a43:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 a49:	00 00                	add    %al,(%rax)
 a4b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 a4e:	00 00                	add    %al,(%rax)
 a50:	a0 fb ff ff 60 00 00 	movabs 0x60fffffb,%al
 a57:	00 00 
 a59:	0e                   	(bad)  
 a5a:	10 46 0e             	adc    %al,0xe(%rsi)
 a5d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 a60:	0b 77 08             	or     0x8(%rdi),%esi
 a63:	80 00 3f             	addb   $0x3f,(%rax)
 a66:	1a 3b                	sbb    (%rbx),%bh
 a68:	2a 33                	sub    (%rbx),%dh
 a6a:	24 22                	and    $0x22,%al
 a6c:	00 00                	add    %al,(%rax)
 a6e:	00 00                	add    %al,(%rax)
 a70:	14 00                	adc    $0x0,%al
 a72:	00 00                	add    %al,(%rax)
 a74:	44 00 00             	add    %r8b,(%rax)
 a77:	00 d8                	add    %bl,%al
 a79:	fb                   	sti    
 a7a:	ff                   	(bad)  
 a7b:	ff 08                	decl   (%rax)
	...
 a85:	00 00                	add    %al,(%rax)
 a87:	00 24 00             	add    %ah,(%rax,%rax,1)
 a8a:	00 00                	add    %al,(%rax)
 a8c:	5c                   	pop    %rsp
 a8d:	00 00                	add    %al,(%rax)
 a8f:	00 da                	add    %bl,%dl
 a91:	fc                   	cld    
 a92:	ff                   	(bad)  
 a93:	ff 8f 01 00 00 00    	decl   0x1(%rdi)
 a99:	41 0e                	rex.B (bad) 
 a9b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 aa1:	45 83 03 03          	rex.RB addl $0x3,(%r11)
 aa5:	85 01                	test   %eax,(%rcx)
 aa7:	0c 07                	or     $0x7,%al
 aa9:	08 00                	or     %al,(%rax)
 aab:	00 00                	add    %al,(%rax)
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 ab3:	00 84 00 00 00 48 fe 	add    %al,-0x1b80000(%rax,%rax,1)
 aba:	ff                   	(bad)  
 abb:	ff 65 00             	jmpq   *0x0(%rbp)
 abe:	00 00                	add    %al,(%rax)
 ac0:	00 42 0e             	add    %al,0xe(%rdx)
 ac3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 ac9:	8e 03                	mov    (%rbx),%es
 acb:	45 0e                	rex.RB (bad) 
 acd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 ad3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301921 <_end+0xffffffff86100909>
 ad9:	06                   	(bad)  
 ada:	48 0e                	rex.W (bad) 
 adc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 ae2:	72 0e                	jb     af2 <__GNU_EH_FRAME_HDR+0x12e>
 ae4:	38 41 0e             	cmp    %al,0xe(%rcx)
 ae7:	30 41 0e             	xor    %al,0xe(%rcx)
 aea:	28 42 0e             	sub    %al,0xe(%rdx)
 aed:	20 42 0e             	and    %al,0xe(%rdx)
 af0:	18 42 0e             	sbb    %al,0xe(%rdx)
 af3:	10 42 0e             	adc    %al,0xe(%rdx)
 af6:	08 00                	or     %al,(%rax)
 af8:	10 00                	adc    %al,(%rax)
 afa:	00 00                	add    %al,(%rax)
 afc:	cc                   	int3   
 afd:	00 00                	add    %al,(%rax)
 aff:	00 70 fe             	add    %dh,-0x2(%rax)
 b02:	ff                   	(bad)  
 b03:	ff 02                	incl   (%rdx)
 b05:	00 00                	add    %al,(%rax)
 b07:	00 00                	add    %al,(%rax)
 b09:	00 00                	add    %al,(%rax)
	...

0000000000000b0c <__FRAME_END__>:
 b0c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200d98 <__frame_dummy_init_array_entry>:
  200d98:	60                   	(bad)  
  200d99:	07                   	(bad)  
  200d9a:	00 00                	add    %al,(%rax)
  200d9c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200da0 <__do_global_dtors_aux_fini_array_entry>:
  200da0:	20 07                	and    %al,(%rdi)
  200da2:	00 00                	add    %al,(%rax)
  200da4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200da8 <_DYNAMIC>:
  200da8:	01 00                	add    %eax,(%rax)
  200daa:	00 00                	add    %al,(%rax)
  200dac:	00 00                	add    %al,(%rax)
  200dae:	00 00                	add    %al,(%rax)
  200db0:	01 00                	add    %eax,(%rax)
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
  200db6:	00 00                	add    %al,(%rax)
  200db8:	0c 00                	or     $0x0,%al
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
  200dbe:	00 00                	add    %al,(%rax)
  200dc0:	d0 05 00 00 00 00    	rolb   0x0(%rip)        # 200dc6 <_DYNAMIC+0x1e>
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	0d 00 00 00 00       	or     $0x0,%eax
  200dcd:	00 00                	add    %al,(%rax)
  200dcf:	00 74 09 00          	add    %dh,0x0(%rcx,%rcx,1)
  200dd3:	00 00                	add    %al,(%rax)
  200dd5:	00 00                	add    %al,(%rax)
  200dd7:	00 19                	add    %bl,(%rcx)
  200dd9:	00 00                	add    %al,(%rax)
  200ddb:	00 00                	add    %al,(%rax)
  200ddd:	00 00                	add    %al,(%rax)
  200ddf:	00 98 0d 20 00 00    	add    %bl,0x200d(%rax)
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 1b                	add    %bl,(%rbx)
  200de9:	00 00                	add    %al,(%rax)
  200deb:	00 00                	add    %al,(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 08                	add    %cl,(%rax)
  200df1:	00 00                	add    %al,(%rax)
  200df3:	00 00                	add    %al,(%rax)
  200df5:	00 00                	add    %al,(%rax)
  200df7:	00 1a                	add    %bl,(%rdx)
  200df9:	00 00                	add    %al,(%rax)
  200dfb:	00 00                	add    %al,(%rax)
  200dfd:	00 00                	add    %al,(%rax)
  200dff:	00 a0 0d 20 00 00    	add    %ah,0x200d(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e0a:	00 00                	add    %al,(%rax)
  200e0c:	00 00                	add    %al,(%rax)
  200e0e:	00 00                	add    %al,(%rax)
  200e10:	08 00                	or     %al,(%rax)
  200e12:	00 00                	add    %al,(%rax)
  200e14:	00 00                	add    %al,(%rax)
  200e16:	00 00                	add    %al,(%rax)
  200e18:	f5                   	cmc    
  200e19:	fe                   	(bad)  
  200e1a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e25:	00 00                	add    %al,(%rax)
  200e27:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e2d <_DYNAMIC+0x85>
  200e2d:	00 00                	add    %al,(%rax)
  200e2f:	00 c0                	add    %al,%al
  200e31:	03 00                	add    (%rax),%eax
  200e33:	00 00                	add    %al,(%rax)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 06                	add    %al,(%rsi)
  200e39:	00 00                	add    %al,(%rax)
  200e3b:	00 00                	add    %al,(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 0a                	add    %cl,(%rdx)
  200e49:	00 00                	add    %al,(%rax)
  200e4b:	00 00                	add    %al,(%rax)
  200e4d:	00 00                	add    %al,(%rax)
  200e4f:	00 9d 00 00 00 00    	add    %bl,0x0(%rbp)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 0b                	add    %cl,(%rbx)
  200e59:	00 00                	add    %al,(%rax)
  200e5b:	00 00                	add    %al,(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 18                	add    %bl,(%rax)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e6d <_DYNAMIC+0xc5>
	...
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 03                	add    %al,(%rbx)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 98 0f 20 00 00    	add    %bl,0x200f(%rax)
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 02                	add    %al,(%rdx)
  200e89:	00 00                	add    %al,(%rax)
  200e8b:	00 00                	add    %al,(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 78 00             	add    %bh,0x0(%rax)
  200e92:	00 00                	add    %al,(%rax)
  200e94:	00 00                	add    %al,(%rax)
  200e96:	00 00                	add    %al,(%rax)
  200e98:	14 00                	adc    $0x0,%al
  200e9a:	00 00                	add    %al,(%rax)
  200e9c:	00 00                	add    %al,(%rax)
  200e9e:	00 00                	add    %al,(%rax)
  200ea0:	07                   	(bad)  
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 17                	add    %dl,(%rdi)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 58 05             	add    %bl,0x5(%rax)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 98 04 00 00 00    	add    %bl,0x4(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 08                	add    %cl,(%rax)
  200ec9:	00 00                	add    %al,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 c0                	add    %al,%al
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 09                	add    %cl,(%rcx)
  200ed9:	00 00                	add    %al,(%rax)
  200edb:	00 00                	add    %al,(%rax)
  200edd:	00 00                	add    %al,(%rax)
  200edf:	00 18                	add    %bl,(%rax)
  200ee1:	00 00                	add    %al,(%rax)
  200ee3:	00 00                	add    %al,(%rax)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 1e                	add    %bl,(%rsi)
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 08                	add    %cl,(%rax)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 fb                	add    %bh,%bl
  200ef9:	ff                   	(bad)  
  200efa:	ff 6f 00             	ljmp   *0x0(%rdi)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 01                	add    %al,(%rcx)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	08 00                	or     %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 fe                	add    %bh,%dh
  200f09:	ff                   	(bad)  
  200f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 78 04             	add    %bh,0x4(%rax)
  200f12:	00 00                	add    %al,(%rax)
  200f14:	00 00                	add    %al,(%rax)
  200f16:	00 00                	add    %al,(%rax)
  200f18:	ff                   	(bad)  
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 01                	add    %al,(%rcx)
  200f21:	00 00                	add    %al,(%rax)
  200f23:	00 00                	add    %al,(%rax)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 f0                	add    %dh,%al
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 5e 04             	add    %bl,0x4(%rsi)
  200f32:	00 00                	add    %al,(%rax)
  200f34:	00 00                	add    %al,(%rax)
  200f36:	00 00                	add    %al,(%rax)
  200f38:	f9                   	stc    
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200f98 <_GLOBAL_OFFSET_TABLE_>:
  200f98:	a8 0d                	test   $0xd,%al
  200f9a:	20 00                	and    %al,(%rax)
	...
  200fb0:	06                   	(bad)  
  200fb1:	06                   	(bad)  
  200fb2:	00 00                	add    %al,(%rax)
  200fb4:	00 00                	add    %al,(%rax)
  200fb6:	00 00                	add    %al,(%rax)
  200fb8:	16                   	(bad)  
  200fb9:	06                   	(bad)  
  200fba:	00 00                	add    %al,(%rax)
  200fbc:	00 00                	add    %al,(%rax)
  200fbe:	00 00                	add    %al,(%rax)
  200fc0:	26 06                	es (bad) 
  200fc2:	00 00                	add    %al,(%rax)
  200fc4:	00 00                	add    %al,(%rax)
  200fc6:	00 00                	add    %al,(%rax)
  200fc8:	36 06                	ss (bad) 
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	46 06                	rex.RX (bad) 
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
  20100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201010 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x558>
   a:	74 75                	je     81 <_init-0x54f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75426530>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x541>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
