
spectre:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x383>
 248:	78 38                	js     282 <_init-0x376>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 7c f2 57          	add    %bh,0x57(%rdx,%rsi,8)
 287:	20 a7 23 e8 76 fa    	and    %ah,-0x58917dd(%rdi)
 28d:	80 db 20             	sbb    $0x20,%bl
 290:	90                   	nop
 291:	b4 4d                	mov    $0x4d,%ah
 293:	32 47 fb             	xor    -0x5(%rdi),%al
 296:	a5                   	movsl  %ds:(%rsi),%es:(%rdi)
 297:	91                   	xchg   %eax,%ecx

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	2c 00                	sub    $0x0,%al
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	7c 00                	jl     2ea <_init-0x30e>
 2ea:	00 00                	add    %al,(%rax)
 2ec:	20 00                	and    %al,(%rax)
	...
 2fe:	00 00                	add    %al,(%rax)
 300:	1b 00                	sbb    (%rax),%eax
 302:	00 00                	add    %al,(%rax)
 304:	12 00                	adc    (%rax),%al
	...
 316:	00 00                	add    %al,(%rax)
 318:	34 00                	xor    $0x0,%al
 31a:	00 00                	add    %al,(%rax)
 31c:	12 00                	adc    (%rax),%al
	...
 32e:	00 00                	add    %al,(%rax)
 330:	4a 00 00             	rex.WX add %al,(%rax)
 333:	00 12                	add    %dl,(%rdx)
	...
 345:	00 00                	add    %al,(%rax)
 347:	00 98 00 00 00 20    	add    %bl,0x20000000(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 0b                	add    %cl,(%rbx)
 361:	00 00                	add    %al,(%rax)
 363:	00 12                	add    %dl,(%rdx)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 a7 00 00 00 20    	add    %ah,0x20000000(%rdi)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 3b                	add    %bh,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

00000000000003a8 <.dynstr>:
 3a8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 3ac:	63 2e                	movslq (%rsi),%ebp
 3ae:	73 6f                	jae    41f <_init-0x1d9>
 3b0:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 3b5:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 3bc:	73 73                	jae    431 <_init-0x1c7>
 3be:	63 61 6e             	movslq 0x6e(%rcx),%esp
 3c1:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
 3c5:	73 74                	jae    43b <_init-0x1bd>
 3c7:	61                   	(bad)  
 3c8:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 3cb:	63 68 6b             	movslq 0x6b(%rax),%ebp
 3ce:	5f                   	pop    %rdi
 3cf:	66 61                	data16 (bad) 
 3d1:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 3d8:	68 
 3d9:	61                   	(bad)  
 3da:	72 00                	jb     3dc <_init-0x21c>
 3dc:	70 72                	jo     450 <_init-0x1a8>
 3de:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 3e5:	63 78 61             	movslq 0x61(%rax),%edi
 3e8:	5f                   	pop    %rdi
 3e9:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3ef:	7a 65                	jp     456 <_init-0x1a2>
 3f1:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3f4:	6c                   	insb   (%dx),%es:(%rdi)
 3f5:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3fc:	72 74                	jb     472 <_init-0x186>
 3fe:	5f                   	pop    %rdi
 3ff:	6d                   	insl   (%dx),%es:(%rdi)
 400:	61                   	(bad)  
 401:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 408:	43 5f                	rex.XB pop %r15
 40a:	32 2e                	xor    (%rsi),%ch
 40c:	37                   	(bad)  
 40d:	00 47 4c             	add    %al,0x4c(%rdi)
 410:	49                   	rex.WB
 411:	42                   	rex.X
 412:	43 5f                	rex.XB pop %r15
 414:	32 2e                	xor    (%rsi),%ch
 416:	34 00                	xor    $0x0,%al
 418:	47                   	rex.RXB
 419:	4c                   	rex.WR
 41a:	49                   	rex.WB
 41b:	42                   	rex.X
 41c:	43 5f                	rex.XB pop %r15
 41e:	32 2e                	xor    (%rsi),%ch
 420:	32 2e                	xor    (%rsi),%ch
 422:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 427:	4d 5f                	rex.WRB pop %r15
 429:	64 65 72 65          	fs gs jb 492 <_init-0x166>
 42d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 434:	4d 
 435:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 437:	6f                   	outsl  %ds:(%rsi),(%dx)
 438:	6e                   	outsb  %ds:(%rsi),(%dx)
 439:	65 54                	gs push %rsp
 43b:	61                   	(bad)  
 43c:	62                   	(bad)  
 43d:	6c                   	insb   (%dx),%es:(%rdi)
 43e:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 442:	67 6d                	insl   (%dx),%es:(%edi)
 444:	6f                   	outsl  %ds:(%rsi),(%dx)
 445:	6e                   	outsb  %ds:(%rsi),(%dx)
 446:	5f                   	pop    %rdi
 447:	73 74                	jae    4bd <_init-0x13b>
 449:	61                   	(bad)  
 44a:	72 74                	jb     4c0 <_init-0x138>
 44c:	5f                   	pop    %rdi
 44d:	5f                   	pop    %rdi
 44e:	00 5f 49             	add    %bl,0x49(%rdi)
 451:	54                   	push   %rsp
 452:	4d 5f                	rex.WRB pop %r15
 454:	72 65                	jb     4bb <_init-0x13d>
 456:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 45d:	4d 
 45e:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 460:	6f                   	outsl  %ds:(%rsi),(%dx)
 461:	6e                   	outsb  %ds:(%rsi),(%dx)
 462:	65 54                	gs push %rsp
 464:	61                   	(bad)  
 465:	62                   	.byte 0x62
 466:	6c                   	insb   (%dx),%es:(%rdi)
 467:	65                   	gs
	...

Disassembly of section .gnu.version:

000000000000046a <.gnu.version>:
 46a:	00 00                	add    %al,(%rax)
 46c:	02 00                	add    (%rax),%al
 46e:	00 00                	add    %al,(%rax)
 470:	03 00                	add    (%rax),%eax
 472:	02 00                	add    (%rax),%al
 474:	02 00                	add    (%rax),%al
 476:	00 00                	add    %al,(%rax)
 478:	04 00                	add    $0x0,%al
 47a:	00 00                	add    %al,(%rax)
 47c:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000480 <.gnu.version_r>:
 480:	01 00                	add    %eax,(%rax)
 482:	03 00                	add    (%rax),%eax
 484:	01 00                	add    %eax,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	10 00                	adc    %al,(%rax)
 48a:	00 00                	add    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	17                   	(bad)  
 491:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%rcx),%ebp
 498:	5c                   	pop    %rsp
 499:	00 00                	add    %al,(%rax)
 49b:	00 10                	add    %dl,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 4a2:	69 0d 00 00 03 00 66 	imul   $0x66,0x30000(%rip),%ecx        # 304ac <__FRAME_END__+0x2f480>
 4a9:	00 00 00 
 4ac:	10 00                	adc    %al,(%rax)
 4ae:	00 00                	add    %al,(%rax)
 4b0:	75 1a                	jne    4cc <_init-0x12c>
 4b2:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 4b8:	70 00                	jo     4ba <_init-0x13e>
 4ba:	00 00                	add    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000004c0 <.rela.dyn>:
 4c0:	a0 1d 20 00 00 00 00 	movabs 0x80000000000201d,%al
 4c7:	00 08 
 4c9:	00 00                	add    %al,(%rax)
 4cb:	00 00                	add    %al,(%rax)
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 70 07             	add    %dh,0x7(%rax)
 4d2:	00 00                	add    %al,(%rax)
 4d4:	00 00                	add    %al,(%rax)
 4d6:	00 00                	add    %al,(%rax)
 4d8:	a8 1d                	test   $0x1d,%al
 4da:	20 00                	and    %al,(%rax)
 4dc:	00 00                	add    %al,(%rax)
 4de:	00 00                	add    %al,(%rax)
 4e0:	08 00                	or     %al,(%rax)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	30 07                	xor    %al,(%rdi)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	08 20                	or     %ah,(%rax)
 4f2:	20 00                	and    %al,(%rax)
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 00                	add    %al,(%rax)
 4f8:	08 00                	or     %al,(%rax)
 4fa:	00 00                	add    %al,(%rax)
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	08 20                	or     %ah,(%rax)
 502:	20 00                	and    %al,(%rax)
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	e0 20                	loopne 52a <_init-0xce>
 50a:	20 00                	and    %al,(%rax)
 50c:	00 00                	add    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	08 00                	or     %al,(%rax)
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	d8 0d 00 00 00 00    	fmuls  0x0(%rip)        # 51e <_init-0xda>
 51e:	00 00                	add    %al,(%rax)
 520:	d8 1f                	fcomps (%rdi)
 522:	20 00                	and    %al,(%rax)
 524:	00 00                	add    %al,(%rax)
 526:	00 00                	add    %al,(%rax)
 528:	06                   	(bad)  
 529:	00 00                	add    %al,(%rax)
 52b:	00 02                	add    %al,(%rdx)
	...
 535:	00 00                	add    %al,(%rax)
 537:	00 e0                	add    %ah,%al
 539:	1f                   	(bad)  
 53a:	20 00                	and    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	06                   	(bad)  
 541:	00 00                	add    %al,(%rax)
 543:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 549 <_init-0xaf>
 549:	00 00                	add    %al,(%rax)
 54b:	00 00                	add    %al,(%rax)
 54d:	00 00                	add    %al,(%rax)
 54f:	00 e8                	add    %ch,%al
 551:	1f                   	(bad)  
 552:	20 00                	and    %al,(%rax)
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	06                   	(bad)  
 559:	00 00                	add    %al,(%rax)
 55b:	00 06                	add    %al,(%rsi)
	...
 565:	00 00                	add    %al,(%rax)
 567:	00 f0                	add    %dh,%al
 569:	1f                   	(bad)  
 56a:	20 00                	and    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	06                   	(bad)  
 571:	00 00                	add    %al,(%rax)
 573:	00 08                	add    %cl,(%rax)
	...
 57d:	00 00                	add    %al,(%rax)
 57f:	00 f8                	add    %bh,%al
 581:	1f                   	(bad)  
 582:	20 00                	and    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	06                   	(bad)  
 589:	00 00                	add    %al,(%rax)
 58b:	00 09                	add    %cl,(%rcx)
	...

Disassembly of section .rela.plt:

0000000000000598 <.rela.plt>:
 598:	b8 1f 20 00 00       	mov    $0x201f,%eax
 59d:	00 00                	add    %al,(%rax)
 59f:	00 07                	add    %al,(%rdi)
 5a1:	00 00                	add    %al,(%rax)
 5a3:	00 01                	add    %al,(%rcx)
	...
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 c0                	add    %al,%al
 5b1:	1f                   	(bad)  
 5b2:	20 00                	and    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	07                   	(bad)  
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 03                	add    %al,(%rbx)
	...
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 c8                	add    %cl,%al
 5c9:	1f                   	(bad)  
 5ca:	20 00                	and    %al,(%rax)
 5cc:	00 00                	add    %al,(%rax)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	07                   	(bad)  
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5de:	00 00                	add    %al,(%rax)
 5e0:	d0 1f                	rcrb   (%rdi)
 5e2:	20 00                	and    %al,(%rax)
 5e4:	00 00                	add    %al,(%rax)
 5e6:	00 00                	add    %al,(%rax)
 5e8:	07                   	(bad)  
 5e9:	00 00                	add    %al,(%rax)
 5eb:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .init:

00000000000005f8 <_init>:
 5f8:	48 83 ec 08          	sub    $0x8,%rsp
 5fc:	48 8b 05 e5 19 20 00 	mov    0x2019e5(%rip),%rax        # 201fe8 <__gmon_start__>
 603:	48 85 c0             	test   %rax,%rax
 606:	74 02                	je     60a <_init+0x12>
 608:	ff d0                	callq  *%rax
 60a:	48 83 c4 08          	add    $0x8,%rsp
 60e:	c3                   	retq   

Disassembly of section .plt:

0000000000000610 <.plt>:
 610:	ff 35 92 19 20 00    	pushq  0x201992(%rip)        # 201fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
 616:	ff 25 94 19 20 00    	jmpq   *0x201994(%rip)        # 201fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
 61c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000620 <putchar@plt>:
 620:	ff 25 92 19 20 00    	jmpq   *0x201992(%rip)        # 201fb8 <putchar@GLIBC_2.2.5>
 626:	68 00 00 00 00       	pushq  $0x0
 62b:	e9 e0 ff ff ff       	jmpq   610 <.plt>

0000000000000630 <__stack_chk_fail@plt>:
 630:	ff 25 8a 19 20 00    	jmpq   *0x20198a(%rip)        # 201fc0 <__stack_chk_fail@GLIBC_2.4>
 636:	68 01 00 00 00       	pushq  $0x1
 63b:	e9 d0 ff ff ff       	jmpq   610 <.plt>

0000000000000640 <printf@plt>:
 640:	ff 25 82 19 20 00    	jmpq   *0x201982(%rip)        # 201fc8 <printf@GLIBC_2.2.5>
 646:	68 02 00 00 00       	pushq  $0x2
 64b:	e9 c0 ff ff ff       	jmpq   610 <.plt>

0000000000000650 <__isoc99_sscanf@plt>:
 650:	ff 25 7a 19 20 00    	jmpq   *0x20197a(%rip)        # 201fd0 <__isoc99_sscanf@GLIBC_2.7>
 656:	68 03 00 00 00       	pushq  $0x3
 65b:	e9 b0 ff ff ff       	jmpq   610 <.plt>

Disassembly of section .plt.got:

0000000000000660 <__cxa_finalize@plt>:
 660:	ff 25 92 19 20 00    	jmpq   *0x201992(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 666:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000670 <_start>:
 670:	31 ed                	xor    %ebp,%ebp
 672:	49 89 d1             	mov    %rdx,%r9
 675:	5e                   	pop    %rsi
 676:	48 89 e2             	mov    %rsp,%rdx
 679:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 67d:	50                   	push   %rax
 67e:	54                   	push   %rsp
 67f:	4c 8d 05 3a 07 00 00 	lea    0x73a(%rip),%r8        # dc0 <__libc_csu_fini>
 686:	48 8d 0d c3 06 00 00 	lea    0x6c3(%rip),%rcx        # d50 <__libc_csu_init>
 68d:	48 8d 3d cc 04 00 00 	lea    0x4cc(%rip),%rdi        # b60 <main>
 694:	ff 15 46 19 20 00    	callq  *0x201946(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 69a:	f4                   	hlt    
 69b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000006a0 <deregister_tm_clones>:
 6a0:	48 8d 3d 41 1a 20 00 	lea    0x201a41(%rip),%rdi        # 2020e8 <__TMC_END__>
 6a7:	55                   	push   %rbp
 6a8:	48 8d 05 39 1a 20 00 	lea    0x201a39(%rip),%rax        # 2020e8 <__TMC_END__>
 6af:	48 39 f8             	cmp    %rdi,%rax
 6b2:	48 89 e5             	mov    %rsp,%rbp
 6b5:	74 19                	je     6d0 <deregister_tm_clones+0x30>
 6b7:	48 8b 05 1a 19 20 00 	mov    0x20191a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 6be:	48 85 c0             	test   %rax,%rax
 6c1:	74 0d                	je     6d0 <deregister_tm_clones+0x30>
 6c3:	5d                   	pop    %rbp
 6c4:	ff e0                	jmpq   *%rax
 6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6cd:	00 00 00 
 6d0:	5d                   	pop    %rbp
 6d1:	c3                   	retq   
 6d2:	0f 1f 40 00          	nopl   0x0(%rax)
 6d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 6dd:	00 00 00 

00000000000006e0 <register_tm_clones>:
 6e0:	48 8d 3d 01 1a 20 00 	lea    0x201a01(%rip),%rdi        # 2020e8 <__TMC_END__>
 6e7:	48 8d 35 fa 19 20 00 	lea    0x2019fa(%rip),%rsi        # 2020e8 <__TMC_END__>
 6ee:	55                   	push   %rbp
 6ef:	48 29 fe             	sub    %rdi,%rsi
 6f2:	48 89 e5             	mov    %rsp,%rbp
 6f5:	48 c1 fe 03          	sar    $0x3,%rsi
 6f9:	48 89 f0             	mov    %rsi,%rax
 6fc:	48 c1 e8 3f          	shr    $0x3f,%rax
 700:	48 01 c6             	add    %rax,%rsi
 703:	48 d1 fe             	sar    %rsi
 706:	74 18                	je     720 <register_tm_clones+0x40>
 708:	48 8b 05 e1 18 20 00 	mov    0x2018e1(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 70f:	48 85 c0             	test   %rax,%rax
 712:	74 0c                	je     720 <register_tm_clones+0x40>
 714:	5d                   	pop    %rbp
 715:	ff e0                	jmpq   *%rax
 717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 71e:	00 00 
 720:	5d                   	pop    %rbp
 721:	c3                   	retq   
 722:	0f 1f 40 00          	nopl   0x0(%rax)
 726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 72d:	00 00 00 

0000000000000730 <__do_global_dtors_aux>:
 730:	80 3d c9 19 20 00 00 	cmpb   $0x0,0x2019c9(%rip)        # 202100 <completed.7697>
 737:	75 2f                	jne    768 <__do_global_dtors_aux+0x38>
 739:	48 83 3d b7 18 20 00 	cmpq   $0x0,0x2018b7(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 740:	00 
 741:	55                   	push   %rbp
 742:	48 89 e5             	mov    %rsp,%rbp
 745:	74 0c                	je     753 <__do_global_dtors_aux+0x23>
 747:	48 8b 3d ba 18 20 00 	mov    0x2018ba(%rip),%rdi        # 202008 <__dso_handle>
 74e:	e8 0d ff ff ff       	callq  660 <__cxa_finalize@plt>
 753:	e8 48 ff ff ff       	callq  6a0 <deregister_tm_clones>
 758:	c6 05 a1 19 20 00 01 	movb   $0x1,0x2019a1(%rip)        # 202100 <completed.7697>
 75f:	5d                   	pop    %rbp
 760:	c3                   	retq   
 761:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 768:	f3 c3                	repz retq 
 76a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000770 <frame_dummy>:
 770:	55                   	push   %rbp
 771:	48 89 e5             	mov    %rsp,%rbp
 774:	5d                   	pop    %rbp
 775:	e9 66 ff ff ff       	jmpq   6e0 <register_tm_clones>

000000000000077a <victim_function>:
 77a:	55                   	push   %rbp
 77b:	48 89 e5             	mov    %rsp,%rbp
 77e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 782:	8b 05 98 18 20 00    	mov    0x201898(%rip),%eax        # 202020 <array1_size>
 788:	89 c0                	mov    %eax,%eax
 78a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 78e:	73 34                	jae    7c4 <victim_function+0x4a>
 790:	48 8d 15 a9 18 20 00 	lea    0x2018a9(%rip),%rdx        # 202040 <array1>
 797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 79b:	48 01 d0             	add    %rdx,%rax
 79e:	0f b6 00             	movzbl (%rax),%eax
 7a1:	0f b6 c0             	movzbl %al,%eax
 7a4:	c1 e0 09             	shl    $0x9,%eax
 7a7:	48 63 d0             	movslq %eax,%rdx
 7aa:	48 8d 05 cf 1d 20 00 	lea    0x201dcf(%rip),%rax        # 202580 <array2>
 7b1:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 7b5:	0f b6 05 64 19 20 00 	movzbl 0x201964(%rip),%eax        # 202120 <temp>
 7bc:	21 d0                	and    %edx,%eax
 7be:	88 05 5c 19 20 00    	mov    %al,0x20195c(%rip)        # 202120 <temp>
 7c4:	90                   	nop
 7c5:	5d                   	pop    %rbp
 7c6:	c3                   	retq   

00000000000007c7 <readMemoryByte>:
 7c7:	55                   	push   %rbp
 7c8:	48 89 e5             	mov    %rsp,%rbp
 7cb:	53                   	push   %rbx
 7cc:	48 83 ec 58          	sub    $0x58,%rsp
 7d0:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
 7d4:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
 7d8:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
 7dc:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 7e3:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 7ea:	eb 1f                	jmp    80b <readMemoryByte+0x44>
 7ec:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 7ef:	48 98                	cltq   
 7f1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 7f8:	00 
 7f9:	48 8d 05 40 19 20 00 	lea    0x201940(%rip),%rax        # 202140 <results.23457>
 800:	c7 04 02 00 00 00 00 	movl   $0x0,(%rdx,%rax,1)
 807:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
 80b:	81 7d c4 ff 00 00 00 	cmpl   $0xff,-0x3c(%rbp)
 812:	7e d8                	jle    7ec <readMemoryByte+0x25>
 814:	c7 45 c0 e7 03 00 00 	movl   $0x3e7,-0x40(%rbp)
 81b:	e9 c9 02 00 00       	jmpq   ae9 <readMemoryByte+0x322>
 820:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 827:	eb 22                	jmp    84b <readMemoryByte+0x84>
 829:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 82c:	c1 e0 09             	shl    $0x9,%eax
 82f:	48 63 d0             	movslq %eax,%rdx
 832:	48 8d 05 47 1d 20 00 	lea    0x201d47(%rip),%rax        # 202580 <array2>
 839:	48 01 d0             	add    %rdx,%rax
 83c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 840:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 844:	0f ae 38             	clflush (%rax)
 847:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
 84b:	81 7d c4 ff 00 00 00 	cmpl   $0xff,-0x3c(%rbp)
 852:	7e d5                	jle    829 <readMemoryByte+0x62>
 854:	8b 45 c0             	mov    -0x40(%rbp),%eax
 857:	8b 0d c3 17 20 00    	mov    0x2017c3(%rip),%ecx        # 202020 <array1_size>
 85d:	ba 00 00 00 00       	mov    $0x0,%edx
 862:	f7 f1                	div    %ecx
 864:	89 d0                	mov    %edx,%eax
 866:	89 c0                	mov    %eax,%eax
 868:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 86c:	c7 45 c8 1d 00 00 00 	movl   $0x1d,-0x38(%rbp)
 873:	e9 88 00 00 00       	jmpq   900 <readMemoryByte+0x139>
 878:	48 8d 05 a1 17 20 00 	lea    0x2017a1(%rip),%rax        # 202020 <array1_size>
 87f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 883:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 887:	0f ae 38             	clflush (%rax)
 88a:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
 891:	eb 09                	jmp    89c <readMemoryByte+0xd5>
 893:	8b 45 bc             	mov    -0x44(%rbp),%eax
 896:	83 c0 01             	add    $0x1,%eax
 899:	89 45 bc             	mov    %eax,-0x44(%rbp)
 89c:	8b 45 bc             	mov    -0x44(%rbp),%eax
 89f:	83 f8 63             	cmp    $0x63,%eax
 8a2:	7e ef                	jle    893 <readMemoryByte+0xcc>
 8a4:	8b 4d c8             	mov    -0x38(%rbp),%ecx
 8a7:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
 8ac:	89 c8                	mov    %ecx,%eax
 8ae:	f7 ea                	imul   %edx
 8b0:	89 c8                	mov    %ecx,%eax
 8b2:	c1 f8 1f             	sar    $0x1f,%eax
 8b5:	29 c2                	sub    %eax,%edx
 8b7:	89 d0                	mov    %edx,%eax
 8b9:	01 c0                	add    %eax,%eax
 8bb:	01 d0                	add    %edx,%eax
 8bd:	01 c0                	add    %eax,%eax
 8bf:	29 c1                	sub    %eax,%ecx
 8c1:	89 ca                	mov    %ecx,%edx
 8c3:	8d 42 ff             	lea    -0x1(%rdx),%eax
 8c6:	66 b8 00 00          	mov    $0x0,%ax
 8ca:	48 98                	cltq   
 8cc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8d4:	48 c1 e8 10          	shr    $0x10,%rax
 8d8:	48 09 45 e0          	or     %rax,-0x20(%rbp)
 8dc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 8e0:	48 33 45 d8          	xor    -0x28(%rbp),%rax
 8e4:	48 23 45 e0          	and    -0x20(%rbp),%rax
 8e8:	48 33 45 d8          	xor    -0x28(%rbp),%rax
 8ec:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 8f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 8f4:	48 89 c7             	mov    %rax,%rdi
 8f7:	e8 7e fe ff ff       	callq  77a <victim_function>
 8fc:	83 6d c8 01          	subl   $0x1,-0x38(%rbp)
 900:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
 904:	0f 89 6e ff ff ff    	jns    878 <readMemoryByte+0xb1>
 90a:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
 911:	e9 a6 00 00 00       	jmpq   9bc <readMemoryByte+0x1f5>
 916:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 919:	69 c0 a7 00 00 00    	imul   $0xa7,%eax,%eax
 91f:	83 c0 0d             	add    $0xd,%eax
 922:	25 ff 00 00 00       	and    $0xff,%eax
 927:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 92a:	bb 00 00 00 00       	mov    $0x0,%ebx
 92f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 932:	c1 e0 09             	shl    $0x9,%eax
 935:	48 63 d0             	movslq %eax,%rdx
 938:	48 8d 05 41 1c 20 00 	lea    0x201c41(%rip),%rax        # 202580 <array2>
 93f:	48 01 d0             	add    %rdx,%rax
 942:	48 89 c3             	mov    %rax,%rbx
 945:	0f ae f0             	mfence 
 948:	0f 01 f9             	rdtscp 
 94b:	49 89 c2             	mov    %rax,%r10
 94e:	48 8b 0b             	mov    (%rbx),%rcx
 951:	0f 01 f9             	rdtscp 
 954:	4c 29 d0             	sub    %r10,%rax
 957:	48 89 c3             	mov    %rax,%rbx
 95a:	48 83 fb 50          	cmp    $0x50,%rbx
 95e:	77 58                	ja     9b8 <readMemoryByte+0x1f1>
 960:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 963:	8b 0d b7 16 20 00    	mov    0x2016b7(%rip),%ecx        # 202020 <array1_size>
 969:	ba 00 00 00 00       	mov    $0x0,%edx
 96e:	f7 f1                	div    %ecx
 970:	89 d0                	mov    %edx,%eax
 972:	89 c2                	mov    %eax,%edx
 974:	48 8d 05 c5 16 20 00 	lea    0x2016c5(%rip),%rax        # 202040 <array1>
 97b:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
 97f:	0f b6 c0             	movzbl %al,%eax
 982:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
 985:	74 31                	je     9b8 <readMemoryByte+0x1f1>
 987:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 98a:	48 98                	cltq   
 98c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 993:	00 
 994:	48 8d 05 a5 17 20 00 	lea    0x2017a5(%rip),%rax        # 202140 <results.23457>
 99b:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 99e:	8d 48 01             	lea    0x1(%rax),%ecx
 9a1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 9a4:	48 98                	cltq   
 9a6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 9ad:	00 
 9ae:	48 8d 05 8b 17 20 00 	lea    0x20178b(%rip),%rax        # 202140 <results.23457>
 9b5:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
 9b8:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
 9bc:	81 7d c4 ff 00 00 00 	cmpl   $0xff,-0x3c(%rbp)
 9c3:	0f 8e 4d ff ff ff    	jle    916 <readMemoryByte+0x14f>
 9c9:	c7 45 cc ff ff ff ff 	movl   $0xffffffff,-0x34(%rbp)
 9d0:	8b 45 cc             	mov    -0x34(%rbp),%eax
 9d3:	89 45 c8             	mov    %eax,-0x38(%rbp)
 9d6:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 9dd:	e9 88 00 00 00       	jmpq   a6a <readMemoryByte+0x2a3>
 9e2:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
 9e6:	78 32                	js     a1a <readMemoryByte+0x253>
 9e8:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 9eb:	48 98                	cltq   
 9ed:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 9f4:	00 
 9f5:	48 8d 05 44 17 20 00 	lea    0x201744(%rip),%rax        # 202140 <results.23457>
 9fc:	8b 14 02             	mov    (%rdx,%rax,1),%edx
 9ff:	8b 45 c8             	mov    -0x38(%rbp),%eax
 a02:	48 98                	cltq   
 a04:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
 a0b:	00 
 a0c:	48 8d 05 2d 17 20 00 	lea    0x20172d(%rip),%rax        # 202140 <results.23457>
 a13:	8b 04 01             	mov    (%rcx,%rax,1),%eax
 a16:	39 c2                	cmp    %eax,%edx
 a18:	7c 0e                	jl     a28 <readMemoryByte+0x261>
 a1a:	8b 45 c8             	mov    -0x38(%rbp),%eax
 a1d:	89 45 cc             	mov    %eax,-0x34(%rbp)
 a20:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 a23:	89 45 c8             	mov    %eax,-0x38(%rbp)
 a26:	eb 3e                	jmp    a66 <readMemoryByte+0x29f>
 a28:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
 a2c:	78 32                	js     a60 <readMemoryByte+0x299>
 a2e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 a31:	48 98                	cltq   
 a33:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 a3a:	00 
 a3b:	48 8d 05 fe 16 20 00 	lea    0x2016fe(%rip),%rax        # 202140 <results.23457>
 a42:	8b 14 02             	mov    (%rdx,%rax,1),%edx
 a45:	8b 45 cc             	mov    -0x34(%rbp),%eax
 a48:	48 98                	cltq   
 a4a:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
 a51:	00 
 a52:	48 8d 05 e7 16 20 00 	lea    0x2016e7(%rip),%rax        # 202140 <results.23457>
 a59:	8b 04 01             	mov    (%rcx,%rax,1),%eax
 a5c:	39 c2                	cmp    %eax,%edx
 a5e:	7c 06                	jl     a66 <readMemoryByte+0x29f>
 a60:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 a63:	89 45 cc             	mov    %eax,-0x34(%rbp)
 a66:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
 a6a:	81 7d c4 ff 00 00 00 	cmpl   $0xff,-0x3c(%rbp)
 a71:	0f 8e 6b ff ff ff    	jle    9e2 <readMemoryByte+0x21b>
 a77:	8b 45 c8             	mov    -0x38(%rbp),%eax
 a7a:	48 98                	cltq   
 a7c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 a83:	00 
 a84:	48 8d 05 b5 16 20 00 	lea    0x2016b5(%rip),%rax        # 202140 <results.23457>
 a8b:	8b 14 02             	mov    (%rdx,%rax,1),%edx
 a8e:	8b 45 cc             	mov    -0x34(%rbp),%eax
 a91:	48 98                	cltq   
 a93:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
 a9a:	00 
 a9b:	48 8d 05 9e 16 20 00 	lea    0x20169e(%rip),%rax        # 202140 <results.23457>
 aa2:	8b 04 01             	mov    (%rcx,%rax,1),%eax
 aa5:	01 c0                	add    %eax,%eax
 aa7:	83 c0 05             	add    $0x5,%eax
 aaa:	39 c2                	cmp    %eax,%edx
 aac:	7d 45                	jge    af3 <readMemoryByte+0x32c>
 aae:	8b 45 c8             	mov    -0x38(%rbp),%eax
 ab1:	48 98                	cltq   
 ab3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 aba:	00 
 abb:	48 8d 05 7e 16 20 00 	lea    0x20167e(%rip),%rax        # 202140 <results.23457>
 ac2:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 ac5:	83 f8 02             	cmp    $0x2,%eax
 ac8:	75 1b                	jne    ae5 <readMemoryByte+0x31e>
 aca:	8b 45 cc             	mov    -0x34(%rbp),%eax
 acd:	48 98                	cltq   
 acf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 ad6:	00 
 ad7:	48 8d 05 62 16 20 00 	lea    0x201662(%rip),%rax        # 202140 <results.23457>
 ade:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 ae1:	85 c0                	test   %eax,%eax
 ae3:	74 0e                	je     af3 <readMemoryByte+0x32c>
 ae5:	83 6d c0 01          	subl   $0x1,-0x40(%rbp)
 ae9:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
 aed:	0f 8f 2d fd ff ff    	jg     820 <readMemoryByte+0x59>
 af3:	8b 05 47 16 20 00    	mov    0x201647(%rip),%eax        # 202140 <results.23457>
 af9:	33 45 d0             	xor    -0x30(%rbp),%eax
 afc:	89 05 3e 16 20 00    	mov    %eax,0x20163e(%rip)        # 202140 <results.23457>
 b02:	8b 45 c8             	mov    -0x38(%rbp),%eax
 b05:	89 c2                	mov    %eax,%edx
 b07:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 b0b:	88 10                	mov    %dl,(%rax)
 b0d:	8b 45 c8             	mov    -0x38(%rbp),%eax
 b10:	48 98                	cltq   
 b12:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 b19:	00 
 b1a:	48 8d 05 1f 16 20 00 	lea    0x20161f(%rip),%rax        # 202140 <results.23457>
 b21:	8b 14 02             	mov    (%rdx,%rax,1),%edx
 b24:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 b28:	89 10                	mov    %edx,(%rax)
 b2a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 b2e:	48 83 c0 01          	add    $0x1,%rax
 b32:	8b 55 cc             	mov    -0x34(%rbp),%edx
 b35:	88 10                	mov    %dl,(%rax)
 b37:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 b3b:	48 8d 50 04          	lea    0x4(%rax),%rdx
 b3f:	8b 45 cc             	mov    -0x34(%rbp),%eax
 b42:	48 98                	cltq   
 b44:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
 b4b:	00 
 b4c:	48 8d 05 ed 15 20 00 	lea    0x2015ed(%rip),%rax        # 202140 <results.23457>
 b53:	8b 04 01             	mov    (%rcx,%rax,1),%eax
 b56:	89 02                	mov    %eax,(%rdx)
 b58:	90                   	nop
 b59:	48 83 c4 58          	add    $0x58,%rsp
 b5d:	5b                   	pop    %rbx
 b5e:	5d                   	pop    %rbp
 b5f:	c3                   	retq   

0000000000000b60 <main>:
 b60:	55                   	push   %rbp
 b61:	48 89 e5             	mov    %rsp,%rbp
 b64:	48 83 ec 40          	sub    $0x40,%rsp
 b68:	89 7d cc             	mov    %edi,-0x34(%rbp)
 b6b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
 b6f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 b76:	00 00 
 b78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 b7c:	31 c0                	xor    %eax,%eax
 b7e:	48 8b 05 5b 15 20 00 	mov    0x20155b(%rip),%rax        # 2020e0 <secret>
 b85:	48 89 c2             	mov    %rax,%rdx
 b88:	48 8d 05 b1 14 20 00 	lea    0x2014b1(%rip),%rax        # 202040 <array1>
 b8f:	48 29 c2             	sub    %rax,%rdx
 b92:	48 89 d0             	mov    %rdx,%rax
 b95:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 b99:	c7 45 d8 28 00 00 00 	movl   $0x28,-0x28(%rbp)
 ba0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
 ba7:	eb 15                	jmp    bbe <main+0x5e>
 ba9:	8b 45 dc             	mov    -0x24(%rbp),%eax
 bac:	48 63 d0             	movslq %eax,%rdx
 baf:	48 8d 05 ca 19 20 00 	lea    0x2019ca(%rip),%rax        # 202580 <array2>
 bb6:	c6 04 02 01          	movb   $0x1,(%rdx,%rax,1)
 bba:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
 bbe:	8b 45 dc             	mov    -0x24(%rbp),%eax
 bc1:	3d ff ff 01 00       	cmp    $0x1ffff,%eax
 bc6:	76 e1                	jbe    ba9 <main+0x49>
 bc8:	83 7d cc 03          	cmpl   $0x3,-0x34(%rbp)
 bcc:	75 5b                	jne    c29 <main+0xc9>
 bce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 bd2:	48 83 c0 08          	add    $0x8,%rax
 bd6:	48 8b 00             	mov    (%rax),%rax
 bd9:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
 bdd:	48 8d 35 1d 02 00 00 	lea    0x21d(%rip),%rsi        # e01 <_IO_stdin_used+0x31>
 be4:	48 89 c7             	mov    %rax,%rdi
 be7:	b8 00 00 00 00       	mov    $0x0,%eax
 bec:	e8 5f fa ff ff       	callq  650 <__isoc99_sscanf@plt>
 bf1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 bf5:	48 8d 05 44 14 20 00 	lea    0x201444(%rip),%rax        # 202040 <array1>
 bfc:	48 29 c2             	sub    %rax,%rdx
 bff:	48 89 d0             	mov    %rdx,%rax
 c02:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 c06:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 c0a:	48 83 c0 10          	add    $0x10,%rax
 c0e:	48 8b 00             	mov    (%rax),%rax
 c11:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
 c15:	48 8d 35 e8 01 00 00 	lea    0x1e8(%rip),%rsi        # e04 <_IO_stdin_used+0x34>
 c1c:	48 89 c7             	mov    %rax,%rdi
 c1f:	b8 00 00 00 00       	mov    $0x0,%eax
 c24:	e8 27 fa ff ff       	callq  650 <__isoc99_sscanf@plt>
 c29:	8b 45 d8             	mov    -0x28(%rbp),%eax
 c2c:	89 c6                	mov    %eax,%esi
 c2e:	48 8d 3d d2 01 00 00 	lea    0x1d2(%rip),%rdi        # e07 <_IO_stdin_used+0x37>
 c35:	b8 00 00 00 00       	mov    $0x0,%eax
 c3a:	e8 01 fa ff ff       	callq  640 <printf@plt>
 c3f:	e9 d2 00 00 00       	jmpq   d16 <main+0x1b6>
 c44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 c48:	48 89 c6             	mov    %rax,%rsi
 c4b:	48 8d 3d ce 01 00 00 	lea    0x1ce(%rip),%rdi        # e20 <_IO_stdin_used+0x50>
 c52:	b8 00 00 00 00       	mov    $0x0,%eax
 c57:	e8 e4 f9 ff ff       	callq  640 <printf@plt>
 c5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 c60:	48 8d 50 01          	lea    0x1(%rax),%rdx
 c64:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 c68:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
 c6c:	48 8d 4d f6          	lea    -0xa(%rbp),%rcx
 c70:	48 89 ce             	mov    %rcx,%rsi
 c73:	48 89 c7             	mov    %rax,%rdi
 c76:	e8 4c fb ff ff       	callq  7c7 <readMemoryByte>
 c7b:	8b 45 ec             	mov    -0x14(%rbp),%eax
 c7e:	8b 55 f0             	mov    -0x10(%rbp),%edx
 c81:	01 d2                	add    %edx,%edx
 c83:	39 d0                	cmp    %edx,%eax
 c85:	7c 09                	jl     c90 <main+0x130>
 c87:	48 8d 05 b2 01 00 00 	lea    0x1b2(%rip),%rax        # e40 <_IO_stdin_used+0x70>
 c8e:	eb 07                	jmp    c97 <main+0x137>
 c90:	48 8d 05 b1 01 00 00 	lea    0x1b1(%rip),%rax        # e48 <_IO_stdin_used+0x78>
 c97:	48 89 c6             	mov    %rax,%rsi
 c9a:	48 8d 3d af 01 00 00 	lea    0x1af(%rip),%rdi        # e50 <_IO_stdin_used+0x80>
 ca1:	b8 00 00 00 00       	mov    $0x0,%eax
 ca6:	e8 95 f9 ff ff       	callq  640 <printf@plt>
 cab:	8b 55 ec             	mov    -0x14(%rbp),%edx
 cae:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
 cb2:	3c 1f                	cmp    $0x1f,%al
 cb4:	76 11                	jbe    cc7 <main+0x167>
 cb6:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
 cba:	3c 7e                	cmp    $0x7e,%al
 cbc:	77 09                	ja     cc7 <main+0x167>
 cbe:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
 cc2:	0f b6 c0             	movzbl %al,%eax
 cc5:	eb 05                	jmp    ccc <main+0x16c>
 cc7:	b8 3f 00 00 00       	mov    $0x3f,%eax
 ccc:	0f b6 4d f6          	movzbl -0xa(%rbp),%ecx
 cd0:	0f b6 f1             	movzbl %cl,%esi
 cd3:	89 d1                	mov    %edx,%ecx
 cd5:	89 c2                	mov    %eax,%edx
 cd7:	48 8d 3d 77 01 00 00 	lea    0x177(%rip),%rdi        # e55 <_IO_stdin_used+0x85>
 cde:	b8 00 00 00 00       	mov    $0x0,%eax
 ce3:	e8 58 f9 ff ff       	callq  640 <printf@plt>
 ce8:	8b 45 f0             	mov    -0x10(%rbp),%eax
 ceb:	85 c0                	test   %eax,%eax
 ced:	7e 1d                	jle    d0c <main+0x1ac>
 cef:	8b 55 f0             	mov    -0x10(%rbp),%edx
 cf2:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 cf6:	0f b6 c0             	movzbl %al,%eax
 cf9:	89 c6                	mov    %eax,%esi
 cfb:	48 8d 3d 6e 01 00 00 	lea    0x16e(%rip),%rdi        # e70 <_IO_stdin_used+0xa0>
 d02:	b8 00 00 00 00       	mov    $0x0,%eax
 d07:	e8 34 f9 ff ff       	callq  640 <printf@plt>
 d0c:	bf 0a 00 00 00       	mov    $0xa,%edi
 d11:	e8 0a f9 ff ff       	callq  620 <putchar@plt>
 d16:	8b 45 d8             	mov    -0x28(%rbp),%eax
 d19:	83 e8 01             	sub    $0x1,%eax
 d1c:	89 45 d8             	mov    %eax,-0x28(%rbp)
 d1f:	8b 45 d8             	mov    -0x28(%rbp),%eax
 d22:	85 c0                	test   %eax,%eax
 d24:	0f 89 1a ff ff ff    	jns    c44 <main+0xe4>
 d2a:	b8 00 00 00 00       	mov    $0x0,%eax
 d2f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 d33:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 d3a:	00 00 
 d3c:	74 05                	je     d43 <main+0x1e3>
 d3e:	e8 ed f8 ff ff       	callq  630 <__stack_chk_fail@plt>
 d43:	c9                   	leaveq 
 d44:	c3                   	retq   
 d45:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 d4c:	00 00 00 
 d4f:	90                   	nop

0000000000000d50 <__libc_csu_init>:
 d50:	41 57                	push   %r15
 d52:	41 56                	push   %r14
 d54:	49 89 d7             	mov    %rdx,%r15
 d57:	41 55                	push   %r13
 d59:	41 54                	push   %r12
 d5b:	4c 8d 25 3e 10 20 00 	lea    0x20103e(%rip),%r12        # 201da0 <__frame_dummy_init_array_entry>
 d62:	55                   	push   %rbp
 d63:	48 8d 2d 3e 10 20 00 	lea    0x20103e(%rip),%rbp        # 201da8 <__init_array_end>
 d6a:	53                   	push   %rbx
 d6b:	41 89 fd             	mov    %edi,%r13d
 d6e:	49 89 f6             	mov    %rsi,%r14
 d71:	4c 29 e5             	sub    %r12,%rbp
 d74:	48 83 ec 08          	sub    $0x8,%rsp
 d78:	48 c1 fd 03          	sar    $0x3,%rbp
 d7c:	e8 77 f8 ff ff       	callq  5f8 <_init>
 d81:	48 85 ed             	test   %rbp,%rbp
 d84:	74 20                	je     da6 <__libc_csu_init+0x56>
 d86:	31 db                	xor    %ebx,%ebx
 d88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 d8f:	00 
 d90:	4c 89 fa             	mov    %r15,%rdx
 d93:	4c 89 f6             	mov    %r14,%rsi
 d96:	44 89 ef             	mov    %r13d,%edi
 d99:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 d9d:	48 83 c3 01          	add    $0x1,%rbx
 da1:	48 39 dd             	cmp    %rbx,%rbp
 da4:	75 ea                	jne    d90 <__libc_csu_init+0x40>
 da6:	48 83 c4 08          	add    $0x8,%rsp
 daa:	5b                   	pop    %rbx
 dab:	5d                   	pop    %rbp
 dac:	41 5c                	pop    %r12
 dae:	41 5d                	pop    %r13
 db0:	41 5e                	pop    %r14
 db2:	41 5f                	pop    %r15
 db4:	c3                   	retq   
 db5:	90                   	nop
 db6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 dbd:	00 00 00 

0000000000000dc0 <__libc_csu_fini>:
 dc0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000dc4 <_fini>:
 dc4:	48 83 ec 08          	sub    $0x8,%rsp
 dc8:	48 83 c4 08          	add    $0x8,%rsp
 dcc:	c3                   	retq   

Disassembly of section .rodata:

0000000000000dd0 <_IO_stdin_used>:
 dd0:	01 00                	add    %eax,(%rax)
 dd2:	02 00                	add    (%rax),%al
 dd4:	00 00                	add    %al,(%rax)
 dd6:	00 00                	add    %al,(%rax)
 dd8:	54                   	push   %rsp
 dd9:	68 65 20 4d 61       	pushq  $0x614d2065
 dde:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
 de5:	64 
 de6:	73 20                	jae    e08 <_IO_stdin_used+0x38>
 de8:	61                   	(bad)  
 de9:	72 65                	jb     e50 <_IO_stdin_used+0x80>
 deb:	20 53 71             	and    %dl,0x71(%rbx)
 dee:	75 65                	jne    e55 <_IO_stdin_used+0x85>
 df0:	61                   	(bad)  
 df1:	6d                   	insl   (%dx),%es:(%rdi)
 df2:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
 df9:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
 e00:	00 25 70 00 25 64    	add    %ah,0x64250070(%rip)        # 64250e76 <_end+0x6402e8b6>
 e06:	00 52 65             	add    %dl,0x65(%rdx)
 e09:	61                   	(bad)  
 e0a:	64 69 6e 67 20 25 64 	imul   $0x20642520,%fs:0x67(%rsi),%ebp
 e11:	20 
 e12:	62                   	(bad)  
 e13:	79 74                	jns    e89 <_IO_stdin_used+0xb9>
 e15:	65 73 3a             	gs jae e52 <_IO_stdin_used+0x82>
 e18:	0a 00                	or     (%rax),%al
 e1a:	00 00                	add    %al,(%rax)
 e1c:	00 00                	add    %al,(%rax)
 e1e:	00 00                	add    %al,(%rax)
 e20:	52                   	push   %rdx
 e21:	65 61                	gs (bad) 
 e23:	64 69 6e 67 20 61 74 	imul   $0x20746120,%fs:0x67(%rsi),%ebp
 e2a:	20 
 e2b:	6d                   	insl   (%dx),%es:(%rdi)
 e2c:	61                   	(bad)  
 e2d:	6c                   	insb   (%dx),%es:(%rdi)
 e2e:	69 63 69 6f 75 73 5f 	imul   $0x5f73756f,0x69(%rbx),%esp
 e35:	78 20                	js     e57 <_IO_stdin_used+0x87>
 e37:	3d 20 25 70 2e       	cmp    $0x2e702520,%eax
 e3c:	2e 2e 20 00          	cs and %al,%cs:(%rax)
 e40:	53                   	push   %rbx
 e41:	75 63                	jne    ea6 <__GNU_EH_FRAME_HDR+0x16>
 e43:	63 65 73             	movslq 0x73(%rbp),%esp
 e46:	73 00                	jae    e48 <_IO_stdin_used+0x78>
 e48:	55                   	push   %rbp
 e49:	6e                   	outsb  %ds:(%rsi),(%dx)
 e4a:	63 6c 65 61          	movslq 0x61(%rbp,%riz,2),%ebp
 e4e:	72 00                	jb     e50 <_IO_stdin_used+0x80>
 e50:	25 73 3a 20 00       	and    $0x203a73,%eax
 e55:	30 78 25             	xor    %bh,0x25(%rax)
 e58:	30 32                	xor    %dh,(%rdx)
 e5a:	58                   	pop    %rax
 e5b:	3d 27 25 63 27       	cmp    $0x27632527,%eax
 e60:	20 73 63             	and    %dh,0x63(%rbx)
 e63:	6f                   	outsl  %ds:(%rsi),(%dx)
 e64:	72 65                	jb     ecb <__GNU_EH_FRAME_HDR+0x3b>
 e66:	3d 25 64 20 20       	cmp    $0x20206425,%eax
 e6b:	20 20                	and    %ah,(%rax)
 e6d:	00 00                	add    %al,(%rax)
 e6f:	00 28                	add    %ch,(%rax)
 e71:	73 65                	jae    ed8 <__GNU_EH_FRAME_HDR+0x48>
 e73:	63 6f 6e             	movslq 0x6e(%rdi),%ebp
 e76:	64 20 62 65          	and    %ah,%fs:0x65(%rdx)
 e7a:	73 74                	jae    ef0 <__GNU_EH_FRAME_HDR+0x60>
 e7c:	3a 20                	cmp    (%rax),%ah
 e7e:	30 78 25             	xor    %bh,0x25(%rax)
 e81:	30 32                	xor    %dh,(%rdx)
 e83:	58                   	pop    %rax
 e84:	20 73 63             	and    %dh,0x63(%rbx)
 e87:	6f                   	outsl  %ds:(%rsi),(%dx)
 e88:	72 65                	jb     eef <__GNU_EH_FRAME_HDR+0x5f>
 e8a:	3d 25 64 29 00       	cmp    $0x296425,%eax

Disassembly of section .eh_frame_hdr:

0000000000000e90 <__GNU_EH_FRAME_HDR>:
 e90:	01 1b                	add    %ebx,(%rbx)
 e92:	03 3b                	add    (%rbx),%edi
 e94:	4c 00 00             	rex.WR add %r8b,(%rax)
 e97:	00 08                	add    %cl,(%rax)
 e99:	00 00                	add    %al,(%rax)
 e9b:	00 80 f7 ff ff 98    	add    %al,-0x67000009(%rax)
 ea1:	00 00                	add    %al,(%rax)
 ea3:	00 d0                	add    %dl,%al
 ea5:	f7 ff                	idiv   %edi
 ea7:	ff c0                	inc    %eax
 ea9:	00 00                	add    %al,(%rax)
 eab:	00 e0                	add    %ah,%al
 ead:	f7 ff                	idiv   %edi
 eaf:	ff 68 00             	ljmp   *0x0(%rax)
 eb2:	00 00                	add    %al,(%rax)
 eb4:	ea                   	(bad)  
 eb5:	f8                   	clc    
 eb6:	ff                   	(bad)  
 eb7:	ff                   	(bad)  
 eb8:	d8 00                	fadds  (%rax)
 eba:	00 00                	add    %al,(%rax)
 ebc:	37                   	(bad)  
 ebd:	f9                   	stc    
 ebe:	ff                   	(bad)  
 ebf:	ff                   	(bad)  
 ec0:	f8                   	clc    
 ec1:	00 00                	add    %al,(%rax)
 ec3:	00 d0                	add    %dl,%al
 ec5:	fc                   	cld    
 ec6:	ff                   	(bad)  
 ec7:	ff 1c 01             	lcall  *(%rcx,%rax,1)
 eca:	00 00                	add    %al,(%rax)
 ecc:	c0 fe ff             	sar    $0xff,%dh
 ecf:	ff 40 01             	incl   0x1(%rax)
 ed2:	00 00                	add    %al,(%rax)
 ed4:	30 ff                	xor    %bh,%bh
 ed6:	ff                   	(bad)  
 ed7:	ff                   	.byte 0xff
 ed8:	88 01                	mov    %al,(%rcx)
	...

Disassembly of section .eh_frame:

0000000000000ee0 <__FRAME_END__-0x14c>:
     ee0:	14 00                	adc    $0x0,%al
     ee2:	00 00                	add    %al,(%rax)
     ee4:	00 00                	add    %al,(%rax)
     ee6:	00 00                	add    %al,(%rax)
     ee8:	01 7a 52             	add    %edi,0x52(%rdx)
     eeb:	00 01                	add    %al,(%rcx)
     eed:	78 10                	js     eff <__GNU_EH_FRAME_HDR+0x6f>
     eef:	01 1b                	add    %ebx,(%rbx)
     ef1:	0c 07                	or     $0x7,%al
     ef3:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
     ef9:	00 00                	add    %al,(%rax)
     efb:	00 1c 00             	add    %bl,(%rax,%rax,1)
     efe:	00 00                	add    %al,(%rax)
     f00:	70 f7                	jo     ef9 <__GNU_EH_FRAME_HDR+0x69>
     f02:	ff                   	(bad)  
     f03:	ff 2b                	ljmp   *(%rbx)
	...
     f0d:	00 00                	add    %al,(%rax)
     f0f:	00 14 00             	add    %dl,(%rax,%rax,1)
     f12:	00 00                	add    %al,(%rax)
     f14:	00 00                	add    %al,(%rax)
     f16:	00 00                	add    %al,(%rax)
     f18:	01 7a 52             	add    %edi,0x52(%rdx)
     f1b:	00 01                	add    %al,(%rcx)
     f1d:	78 10                	js     f2f <__GNU_EH_FRAME_HDR+0x9f>
     f1f:	01 1b                	add    %ebx,(%rbx)
     f21:	0c 07                	or     $0x7,%al
     f23:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
     f29:	00 00                	add    %al,(%rax)
     f2b:	00 1c 00             	add    %bl,(%rax,%rax,1)
     f2e:	00 00                	add    %al,(%rax)
     f30:	e0 f6                	loopne f28 <__GNU_EH_FRAME_HDR+0x98>
     f32:	ff                   	(bad)  
     f33:	ff 50 00             	callq  *0x0(%rax)
     f36:	00 00                	add    %al,(%rax)
     f38:	00 0e                	add    %cl,(%rsi)
     f3a:	10 46 0e             	adc    %al,0xe(%rsi)
     f3d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
     f40:	0b 77 08             	or     0x8(%rdi),%esi
     f43:	80 00 3f             	addb   $0x3f,(%rax)
     f46:	1a 3b                	sbb    (%rbx),%bh
     f48:	2a 33                	sub    (%rbx),%dh
     f4a:	24 22                	and    $0x22,%al
     f4c:	00 00                	add    %al,(%rax)
     f4e:	00 00                	add    %al,(%rax)
     f50:	14 00                	adc    $0x0,%al
     f52:	00 00                	add    %al,(%rax)
     f54:	44 00 00             	add    %r8b,(%rax)
     f57:	00 08                	add    %cl,(%rax)
     f59:	f7 ff                	idiv   %edi
     f5b:	ff 08                	decl   (%rax)
	...
     f65:	00 00                	add    %al,(%rax)
     f67:	00 1c 00             	add    %bl,(%rax,%rax,1)
     f6a:	00 00                	add    %al,(%rax)
     f6c:	5c                   	pop    %rsp
     f6d:	00 00                	add    %al,(%rax)
     f6f:	00 0a                	add    %cl,(%rdx)
     f71:	f8                   	clc    
     f72:	ff                   	(bad)  
     f73:	ff 4d 00             	decl   0x0(%rbp)
     f76:	00 00                	add    %al,(%rax)
     f78:	00 41 0e             	add    %al,0xe(%rcx)
     f7b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     f81:	02 48 0c             	add    0xc(%rax),%cl
     f84:	07                   	(bad)  
     f85:	08 00                	or     %al,(%rax)
     f87:	00 20                	add    %ah,(%rax)
     f89:	00 00                	add    %al,(%rax)
     f8b:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
     f8f:	00 37                	add    %dh,(%rdi)
     f91:	f8                   	clc    
     f92:	ff                   	(bad)  
     f93:	ff 99 03 00 00 00    	lcall  *0x3(%rcx)
     f99:	41 0e                	rex.B (bad) 
     f9b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     fa1:	45 83 03 03          	rex.RB addl $0x3,(%r11)
     fa5:	8f 03                	popq   (%rbx)
     fa7:	0c 07                	or     $0x7,%al
     fa9:	08 00                	or     %al,(%rax)
     fab:	00 20                	add    %ah,(%rax)
     fad:	00 00                	add    %al,(%rax)
     faf:	00 a0 00 00 00 ac    	add    %ah,-0x54000000(%rax)
     fb5:	fb                   	sti    
     fb6:	ff                   	(bad)  
     fb7:	ff e5                	jmpq   *%rbp
     fb9:	01 00                	add    %eax,(%rax)
     fbb:	00 00                	add    %al,(%rax)
     fbd:	41 0e                	rex.B (bad) 
     fbf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
     fc5:	03 e0                	add    %eax,%esp
     fc7:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
     fca:	08 00                	or     %al,(%rax)
     fcc:	00 00                	add    %al,(%rax)
     fce:	00 00                	add    %al,(%rax)
     fd0:	44 00 00             	add    %r8b,(%rax)
     fd3:	00 c4                	add    %al,%ah
     fd5:	00 00                	add    %al,(%rax)
     fd7:	00 78 fd             	add    %bh,-0x3(%rax)
     fda:	ff                   	(bad)  
     fdb:	ff 65 00             	jmpq   *0x0(%rbp)
     fde:	00 00                	add    %al,(%rax)
     fe0:	00 42 0e             	add    %al,0xe(%rdx)
     fe3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
     fe9:	8e 03                	mov    (%rbx),%es
     feb:	45 0e                	rex.RB (bad) 
     fed:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
     ff3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301e41 <_end+0xffffffff860df881>
     ff9:	06                   	(bad)  
     ffa:	48 0e                	rex.W (bad) 
     ffc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
    1002:	72 0e                	jb     1012 <__GNU_EH_FRAME_HDR+0x182>
    1004:	38 41 0e             	cmp    %al,0xe(%rcx)
    1007:	30 41 0e             	xor    %al,0xe(%rcx)
    100a:	28 42 0e             	sub    %al,0xe(%rdx)
    100d:	20 42 0e             	and    %al,0xe(%rdx)
    1010:	18 42 0e             	sbb    %al,0xe(%rdx)
    1013:	10 42 0e             	adc    %al,0xe(%rdx)
    1016:	08 00                	or     %al,(%rax)
    1018:	10 00                	adc    %al,(%rax)
    101a:	00 00                	add    %al,(%rax)
    101c:	0c 01                	or     $0x1,%al
    101e:	00 00                	add    %al,(%rax)
    1020:	a0 fd ff ff 02 00 00 	movabs 0x2fffffd,%al
    1027:	00 00 
    1029:	00 00                	add    %al,(%rax)
	...

000000000000102c <__FRAME_END__>:
    102c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201da0 <__frame_dummy_init_array_entry>:
  201da0:	70 07                	jo     201da9 <__init_array_end+0x1>
  201da2:	00 00                	add    %al,(%rax)
  201da4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201da8 <__do_global_dtors_aux_fini_array_entry>:
  201da8:	30 07                	xor    %al,(%rdi)
  201daa:	00 00                	add    %al,(%rax)
  201dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201db0 <_DYNAMIC>:
  201db0:	01 00                	add    %eax,(%rax)
  201db2:	00 00                	add    %al,(%rax)
  201db4:	00 00                	add    %al,(%rax)
  201db6:	00 00                	add    %al,(%rax)
  201db8:	01 00                	add    %eax,(%rax)
  201dba:	00 00                	add    %al,(%rax)
  201dbc:	00 00                	add    %al,(%rax)
  201dbe:	00 00                	add    %al,(%rax)
  201dc0:	0c 00                	or     $0x0,%al
  201dc2:	00 00                	add    %al,(%rax)
  201dc4:	00 00                	add    %al,(%rax)
  201dc6:	00 00                	add    %al,(%rax)
  201dc8:	f8                   	clc    
  201dc9:	05 00 00 00 00       	add    $0x0,%eax
  201dce:	00 00                	add    %al,(%rax)
  201dd0:	0d 00 00 00 00       	or     $0x0,%eax
  201dd5:	00 00                	add    %al,(%rax)
  201dd7:	00 c4                	add    %al,%ah
  201dd9:	0d 00 00 00 00       	or     $0x0,%eax
  201dde:	00 00                	add    %al,(%rax)
  201de0:	19 00                	sbb    %eax,(%rax)
  201de2:	00 00                	add    %al,(%rax)
  201de4:	00 00                	add    %al,(%rax)
  201de6:	00 00                	add    %al,(%rax)
  201de8:	a0 1d 20 00 00 00 00 	movabs 0x1b0000000000201d,%al
  201def:	00 1b 
  201df1:	00 00                	add    %al,(%rax)
  201df3:	00 00                	add    %al,(%rax)
  201df5:	00 00                	add    %al,(%rax)
  201df7:	00 08                	add    %cl,(%rax)
  201df9:	00 00                	add    %al,(%rax)
  201dfb:	00 00                	add    %al,(%rax)
  201dfd:	00 00                	add    %al,(%rax)
  201dff:	00 1a                	add    %bl,(%rdx)
  201e01:	00 00                	add    %al,(%rax)
  201e03:	00 00                	add    %al,(%rax)
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 a8 1d 20 00 00    	add    %ch,0x201d(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  201e12:	00 00                	add    %al,(%rax)
  201e14:	00 00                	add    %al,(%rax)
  201e16:	00 00                	add    %al,(%rax)
  201e18:	08 00                	or     %al,(%rax)
  201e1a:	00 00                	add    %al,(%rax)
  201e1c:	00 00                	add    %al,(%rax)
  201e1e:	00 00                	add    %al,(%rax)
  201e20:	f5                   	cmc    
  201e21:	fe                   	(bad)  
  201e22:	ff 6f 00             	ljmp   *0x0(%rdi)
  201e25:	00 00                	add    %al,(%rax)
  201e27:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201e2d:	00 00                	add    %al,(%rax)
  201e2f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201e35 <_DYNAMIC+0x85>
  201e35:	00 00                	add    %al,(%rax)
  201e37:	00 a8 03 00 00 00    	add    %ch,0x3(%rax)
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 06                	add    %al,(%rsi)
  201e41:	00 00                	add    %al,(%rax)
  201e43:	00 00                	add    %al,(%rax)
  201e45:	00 00                	add    %al,(%rax)
  201e47:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 0a                	add    %cl,(%rdx)
  201e51:	00 00                	add    %al,(%rax)
  201e53:	00 00                	add    %al,(%rax)
  201e55:	00 00                	add    %al,(%rax)
  201e57:	00 c1                	add    %al,%cl
  201e59:	00 00                	add    %al,(%rax)
  201e5b:	00 00                	add    %al,(%rax)
  201e5d:	00 00                	add    %al,(%rax)
  201e5f:	00 0b                	add    %cl,(%rbx)
  201e61:	00 00                	add    %al,(%rax)
  201e63:	00 00                	add    %al,(%rax)
  201e65:	00 00                	add    %al,(%rax)
  201e67:	00 18                	add    %bl,(%rax)
  201e69:	00 00                	add    %al,(%rax)
  201e6b:	00 00                	add    %al,(%rax)
  201e6d:	00 00                	add    %al,(%rax)
  201e6f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e75 <_DYNAMIC+0xc5>
	...
  201e7d:	00 00                	add    %al,(%rax)
  201e7f:	00 03                	add    %al,(%rbx)
  201e81:	00 00                	add    %al,(%rax)
  201e83:	00 00                	add    %al,(%rax)
  201e85:	00 00                	add    %al,(%rax)
  201e87:	00 a0 1f 20 00 00    	add    %ah,0x201f(%rax)
  201e8d:	00 00                	add    %al,(%rax)
  201e8f:	00 02                	add    %al,(%rdx)
  201e91:	00 00                	add    %al,(%rax)
  201e93:	00 00                	add    %al,(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 60 00             	add    %ah,0x0(%rax)
  201e9a:	00 00                	add    %al,(%rax)
  201e9c:	00 00                	add    %al,(%rax)
  201e9e:	00 00                	add    %al,(%rax)
  201ea0:	14 00                	adc    $0x0,%al
  201ea2:	00 00                	add    %al,(%rax)
  201ea4:	00 00                	add    %al,(%rax)
  201ea6:	00 00                	add    %al,(%rax)
  201ea8:	07                   	(bad)  
  201ea9:	00 00                	add    %al,(%rax)
  201eab:	00 00                	add    %al,(%rax)
  201ead:	00 00                	add    %al,(%rax)
  201eaf:	00 17                	add    %dl,(%rdi)
  201eb1:	00 00                	add    %al,(%rax)
  201eb3:	00 00                	add    %al,(%rax)
  201eb5:	00 00                	add    %al,(%rax)
  201eb7:	00 98 05 00 00 00    	add    %bl,0x5(%rax)
  201ebd:	00 00                	add    %al,(%rax)
  201ebf:	00 07                	add    %al,(%rdi)
  201ec1:	00 00                	add    %al,(%rax)
  201ec3:	00 00                	add    %al,(%rax)
  201ec5:	00 00                	add    %al,(%rax)
  201ec7:	00 c0                	add    %al,%al
  201ec9:	04 00                	add    $0x0,%al
  201ecb:	00 00                	add    %al,(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 08                	add    %cl,(%rax)
  201ed1:	00 00                	add    %al,(%rax)
  201ed3:	00 00                	add    %al,(%rax)
  201ed5:	00 00                	add    %al,(%rax)
  201ed7:	00 d8                	add    %bl,%al
  201ed9:	00 00                	add    %al,(%rax)
  201edb:	00 00                	add    %al,(%rax)
  201edd:	00 00                	add    %al,(%rax)
  201edf:	00 09                	add    %cl,(%rcx)
  201ee1:	00 00                	add    %al,(%rax)
  201ee3:	00 00                	add    %al,(%rax)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 18                	add    %bl,(%rax)
  201ee9:	00 00                	add    %al,(%rax)
  201eeb:	00 00                	add    %al,(%rax)
  201eed:	00 00                	add    %al,(%rax)
  201eef:	00 1e                	add    %bl,(%rsi)
  201ef1:	00 00                	add    %al,(%rax)
  201ef3:	00 00                	add    %al,(%rax)
  201ef5:	00 00                	add    %al,(%rax)
  201ef7:	00 08                	add    %cl,(%rax)
  201ef9:	00 00                	add    %al,(%rax)
  201efb:	00 00                	add    %al,(%rax)
  201efd:	00 00                	add    %al,(%rax)
  201eff:	00 fb                	add    %bh,%bl
  201f01:	ff                   	(bad)  
  201f02:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f05:	00 00                	add    %al,(%rax)
  201f07:	00 01                	add    %al,(%rcx)
  201f09:	00 00                	add    %al,(%rax)
  201f0b:	08 00                	or     %al,(%rax)
  201f0d:	00 00                	add    %al,(%rax)
  201f0f:	00 fe                	add    %bh,%dh
  201f11:	ff                   	(bad)  
  201f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f15:	00 00                	add    %al,(%rax)
  201f17:	00 80 04 00 00 00    	add    %al,0x4(%rax)
  201f1d:	00 00                	add    %al,(%rax)
  201f1f:	00 ff                	add    %bh,%bh
  201f21:	ff                   	(bad)  
  201f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f25:	00 00                	add    %al,(%rax)
  201f27:	00 01                	add    %al,(%rcx)
  201f29:	00 00                	add    %al,(%rax)
  201f2b:	00 00                	add    %al,(%rax)
  201f2d:	00 00                	add    %al,(%rax)
  201f2f:	00 f0                	add    %dh,%al
  201f31:	ff                   	(bad)  
  201f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f35:	00 00                	add    %al,(%rax)
  201f37:	00 6a 04             	add    %ch,0x4(%rdx)
  201f3a:	00 00                	add    %al,(%rax)
  201f3c:	00 00                	add    %al,(%rax)
  201f3e:	00 00                	add    %al,(%rax)
  201f40:	f9                   	stc    
  201f41:	ff                   	(bad)  
  201f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f45:	00 00                	add    %al,(%rax)
  201f47:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000201fa0 <_GLOBAL_OFFSET_TABLE_>:
  201fa0:	b0 1d                	mov    $0x1d,%al
  201fa2:	20 00                	and    %al,(%rax)
	...
  201fb8:	26 06                	es (bad) 
  201fba:	00 00                	add    %al,(%rax)
  201fbc:	00 00                	add    %al,(%rax)
  201fbe:	00 00                	add    %al,(%rax)
  201fc0:	36 06                	ss (bad) 
  201fc2:	00 00                	add    %al,(%rax)
  201fc4:	00 00                	add    %al,(%rax)
  201fc6:	00 00                	add    %al,(%rax)
  201fc8:	46 06                	rex.RX (bad) 
  201fca:	00 00                	add    %al,(%rax)
  201fcc:	00 00                	add    %al,(%rax)
  201fce:	00 00                	add    %al,(%rax)
  201fd0:	56                   	push   %rsi
  201fd1:	06                   	(bad)  
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
	...

0000000000202020 <array1_size>:
  202020:	10 00                	adc    %al,(%rax)
	...

0000000000202040 <array1>:
  202040:	01 02                	add    %eax,(%rdx)
  202042:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  202049:	0a 0b                	or     (%rbx),%cl
  20204b:	0c 0d                	or     $0xd,%al
  20204d:	0e                   	(bad)  
  20204e:	0f 10 00             	movups (%rax),%xmm0
	...

00000000002020e0 <secret>:
  2020e0:	d8 0d 00 00 00 00    	fmuls  0x0(%rip)        # 2020e6 <secret+0x6>
	...

Disassembly of section .bss:

0000000000202100 <completed.7697>:
	...

0000000000202120 <temp>:
	...

0000000000202140 <results.23457>:
	...

0000000000202540 <unused1>:
	...

0000000000202580 <array2>:
	...

0000000000222580 <unused2>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x580>
   a:	74 75                	je     81 <_init-0x577>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75404f88>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x569>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
